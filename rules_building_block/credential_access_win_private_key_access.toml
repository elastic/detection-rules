[metadata]
creation_date = "2023/08/21"
integration = ["endpoint", "windows", "system"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = "Attackers may try to access private keys, e.g. ssh, in order to gain further authenticated access to the environment.\n"
from = "now-119m"
index = ["logs-endpoint.events.process-*", "logs-windows.sysmon_operational-*", "endgame-*", "logs-system.security*", "winlogbeat-*"]
interval = "60m"
language = "eql"
license = "Elastic License v2"
name = "Attempted Private Key Access"
risk_score = 21
rule_id = "c55badd3-3e61-4292-836f-56209dc8a601"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
    "Rule Type: BBR",
    "Data Source: Sysmon",
    "Data Source: Elastic Endgame",
    "Data Source: System",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  process.args : ("*.pem *", "*.pem", "*.id_rsa*") and
  not process.args: ("--tls-cert", "--ssl-cert") and
  not process.executable : (
    "?:\\ProgramData\\Logishrd\\LogiOptions\\Software\\*\\LogiLuUpdater.exe",
    "?:\\Program Files\\Elastic\\Agent\\data\\*\\osqueryd.exe",
    "?:\\Program Files\\Guardicore\\gc-controller.exe",
    "?:\\Program Files\\Guardicore\\gc-deception-agent.exe",
    "?:\\Program Files\\Guardicore\\gc-detection-agent.exe",
    "?:\\Program Files\\Guardicore\\gc-enforcement-agent.exe",
    "?:\\Program Files\\Guardicore\\gc-guest-agent.exe",
    "?:\\Program Files\\Logi\\LogiBolt\\LogiBoltUpdater.exe",
    "?:\\Program Files (x86)\\Schneider Electric EcoStruxure\\Building Operation 5.0\\Device Administrator\\Python\\python.exe",
    "?:\\Program Files\\Splunk\\bin\\openssl.exe",
    "?:\\Program Files\\SplunkUniversalForwarder\\bin\\openssl.exe",
    "?:\\Users\\*\\AppData\\Local\\Logi\\LogiBolt\\LogiBoltUpdater.exe",
    "?:\\Windows\\system32\\icacls.exe",
    "?:\\Windows\\System32\\OpenSSH\\*"
  )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Attempted Private Key Access

Private keys are critical for secure authentication in environments, often used in SSH for encrypted communication. Adversaries may target these keys to gain unauthorized access. The detection rule identifies suspicious processes on Windows systems attempting to access files typically associated with private keys, while excluding legitimate applications. This helps in pinpointing potential credential access threats by filtering out benign activities.

### Possible investigation steps

- Review the alert details to identify the specific process and arguments that triggered the rule, focusing on the `process.args` field to understand what files were accessed.
- Check the `process.executable` field to determine the exact executable that attempted to access the private key files and verify if it is a known or expected application in the environment.
- Investigate the parent process of the suspicious executable using process lineage data to understand how the process was initiated and if it was spawned by a legitimate application.
- Use Osquery to list all processes currently running on the host that match the suspicious executable path. Example query: `SELECT pid, name, path FROM processes WHERE path LIKE 'C:\\\\Path\\\\To\\\\Suspicious\\\\Executable\\\\%'`.
- Examine the user context under which the suspicious process was executed by reviewing the `user.name` field to determine if it aligns with expected user behavior.
- Analyze recent login events on the host to identify any unusual or unauthorized access patterns that might correlate with the attempted private key access.
- Check for any recent file modifications or access events on the private key files by reviewing file system audit logs or using Osquery to query file access times.
- Investigate network connections initiated by the suspicious process to identify any potential exfiltration attempts or communication with known malicious IP addresses.
- Review historical data for any previous alerts or activities associated with the same executable or user to identify patterns or repeated attempts.
- Correlate the findings with threat intelligence sources to determine if the behavior matches any known attack patterns or indicators of compromise.

### False positive analysis

- Known false positives may include legitimate software or system processes that access private key files for valid reasons, such as automated updates or system maintenance tasks.
- Applications like LogiLuUpdater.exe, osqueryd.exe, and various Guardicore agents are known to access files that match private key patterns but are typically benign.
- Users can manage these false positives by creating exceptions for these known legitimate processes in the detection rule, ensuring they are not flagged as suspicious.
- Regularly review and update the list of excluded executables to include any new legitimate applications that may trigger the rule.
- Consider the context of the process execution, such as the user account under which the process runs and the frequency of access, to better assess the legitimacy of the activity.
- Implement logging and monitoring to track any changes in behavior of these processes, which might indicate a shift from benign to potentially malicious activity.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access.
- Conduct a thorough investigation to identify the source and scope of the attempted access, focusing on the processes and files involved.
- Review system logs and security alerts to gather additional context and evidence of the intrusion attempt.
- Change all potentially compromised credentials, including SSH keys and any other authentication mechanisms used on the affected system.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging policies to capture detailed process execution and file access events for future investigations.
- Integrate threat intelligence feeds and security tools to improve detection capabilities and correlate alerts with known threat actors.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are installed.
- Conduct a post-incident review to identify gaps in security controls and update policies and procedures accordingly.
- Implement hardening measures such as restricting access to private key files, using multi-factor authentication, and regularly rotating keys."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.004"
name = "Private Keys"
reference = "https://attack.mitre.org/techniques/T1552/004/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

