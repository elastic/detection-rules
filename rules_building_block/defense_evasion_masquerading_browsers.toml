[metadata]
bypass_bbr_timing = true
creation_date = "2023/08/02"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/10"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies suspicious instances of browser processes, such as unsigned or signed with unusual certificates, that can
indicate an attempt to conceal malicious activity, bypass security features such as allowlists, or trick users into
executing malware.
"""
from = "now-9m"
index = ["logs-endpoint.events.process-*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Masquerading as Browser Process"
risk_score = 21
rule_id = "5b9eb30f-87d6-45f4-9289-2bf2024f0376"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Tactic: Persistence",
    "Rule Type: BBR",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  (
    /* Chrome Related Processes */
    (
      process.name : (
        "chrome.exe", "GoogleUpdate.exe", "GoogleCrashHandler64.exe", "GoogleCrashHandler.exe",
        "GoogleUpdateComRegisterShell64.exe", "GoogleUpdateSetup.exe", "GoogleUpdateOnDemand.exe",
        "chrome_proxy.exe", "remote_assistance_host.exe", "remoting_native_messaging_host.exe",
        "GoogleUpdateBroker.exe"
      ) and
      not (process.code_signature.subject_name in ("Google LLC", "Google Inc") and process.code_signature.trusted == true) and
      not (
        process.executable : (
          "?:\\Program Files\\HP\\Sure Click\\servers\\chrome.exe",
          "?:\\Program Files\\HP\\Sure Click\\*\\servers\\chrome.exe"
        ) and
        process.code_signature.subject_name == "Bromium, Inc." and process.code_signature.trusted == true
      ) and
      not (
        process.executable : "?:\\Program Files\\dynatrace\\synthetic\\Chrome-bin\\chrome.exe" and
        process.code_signature.subject_name == "Dynatrace LLC" and process.code_signature.trusted == true
      ) and
      not (
        process.executable : "?:\\Users\\*\\Desktop\\CentBrowser\\chrome.exe" and
        process.code_signature.subject_name == "MV INFORMATICA NORDESTE LTDA" and process.code_signature.trusted == true
      ) and
      not (
        process.executable : (
          "?:\\Users\\*\\AppData\\Local\\ms-playwright\\chromium-*\\chrome-win\\chrome.exe",
          "?:\\Users\\*\\AppData\\Local\\Programs\\synthetics-recorder\\resources\\local-browsers\\chromium-*\\chrome-win\\chrome.exe",
          "*\\node_modules\\puppeteer\\*\\win64-*\\chrome-win\\chrome.exe",
          "?:\\Program Files (x86)\\Invicti Professional Edition\\chromium\\chrome.exe",
          "?:\\Program Files\\End2End, Inc\\ARMS Html Engine\\chrome.exe",
          "?:\\Users\\*\\AppData\\Local\\*BurpSuitePro\\burpbrowser\\*\\chrome.exe",
          "?:\\Users\\*\\AppData\\Roaming\\*BurpSuite\\burpbrowser\\*\\chrome.exe",
          "?:\\Gradient\\Connector.Service\\runtimes\\win-x64\\native\\chrome.exe",
          "?:\\Program Files (x86)\\Netsparker Enterprise Agent-?\\chromium\\chrome.exe"
        ) and process.args: (
                "--enable-features=NetworkService,NetworkServiceInProcess",
                "--type=crashpad-handler", "--enable-automation", "--disable-xss-auditor"
              )
      )
    ) or

    /* MS Edge Related Processes */
    (
      process.name : (
        "msedge.exe", "MicrosoftEdgeUpdate.exe", "identity_helper.exe", "msedgewebview2.exe",
        "MicrosoftEdgeWebview2Setup.exe", "MicrosoftEdge_X*.exe", "msedge_proxy.exe",
        "MicrosoftEdgeUpdateCore.exe", "MicrosoftEdgeUpdateBroker.exe", "MicrosoftEdgeUpdateSetup_X*.exe",
        "MicrosoftEdgeUpdateComRegisterShell64.exe", "msedgerecovery.exe", "MicrosoftEdgeUpdateSetup.exe"
      ) and
      not (process.code_signature.subject_name == "Microsoft Corporation" and process.code_signature.trusted == true) and
      not (
        process.name : "msedgewebview2.exe" and
        process.code_signature.subject_name in ("Bromium, Inc.", "Amazon.com Services LLC", "Code Systems Corporation") and
        process.code_signature.trusted == true
      ) and
      not process.executable : "?:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\MicrosoftEdgeUpdate.exe"
    ) or

    /* Brave Related Processes */
    (
      process.name : (
        "brave.exe", "BraveUpdate.exe", "BraveCrashHandler64.exe", "BraveCrashHandler.exe",
        "BraveUpdateOnDemand.exe", "brave_vpn_helper.exe", "BraveUpdateSetup*.exe",
        "BraveUpdateComRegisterShell64.exe"
      ) and
      not (process.code_signature.subject_name in ("Brave Software, Inc.", "Google Inc") and process.code_signature.trusted == true)
    ) or

    /* Firefox Related Processes */
    (
      process.name : (
        "firefox.exe", "pingsender.exe", "default-browser-agent.exe", "maintenanceservice.exe",
        "plugin-container.exe", "maintenanceservice_tmp.exe", "maintenanceservice_installer.exe",
        "minidump-analyzer.exe"
      ) and
      not (process.code_signature.subject_name == "Mozilla Corporation" and process.code_signature.trusted == true) and
      not (
        process.name : "default-browser-agent.exe" and
        process.code_signature.subject_name in ("WATERFOX LIMITED") and process.code_signature.trusted == true
      ) and
      not process.hash.sha256 == "ddc7a6c3a4b50d23daffe8e364c575fd7df9af9711b14d153b09553ddd3670a0" and
      not process.executable : "?:\\Users\\*\\AppData\\Local\\ms-playwright\\firefox-*\\firefox\\firefox.exe"
    ) or

    /* Island Related Processes */
    (
      process.name : (
        "Island.exe", "IslandUpdate.exe", "IslandCrashHandler.exe", "IslandCrashHandler64.exe",
        "IslandUpdateBroker.exe", "IslandUpdateOnDemand.exe", "IslandUpdateComRegisterShell64.exe",
        "IslandUpdateSetup.exe"
      ) and
      not (process.code_signature.subject_name == "Island Technology Inc." and process.code_signature.trusted == true)
    ) or

    /* Opera Related Processes */
    (
      process.name : ("opera.exe", "opera_*.exe", "browser_assistant.exe") and
      not (process.code_signature.subject_name in ("Opera Norway AS", "Opera Software AS") and process.code_signature.trusted == true)
    ) or

    /* Whale Related Processes */
    (
      process.name : ("whale.exe", "whale_update.exe", "wusvc.exe") and
      not (process.code_signature.subject_name == "NAVER Corp." and process.code_signature.trusted == true)
    ) or

    /* Chromium-based Browsers processes */
    (
      process.name : ("chrmstp.exe", "notification_helper.exe", "elevation_service.exe") and
      not (
        process.code_signature.subject_name in (
          "Island Technology Inc.",
          "Citrix Systems, Inc.",
          "Brave Software, Inc.",
          "Google LLC",
          "Google Inc",
          "Microsoft Corporation",
          "NAVER Corp.",
          "AVG Technologies USA, LLC",
          "Avast Software s.r.o.",
          "PIRIFORM SOFTWARE LIMITED",
          "NortonLifeLock Inc.",
          "Opera Norway AS"
        ) and process.code_signature.trusted == true
      )
    )
  )
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Masquerading as Browser Process

Browsers are integral to user interaction with the web, often trusted and whitelisted in security policies. Adversaries exploit this trust by masquerading malicious processes as legitimate browser processes, bypassing security measures and deceiving users. The detection rule identifies anomalies in browser processes, such as unusual or unsigned certificates, to flag potential threats, ensuring that only verified processes are executed.

### Possible investigation steps

- Review the process name and executable path to determine if it matches any known legitimate browser processes or paths listed in the query.
- Check the process code signature details, specifically the subject name and trust status, to verify if the process is signed by a recognized and trusted entity.
- Investigate the parent process to understand how the suspicious process was initiated and assess if it aligns with typical browser launch behavior.
- Analyze the command-line arguments used by the process to identify any unusual or suspicious flags that may indicate malicious activity.
- Correlate the process start event with other security events or logs from the same host to identify any related suspicious activities or patterns.
- Consult threat intelligence sources to determine if the process name, executable path, or code signature has been associated with known threats or malware campaigns.

### False positive analysis

- Processes from legitimate software like HP Sure Click, Dynatrace, and Burp Suite may trigger false positives due to their use of Chrome executables. Users can mitigate this by adding exceptions for these specific paths and code signatures.
- Microsoft Edge WebView2 processes signed by trusted entities like Bromium, Amazon, or Code Systems Corporation might be flagged. To handle this, users should ensure these signatures are included in the allowlist.
- Firefox's default-browser-agent.exe signed by WATERFOX LIMITED can be a false positive. Users should verify the signature and add it to the trusted list if applicable.
- Chromium-based browser processes from trusted vendors such as Citrix, AVG, or NortonLifeLock may be incorrectly flagged. Users should confirm the legitimacy of these signatures and update the allowlist accordingly.
- Regularly review and update the list of trusted code signatures and executable paths to minimize false positives while maintaining security.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malware or unauthorized access.
- Terminate any suspicious processes identified by the detection rule that are masquerading as legitimate browser processes.
- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any malicious files or software.
- Review and validate the code signatures of all browser-related processes on the affected system to ensure they are from trusted sources.
- Restore any compromised systems from a known good backup to ensure system integrity and remove any persistent threats.
- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.
- Implement enhanced monitoring and logging for browser processes across the network to detect similar threats in the future and improve response times."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"
[[rule.threat.technique.subtechnique]]
id = "T1036.001"
name = "Invalid Code Signature"
reference = "https://attack.mitre.org/techniques/T1036/001/"

[[rule.threat.technique.subtechnique]]
id = "T1036.005"
name = "Match Legitimate Name or Location"
reference = "https://attack.mitre.org/techniques/T1036/005/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1554"
name = "Compromise Host Software Binary"
reference = "https://attack.mitre.org/techniques/T1554/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

