[metadata]
bypass_bbr_timing = true
creation_date = "2023/08/02"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies suspicious instances of browser processes, such as unsigned or signed with unusual certificates, that can
indicate an attempt to conceal malicious activity, bypass security features such as allowlists, or trick users into
executing malware.
"""
from = "now-9m"
index = ["logs-endpoint.events.process-*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Masquerading as Browser Process"
risk_score = 21
rule_id = "5b9eb30f-87d6-45f4-9289-2bf2024f0376"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Tactic: Persistence",
    "Rule Type: BBR",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  (
    /* Chrome Related Processes */
    (process.name : (
      "chrome.exe", "GoogleUpdate.exe", "GoogleCrashHandler64.exe", "GoogleCrashHandler.exe",
      "GoogleUpdateComRegisterShell64.exe", "GoogleUpdateSetup.exe", "GoogleUpdateOnDemand.exe",
      "chrome_proxy.exe", "remote_assistance_host.exe", "remoting_native_messaging_host.exe",
      "GoogleUpdateBroker.exe"
     ) and not
      (process.code_signature.subject_name : ("Google LLC", "Google Inc") and process.code_signature.trusted == true)
     and not
      (
        process.executable : (
          "?:\\Program Files\\HP\\Sure Click\\servers\\chrome.exe",
          "?:\\Program Files\\HP\\Sure Click\\*\\servers\\chrome.exe"
        ) and
        process.code_signature.subject_name : ("Bromium, Inc.") and process.code_signature.trusted == true
      ) and not
      (
        process.executable : (
          "?:\\Program Files\\dynatrace\\synthetic\\Chrome-bin\\chrome.exe"
        ) and
        process.code_signature.subject_name : ("Dynatrace LLC") and process.code_signature.trusted == true
      ) and
     not (
       process.executable : (
         "?:\\Users\\*\\AppData\\Local\\ms-playwright\\chromium-*\\chrome-win\\chrome.exe",
         "?:\\Users\\*\\AppData\\Local\\Programs\\synthetics-recorder\\resources\\local-browsers\\chromium-*\\chrome-win\\chrome.exe",
         "*\\node_modules\\puppeteer\\.local-chromium\\win64-*\\chrome-win\\chrome.exe",
         "?:\\Program Files (x86)\\Invicti Professional Edition\\chromium\\chrome.exe",
         "?:\\Program Files\\End2End, Inc\\ARMS Html Engine\\chrome.exe",
         "?:\\Users\\*\\AppData\\Local\\*BurpSuitePro\\burpbrowser\\*\\chrome.exe",
         "?:\\Users\\*\\AppData\\Roaming\\*BurpSuite\\burpbrowser\\*\\chrome.exe"
       ) and process.args: (
               "--enable-features=NetworkService,NetworkServiceInProcess",
               "--type=crashpad-handler", "--enable-automation", "--disable-xss-auditor"
             )
     )
    ) or

    /* MS Edge Related Processes */
    (process.name : (
      "msedge.exe", "MicrosoftEdgeUpdate.exe", "identity_helper.exe", "msedgewebview2.exe",
      "MicrosoftEdgeWebview2Setup.exe", "MicrosoftEdge_X*.exe", "msedge_proxy.exe",
      "MicrosoftEdgeUpdateCore.exe", "MicrosoftEdgeUpdateBroker.exe", "MicrosoftEdgeUpdateSetup_X*.exe",
      "MicrosoftEdgeUpdateComRegisterShell64.exe", "msedgerecovery.exe", "MicrosoftEdgeUpdateSetup.exe"
     ) and not
      (process.code_signature.subject_name : "Microsoft Corporation" and process.code_signature.trusted == true)
     and not
      (
        process.name : "msedgewebview2.exe" and
        process.code_signature.subject_name : ("Bromium, Inc.", "Amazon.com Services LLC", "Code Systems Corporation") and process.code_signature.trusted == true
      )
    ) or

    /* Brave Related Processes */
    (process.name : (
      "brave.exe", "BraveUpdate.exe", "BraveCrashHandler64.exe", "BraveCrashHandler.exe",
      "BraveUpdateOnDemand.exe", "brave_vpn_helper.exe", "BraveUpdateSetup*.exe",
      "BraveUpdateComRegisterShell64.exe"
     ) and not
      (process.code_signature.subject_name : "Brave Software, Inc." and process.code_signature.trusted == true)
    ) or

    /* Firefox Related Processes */
    (process.name : (
      "firefox.exe", "pingsender.exe", "default-browser-agent.exe", "maintenanceservice.exe",
      "plugin-container.exe", "maintenanceservice_tmp.exe", "maintenanceservice_installer.exe",
      "minidump-analyzer.exe"
     ) and not
      (process.code_signature.subject_name : "Mozilla Corporation" and process.code_signature.trusted == true)
     and not
      (
        process.name : "default-browser-agent.exe" and
        process.code_signature.subject_name : ("WATERFOX LIMITED") and process.code_signature.trusted == true
      )
    ) or

    /* Island Related Processes */
    (process.name : (
      "Island.exe", "IslandUpdate.exe", "IslandCrashHandler.exe", "IslandCrashHandler64.exe",
      "IslandUpdateBroker.exe", "IslandUpdateOnDemand.exe", "IslandUpdateComRegisterShell64.exe",
      "IslandUpdateSetup.exe"
     ) and not
      (process.code_signature.subject_name : "Island Technology Inc." and process.code_signature.trusted == true)
    ) or

    /* Opera Related Processes */
    (process.name : (
      "opera.exe", "opera_*.exe", "browser_assistant.exe"
     ) and not
      (process.code_signature.subject_name : ("Opera Norway AS", "Opera Software AS") and process.code_signature.trusted == true)
    ) or

    /* Whale Related Processes */
    (process.name : (
      "whale.exe", "whale_update.exe", "wusvc.exe"
     ) and not
      (process.code_signature.subject_name : "NAVER Corp." and process.code_signature.trusted == true)
    ) or

    /* Chromium-based Browsers processes */
    (process.name : (
      "chrmstp.exe", "notification_helper.exe", "elevation_service.exe"
     ) and not
      (process.code_signature.subject_name : (
        "Island Technology Inc.",
        "Citrix Systems, Inc.",
        "Brave Software, Inc.",
        "Google LLC",
        "Google Inc",
        "Microsoft Corporation",
        "NAVER Corp.",
        "AVG Technologies USA, LLC",
        "Avast Software s.r.o.",
        "PIRIFORM SOFTWARE LIMITED",
        "NortonLifeLock Inc.",
        "Opera Norway AS"
       ) and process.code_signature.trusted == true
      )
    )
  )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Masquerading as Browser Process

Browsers are integral to accessing web content, often running with elevated privileges and trusted by users. Adversaries exploit this by masquerading malicious processes as legitimate browser processes to evade detection, bypass security measures, or deceive users. The detection rule identifies anomalies in browser processes, such as unexpected signatures or paths, to flag potential masquerading attempts, thereby enhancing security posture against such tactics.

### Possible investigation steps

- Review the process name and executable path to determine if it matches known legitimate browser paths or if it appears suspicious or unusual.
- Check the process code signature details, including the subject name and trust status, to verify if the process is signed by a recognized and trusted entity.
- Investigate the parent process to understand how the suspicious process was initiated and whether it was spawned by a legitimate application or a potentially malicious one.
- Examine the command-line arguments used to start the process for any unusual or suspicious flags that might indicate malicious behavior.
- Utilize Osquery to gather additional context about the process. For example, run the following query to list processes with their parent process and command-line arguments:
  ```sql
  SELECT pid, name, path, cmdline, parent FROM processes WHERE name IN ('chrome.exe', 'msedge.exe', 'firefox.exe', 'brave.exe', 'opera.exe', 'whale.exe');
  ```
- Cross-reference the process executable path with known software installation directories to determine if the executable is located in an expected location.
- Analyze recent system logs and events around the time the process was started to identify any related activities or anomalies.
- Investigate the network connections established by the process to identify any suspicious or unexpected external communications.
- Check for any recent changes to the system, such as software installations or updates, that might explain the presence of the process.
- Consult threat intelligence sources to determine if there are any known threats or campaigns associated with the process name or signature details.

### False positive analysis

- Legitimate software that uses browser processes for automation or testing, such as Selenium or Puppeteer, may trigger false positives. Users can handle these by adding exceptions for known automation tools in the detection rule.
- Security software or monitoring tools that utilize browser processes for sandboxing or analysis, like HP Sure Click or Dynatrace, may be flagged. Users should exclude these processes by verifying their code signatures and adding them to an allowlist.
- Custom or enterprise-specific applications that embed browser components might be misidentified. Users should ensure these applications are signed with trusted certificates and add them to exceptions if necessary.
- Updates or beta versions of browsers that have not yet been recognized by the detection rule may cause false positives. Users can manage this by temporarily excluding these versions until the rule is updated.
- Non-standard installations of browsers, such as portable versions, might not match expected paths or signatures. Users should verify the legitimacy of these installations and adjust the rule to accommodate them.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malware.
- Verify the legitimacy of the suspicious browser process by checking the process's executable path and code signature against known trusted sources.
- Terminate any identified malicious processes to stop ongoing malicious activity.
- Conduct a thorough investigation of the system to identify any additional indicators of compromise or persistence mechanisms.
- Review and analyze system logs to trace the origin and timeline of the suspicious activity, leveraging MITRE ATT&CK framework for context on masquerading techniques.
- Restore the system from a known good backup if the integrity of the system is compromised.
- Update and patch all software and operating systems to mitigate vulnerabilities that could be exploited by similar threats.
- Implement enhanced logging policies to capture detailed process execution and code signature verification for future incidents.
- Integrate threat intelligence feeds and security solutions to improve detection capabilities and reduce response times.
- Escalate the incident to the appropriate internal or external cybersecurity team if the threat level is beyond current handling capabilities."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"
[[rule.threat.technique.subtechnique]]
id = "T1036.001"
name = "Invalid Code Signature"
reference = "https://attack.mitre.org/techniques/T1036/001/"

[[rule.threat.technique.subtechnique]]
id = "T1036.005"
name = "Match Legitimate Name or Location"
reference = "https://attack.mitre.org/techniques/T1036/005/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1554"
name = "Compromise Host Software Binary"
reference = "https://attack.mitre.org/techniques/T1554/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

