[metadata]
creation_date = "2023/08/24"
integration = ["endpoint", "windows", "system"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Adversaries may abuse the WMI diagnostic tool, wbemtest.exe, to enumerate WMI object instances or invoke methods against
local or remote endpoints.
"""
from = "now-119m"
index = [
    "logs-endpoint.events.process-*",
    "winlogbeat-*",
    "logs-windows.*",
    "endgame-*",
    "logs-system.security*",
]
interval = "60m"
language = "eql"
license = "Elastic License v2"
name = "WMI WBEMTEST Utility Execution"
risk_score = 21
rule_id = "d3551433-782f-4e22-bbea-c816af2d41c6"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Execution",
    "Data Source: Elastic Defend",
    "Rule Type: BBR",
    "Data Source: Elastic Endgame",
    "Data Source: System",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and process.name : "wbemtest.exe"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating WMI WBEMTEST Utility Execution

Windows Management Instrumentation (WMI) is a powerful framework for managing data and operations on Windows systems. The WBEMTEST utility is a diagnostic tool that allows users to interact with WMI, often used for querying and managing system configurations. However, adversaries can exploit this tool to execute unauthorized commands or gather sensitive information from local or remote systems. The detection rule identifies suspicious activity by monitoring the initiation of the wbemtest.exe process, which may indicate potential misuse of WMI for malicious purposes.

### Possible investigation steps

- Review the alert details to confirm the process name is "wbemtest.exe" and the event type is "start" to ensure the alert is valid.
- Check the timestamp of the wbemtest.exe process initiation to determine when the activity occurred.
- Identify the user account associated with the wbemtest.exe process to assess if the activity aligns with expected user behavior.
- Investigate the parent process of wbemtest.exe to understand how it was launched and if it was initiated by a legitimate application or script.
- Examine the command line arguments used with wbemtest.exe to identify any specific WMI queries or operations that were executed.
- Use Osquery to gather additional context about the system state at the time of execution. Example query: `SELECT * FROM processes WHERE name = 'wbemtest.exe';`
- Correlate the wbemtest.exe execution with other security events or logs from the same timeframe to identify any related suspicious activities.
- Check for any network connections initiated by wbemtest.exe to determine if it was used to interact with remote systems.
- Review historical data to see if wbemtest.exe has been executed previously on the system and if there is a pattern or increase in frequency.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors that commonly use wbemtest.exe for malicious purposes.

### False positive analysis

- The WMI WBEMTEST utility is often used by system administrators and IT professionals for legitimate purposes such as troubleshooting, system monitoring, and configuration management, which can lead to false positives when monitoring for suspicious activity.
- Automated scripts or management tools that rely on WMI for regular system checks or inventory tasks may trigger the detection rule, as they might initiate the wbemtest.exe process as part of their operations.
- To manage these false positives, users can create exceptions for known and trusted sources, such as specific user accounts or systems that regularly perform legitimate WMI operations.
- Implementing a baseline of normal WMI activity within the organization can help distinguish between routine use and potential misuse, allowing for more accurate detection and fewer false positives.
- Regularly reviewing and updating the list of exceptions based on changes in IT operations or personnel can help maintain the effectiveness of the detection rule while minimizing unnecessary alerts.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to determine the scope of the activity, including identifying any additional compromised systems or accounts.
- Review system and security logs to trace the origin of the wbemtest.exe execution and identify any associated suspicious activities or anomalies.
- Terminate any unauthorized processes or sessions initiated by wbemtest.exe to halt potential malicious operations.
- Change credentials for any accounts that may have been compromised during the incident to prevent further unauthorized access.
- Restore the system from a known good backup to ensure that any malicious changes are reverted and the system is returned to a secure state.
- Implement enhanced logging and monitoring for WMI activities, including the execution of wbemtest.exe, to detect future misuse attempts.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate and analyze WMI-related alerts more effectively.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional response actions are necessary.
- Apply security hardening measures, such as restricting WMI access to authorized users and systems only, to reduce the attack surface and prevent similar incidents in the future."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1047"
name = "Windows Management Instrumentation"
reference = "https://attack.mitre.org/techniques/T1047/"


[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

