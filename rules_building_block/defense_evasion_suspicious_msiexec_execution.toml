[metadata]
creation_date = "2023/09/26"
integration = ["endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/10"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies suspicious execution of the built-in Windows Installer, msiexec.exe, to install a package from usual paths or
parent process. Adversaries may abuse msiexec.exe to launch malicious local MSI files.
"""
from = "now-119m"
index = ["logs-endpoint.events.process-*", "winlogbeat-*", "logs-windows.*", "endgame-*"]
interval = "60m"
language = "eql"
license = "Elastic License v2"
name = "Suspicious Execution via MSIEXEC"
references = [
    "https://lolbas-project.github.io/lolbas/Binaries/Msiexec/",
    "https://www.guardicore.com/labs/purple-fox-rootkit-now-propagates-as-a-worm/",
]
risk_score = 21
rule_id = "708c9d92-22a3-4fe0-b6b9-1f861c55502d"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Rule Type: BBR",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.action == "start" and
  process.name : "msiexec.exe" and user.id : ("S-1-5-21*", "S-1-12-*") and process.parent.executable != null and
  (
    (process.args : "/i" and process.args : ("/q", "/quiet") and process.args_count == 4 and
     process.args : ("?:\\Users\\*", "?:\\ProgramData\\*") and
     not process.parent.executable : ("?:\\Program Files (x86)\\*.exe",
                                      "?:\\Program Files\\*.exe",
                                      "?:\\Windows\\explorer.exe",
                                      "?:\\Users\\*\\Desktop\\*",
                                      "?:\\Users\\*\\Downloads\\*",
                                      "?:\\programdata\\*")) or

    (process.args_count == 1 and not process.parent.executable : ("?:\\Windows\\explorer.exe", "?:\\Windows\\SysWOW64\\explorer.exe")) or

    (process.args : "/i" and process.args : ("/q", "/quiet") and process.args_count == 4 and
     (process.parent.args : "Schedule" or process.parent.name : "wmiprvse.exe" or
     process.parent.executable : "?:\\Users\\*\\AppData\\*" or
     (process.parent.name : ("powershell.exe", "cmd.exe") and length(process.parent.command_line) >= 200))) or

    (process.args : "/i" and process.args : ("/q", "/quiet") and process.args_count == 4 and
     ?process.working_directory : "?:\\" and process.parent.name : ("cmd.exe", "powershell.exe"))
  ) and

  /* noisy pattern */
  not (process.parent.executable : "?:\\Users\\*\\AppData\\Local\\Temp\\*" and ?process.parent.args_count >= 2 and
       process.args : "?:\\Users\\*\\AppData\\Local\\Temp\\*\\*.msi") and

  not process.args : ("?:\\Program Files (x86)\\*", "?:\\Program Files\\*")
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Suspicious Execution via MSIEXEC

MSIEXEC is a Windows Installer utility used for installing, modifying, and removing applications. Adversaries exploit it to execute malicious MSI files, often using silent install options to avoid detection. The detection rule identifies unusual MSIEXEC activity by analyzing execution context, such as unexpected parent processes or atypical file paths, to flag potential misuse indicative of defense evasion tactics.

### Possible investigation steps

- Review the parent process of the msiexec.exe execution to determine if it is an unexpected or suspicious executable, especially if it is not from typical locations like Program Files or Windows directories.
- Analyze the command line arguments used with msiexec.exe, focusing on the presence of silent install options (/q, /quiet) and the number of arguments to identify potential misuse.
- Check the file path of the MSI file being executed to ensure it is not from unusual or user-specific directories like Users or ProgramData, which could indicate a malicious file.
- Investigate the user account associated with the execution, particularly if the user ID matches patterns like S-1-5-21* or S-1-12-*, to assess if the account has been compromised or is being used for unauthorized activities.
- Examine the working directory and any related files or scripts in the context of the execution to identify any additional indicators of compromise or related malicious activity.
- Correlate the event with other security alerts or logs to determine if this execution is part of a broader attack pattern or campaign.

### False positive analysis

- Legitimate software installations or updates may trigger the rule if they use msiexec.exe with silent install options. Users can create exceptions for known software paths or parent processes that frequently perform legitimate installations.
- System administrators using scripts or automation tools like PowerShell or CMD to deploy software across multiple machines might cause false positives. Exclude these specific parent processes or command line patterns if they are part of routine administrative tasks.
- Some enterprise software management tools may use msiexec.exe in a manner that matches the rule's criteria. Identify these tools and exclude their typical execution paths or parent processes to prevent unnecessary alerts.
- Temporary files created during legitimate installations in user directories might be flagged. Consider excluding specific temporary directories or known MSI file patterns that are part of regular software deployment processes.
- Regular updates from trusted software vendors that use msiexec.exe with quiet options can be excluded by identifying and whitelisting their specific update paths or parent processes.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malware or unauthorized access.
- Terminate the suspicious msiexec.exe process to halt any ongoing malicious activity.
- Conduct a thorough scan of the system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any malicious files or software.
- Review and analyze the parent process and command line arguments associated with the msiexec.exe execution to understand the attack vector and entry point.
- Restore any affected files or applications from a known good backup to ensure system integrity.
- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are compromised.
- Implement additional monitoring and alerting for similar msiexec.exe activities to enhance detection and prevent recurrence of this threat."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1218"
name = "System Binary Proxy Execution"
reference = "https://attack.mitre.org/techniques/T1218/"
[[rule.threat.technique.subtechnique]]
id = "T1218.007"
name = "Msiexec"
reference = "https://attack.mitre.org/techniques/T1218/007/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

