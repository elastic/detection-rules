[metadata]
creation_date = "2023/06/09"
integration = ["auditd_manager"]
maturity = "production"
updated_date = "2025/01/10"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
This rule monitors for a rapid enumeration of 25 different proc cmd, stat, and exe files, which suggests an abnormal
activity pattern. Such behavior could be an indicator of a malicious process scanning or gathering information about
running processes, potentially for reconnaissance, privilege escalation, or identifying vulnerable targets.
"""
from = "now-119m"
index = ["auditbeat-*", "logs-auditd_manager.auditd-*"]
interval = "60m"
language = "kuery"
license = "Elastic License v2"
name = "Suspicious Proc Pseudo File System Enumeration"
risk_score = 21
rule_id = "0787daa6-f8c5-453b-a4ec-048037f6c1cd"
setup = """## Setup

This rule requires the use of the `auditd_manager` integration. `Auditd_manager` is a tool designed to simplify and enhance the management of the audit subsystem in Linux systems. It provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system. The following steps should be executed in order to install and deploy `auditd_manager` on a Linux system.

```
Kibana -->
Management -->
Integrations -->
Auditd Manager -->
Add Auditd Manager
```

`Auditd_manager` subscribes to the kernel and receives events as they occur without any additional configuration. However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.

For this detection rule to trigger, the following additional audit rules are required to be added to the integration:
```
-w /proc/ -p r -k audit_proc
```

Add the newly installed `auditd manager` to an agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
"""
severity = "low"
tags = [
    "Data Source: Auditd Manager",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Rule Type: BBR",
]
timestamp_override = "event.ingested"
type = "threshold"

query = '''
host.os.type:linux and event.category:file and event.action:"opened-file" and 
file.path : (/proc/*/cmdline or /proc/*/stat or /proc/*/exe) and not process.name : (
  ps or netstat or landscape-sysin or w or pgrep or pidof or needrestart or apparmor_status
) and not process.parent.pid : 1
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Suspicious Proc Pseudo File System Enumeration

The proc pseudo file system in Linux provides a window into the kernel and running processes, offering critical insights for system management. Adversaries exploit this by rapidly querying files like cmdline, stat, and exe to gather intelligence on active processes, potentially for reconnaissance or privilege escalation. The detection rule identifies such suspicious activity by monitoring for rapid, atypical access patterns to these files, excluding benign processes, thus flagging potential threats.

### Possible investigation steps

- Review the process triggering the alert by examining the process.name field to identify any unfamiliar or suspicious processes that are not part of the excluded list.
- Investigate the parent process using the process.parent.pid field to determine if the process hierarchy appears legitimate or if it might be indicative of a compromised or malicious parent process.
- Analyze the frequency and pattern of file access in the /proc/*/cmdline, /proc/*/stat, and /proc/*/exe paths to assess whether the access pattern is consistent with typical system behavior or indicative of reconnaissance activity.
- Check for any recent changes or anomalies in the system logs around the time of the alert to identify any correlated suspicious activities or system changes.
- Cross-reference the process with known threat intelligence sources to determine if it matches any known malicious signatures or behaviors.

### False positive analysis

- System monitoring tools that frequently access proc files for legitimate purposes may trigger false positives. Users can mitigate this by adding these tools to the exclusion list in the rule configuration.
- Automated scripts or cron jobs that perform regular system checks might be flagged. Review these scripts and, if deemed safe, exclude their process names from the rule.
- Custom administrative tools developed in-house that perform process checks could be mistakenly identified as threats. Verify their behavior and add them to the exception list if they are benign.
- Security software that performs regular scans of system processes may also be detected. Confirm the legitimacy of such software and exclude it from the rule to prevent false alerts.
- Development or testing environments where processes are frequently started and stopped might generate false positives. Consider excluding these environments from monitoring or adjusting the rule sensitivity for these specific cases.

### Response and remediation

- Immediately isolate the affected system from the network to prevent potential lateral movement by the adversary.
- Terminate any suspicious processes identified as rapidly accessing the proc pseudo file system, especially those not whitelisted in the detection rule.
- Conduct a thorough review of the system's process tree to identify any unauthorized or unexpected parent-child process relationships, focusing on those not originating from init (PID 1).
- Analyze the system logs to trace the origin of the suspicious activity, identifying any potential entry points or vulnerabilities exploited by the adversary.
- Apply security patches and updates to the affected system to address any known vulnerabilities that may have been exploited.
- Restore the system from a known good backup if any signs of compromise or unauthorized changes are detected.
- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1057"
name = "Process Discovery"
reference = "https://attack.mitre.org/techniques/T1057/"

[[rule.threat.technique]]
id = "T1082"
name = "System Information Discovery"
reference = "https://attack.mitre.org/techniques/T1082/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

[rule.threshold]
field = ["host.id", "process.pid", "process.name"]
value = 1
[[rule.threshold.cardinality]]
field = "file.path"
value = 100


