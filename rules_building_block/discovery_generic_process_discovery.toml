[metadata]
bypass_bbr_timing = true
creation_date = "2023/07/13"
integration = ["endpoint", "windows", "system"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
This rule identifies the execution of commands that can be used to enumerate running processes. Adversaries may
enumerate processes to identify installed applications and security solutions.
"""
from = "now-9m"
index = [
    "logs-endpoint.events.process-*",
    "logs-system.security*",
    "winlogbeat-*",
    "logs-windows.*",
    "endgame-*",
]
language = "eql"
license = "Elastic License v2"
name = "Process Discovery Using Built-in Tools"
risk_score = 21
rule_id = "4982ac3e-d0ee-4818-b95d-d9522d689259"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Rule Type: BBR",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
    "Data Source: System",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  (
    process.name :("PsList.exe", "qprocess.exe") or 
   (process.name : "powershell.exe" and process.args : ("*get-process*", "*Win32_Process*")) or 
   (process.name : "wmic.exe" and process.args : ("process", "*Win32_Process*")) or
   (process.name : "tasklist.exe" and not process.args : ("pid eq*")) or
   (process.name : "query.exe" and process.args : "process")
  ) and not user.id : "S-1-5-18"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Process Discovery Using Built-in Tools

Process discovery tools, like PsList, qprocess, and PowerShell commands, are integral for system management, allowing administrators to monitor active processes. However, adversaries exploit these tools to identify running applications and security defenses, aiding in further attacks. The detection rule identifies suspicious use of these tools by monitoring specific command executions and excluding known system accounts, thus highlighting potential malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific command and process name that triggered the alert, focusing on the `process.name` and `process.args` fields.
- Check the `user.id` field to determine which user account executed the command and verify if it is a known or expected user for such activities.
- Investigate the `host.os.type` and `event.type` fields to confirm the environment and context in which the command was executed.
- Correlate the timestamp of the alert with other security events or logs to identify any concurrent suspicious activities.
- Use Osquery to gather additional context about the processes running on the host. For example, execute the following query to list all running processes: `SELECT pid, name, path, cmdline FROM processes WHERE name IN ('PsList.exe', 'qprocess.exe', 'powershell.exe', 'wmic.exe', 'tasklist.exe', 'query.exe');`
- Examine the command line arguments (`process.args`) for any unusual or unexpected parameters that could indicate malicious intent.
- Investigate the parent process of the suspicious command to understand how it was initiated and whether it was spawned by a legitimate application or another suspicious process.
- Check for any recent changes in user permissions or group memberships that could have allowed unauthorized execution of these commands.
- Review historical data to determine if this behavior is part of a recurring pattern or a one-time event.
- Consult threat intelligence sources to see if there are any known campaigns or adversaries that utilize similar techniques, focusing on the MITRE ATT&CK technique T1057 for Process Discovery.

### False positive analysis

- Routine administrative tasks: System administrators often use built-in tools like PsList, qprocess, and PowerShell commands for legitimate process monitoring and management, which can trigger the rule. To manage this, create exceptions for known administrative accounts or specific time frames when these tasks are performed.
- Automated scripts: Scheduled scripts or maintenance tasks that utilize these commands for system health checks or inventory purposes may also be flagged. Identify and exclude these scripts by their unique user accounts or specific command patterns.
- Monitoring software: Some security or monitoring software may use similar commands to gather system information, leading to false positives. Review and whitelist these applications by their process names or associated user accounts.
- Testing environments: In environments where security tools or processes are being tested, these commands might be executed frequently. Exclude these environments by filtering based on hostnames or IP ranges associated with testing labs.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further lateral movement by the adversary.
- Conduct a thorough investigation to identify any unauthorized access or changes made to the system, focusing on the processes identified by the detection rule.
- Terminate any suspicious processes identified during the investigation to halt any ongoing malicious activity.
- Review and analyze logs from the affected system and related network devices to trace the adversary's actions and identify potential entry points.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are compromised.
- Implement enhanced logging policies to capture detailed process execution data, including command-line arguments and user context, to aid in future investigations.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities and provide context for similar threats.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are installed.
- Conduct a post-incident review to identify gaps in security controls and update security policies and procedures accordingly.
- Implement hardening measures such as restricting the use of built-in tools to authorized users only and employing application whitelisting to prevent unauthorized execution of processes."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1057"
name = "Process Discovery"
reference = "https://attack.mitre.org/techniques/T1057/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

