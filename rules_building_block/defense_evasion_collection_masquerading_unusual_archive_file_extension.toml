[metadata]
bypass_bbr_timing = true
creation_date = "2023/09/25"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies the creation of an archive file with an unusual extension. Attackers may attempt to evade detection by
masquerading files using the file extension values used by image, audio, or document file types.
"""
from = "now-9m"
index = ["logs-endpoint.events.file-*"]
language = "eql"
license = "Elastic License v2"
name = "Archive File with Unusual Extension"
risk_score = 21
rule_id = "cffbaf47-9391-4e09-a83c-1f27d7474826"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Data Source: Elastic Defend",
    "Rule Type: BBR",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
file where host.os.type == "windows" and event.action != "deletion" and

  /* common archive file headers - Rar, 7z, GZIP, MSCF, XZ, ZIP */
  file.Ext.header_bytes : ("52617221*", "377ABCAF271C*", "1F8B*", "4d534346*", "FD377A585A00*", "504B0304*", "504B0708*") and

  (
    /* common image file extensions */
    file.extension : ("jpg", "jpeg", "emf", "tiff", "gif", "png", "bmp", "ico", "fpx", "eps", "inf") or

    /* common audio and video file extensions */
    file.extension : ("mp3", "wav", "avi", "mpeg", "flv", "wma", "wmv", "mov", "mp4", "3gp") or

    /* common document file extensions */
    (file.extension : ("doc", "docx", "rtf", "ppt", "pptx", "xls", "xlsx") and

    /* exclude ZIP file header values for OPENXML documents */
    not file.Ext.header_bytes : ("504B0304*", "504B0708*"))
  ) and

  not (process.executable : "?:\\Windows\\System32\\inetsrv\\w3wp.exe" and file.path : "?:\\inetpub\\temp\\IIS Temporary Compressed Files\\*")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Archive File with Unusual Extension
In computing environments, archive files are used to compress and bundle data for efficient storage and transfer. Adversaries exploit this by disguising archives with extensions typical of benign file types like images or documents, evading detection. The detection rule identifies such anomalies by checking for archive file signatures paired with unusual extensions, flagging potential masquerading attempts.

### Possible investigation steps

- Review the alert details to identify the specific file path and extension that triggered the alert, focusing on the `file.path` and `file.extension` fields.
- Verify the file header bytes using the `file.Ext.header_bytes` field to confirm the file is indeed an archive, despite its unusual extension.
- Check the file creation timestamp and compare it with recent user activity to determine if the file creation aligns with legitimate user actions.
- Investigate the process that created the file by examining the `process.executable` field to identify any suspicious or unexpected processes.
- Use Osquery to list all files in the directory where the suspicious file was found, which can help identify other potentially malicious files:
  ```sql
  SELECT path, filename, extension FROM file WHERE directory = 'C:\\\\path\\\\to\\\\suspicious\\\\file\\\\directory';
  ```
- Analyze recent network activity from the host to detect any unusual outbound connections that might indicate data exfiltration.
- Check the user account associated with the file creation for any signs of compromise, such as unusual login times or locations.
- Review system logs for any recent changes or installations that could be related to the creation of the suspicious file.
- Investigate any other alerts or incidents involving the same host or user to identify potential patterns or related activities.
- Consult threat intelligence sources to determine if the file's characteristics match known malicious patterns or campaigns.

### False positive analysis

- Files generated by legitimate software that use non-standard extensions for archives, such as backup or compression tools, may trigger false positives. Users can handle these by identifying the specific software and excluding its file creation activities from the rule.
- Web server operations, particularly those involving temporary file storage, might produce files with unusual extensions that match archive signatures. Excluding known server processes and paths, such as IIS temporary files, can reduce false positives.
- Some enterprise applications may use custom file extensions for archives as part of their normal operation. Identifying these applications and creating exceptions for their file extensions can help minimize false alerts.
- Multimedia editing software might save project files with extensions that resemble common media types but contain embedded archives. Users should identify these applications and exclude their specific file types from the rule.
- Automated scripts or batch processes that generate files with non-standard extensions for internal use might be flagged. Users can manage this by excluding specific directories or processes known to produce such files.

### Response and remediation

- Isolate the affected system from the network to prevent further spread or data exfiltration.
- Verify the alert by checking the file's header and extension to confirm it is a masqueraded archive file.
- Conduct a thorough investigation to identify the source of the file and any associated processes or network connections.
- Remove the suspicious file and any related malicious files or processes from the system.
- Restore the system from a known good backup if the integrity of the system is compromised.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and threat intelligence correlation.
- Implement enhanced logging policies to capture detailed file creation and modification events, focusing on unusual file extensions and headers.
- Integrate threat intelligence feeds to update detection rules and improve the identification of similar threats in the future.
- Review and update endpoint protection and intrusion detection systems to recognize and block similar masquerading attempts.
- Conduct a security awareness training session for users to recognize and report suspicious files and activities."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"
[[rule.threat.technique.subtechnique]]
id = "T1036.008"
name = "Masquerade File Type"
reference = "https://attack.mitre.org/techniques/T1036/008/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

