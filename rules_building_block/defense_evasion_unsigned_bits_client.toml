[metadata]
creation_date = "2023/09/27"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/10"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies an unsigned Windows Background Intelligent Transfer Service (BITS) client process. Attackers may abuse BITS
functionality to download or upload data using the BITS service.
"""
from = "now-119m"
index = ["logs-endpoint.events.library-*"]
interval = "60m"
language = "eql"
license = "Elastic License v2"
name = "Unsigned BITS Service Client Process"
references = [
    "https://web.archive.org/web/20230531215706/https://blog.menasec.net/2021/05/hunting-for-suspicious-usage-of.html",
    "https://www.elastic.co/blog/hunting-for-persistence-using-elastic-security-part-2",
]
risk_score = 21
rule_id = "9a3884d0-282d-45ea-86ce-b9c81100f026"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Rule Type: BBR",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
library where dll.name : "Bitsproxy.dll" and process.executable != null and
not process.code_signature.trusted == true and
not process.code_signature.status : ("errorExpired", "errorCode_endpoint*")
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unsigned BITS Service Client Process

The Windows Background Intelligent Transfer Service (BITS) facilitates asynchronous, prioritized, and throttled transfer of files between machines, often used for updates. Adversaries exploit BITS to stealthily download or upload data, bypassing traditional security measures. The detection rule identifies anomalies by flagging processes using BITS without a valid code signature, indicating potential misuse for evasion or masquerading tactics.

### Possible investigation steps

- Review the process executable path to determine if it is a known or expected application using BITS. Investigate any unfamiliar or suspicious executables.
- Check the process code signature details to understand why it is untrusted. Look for any discrepancies or missing signatures that could indicate tampering.
- Investigate the parent process of the unsigned BITS client process to identify how it was initiated and assess if the parent process is legitimate or potentially malicious.
- Analyze network activity associated with the process to identify any unusual or unauthorized data transfers, focusing on external connections that could indicate data exfiltration or command and control communication.
- Cross-reference the process and its associated files with threat intelligence sources to determine if they are linked to known malicious activity or threat actors.
- Review recent system changes or updates that might have introduced the unsigned process, such as new software installations or updates, to assess if they are legitimate or potentially compromised.

### False positive analysis

- Legitimate software updates or installations may trigger the rule if they use BITS without a valid code signature. Users can create exceptions for known software update processes that are verified as safe.
- Custom or in-house applications that utilize BITS for file transfers might not have a valid code signature. These can be whitelisted by verifying their source and ensuring they are part of the organization's approved software inventory.
- Development or testing environments often run unsigned applications that use BITS for data transfer. Exclude these environments from the rule to prevent unnecessary alerts, ensuring they are properly isolated from production systems.
- Some third-party security tools or network management software may use BITS in a way that triggers the rule. Confirm the legitimacy of these tools and add them to an exception list if they are deemed non-threatening.

### Response and remediation

- Isolate the affected system from the network to prevent further data exfiltration or malicious activity.
- Terminate the unsigned BITS client process to stop any ongoing unauthorized data transfers.
- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any additional threats.
- Review and analyze the process execution history and associated files to determine the source and intent of the unsigned BITS client process.
- Restore any altered or deleted files from backups, ensuring that the backup is clean and free from malware.
- Escalate the incident to the security operations team for further investigation and to assess the potential impact on the organization.
- Implement enhanced monitoring and logging for BITS-related activities to detect and respond to similar threats in the future."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"
[[rule.threat.technique.subtechnique]]
id = "T1036.001"
name = "Invalid Code Signature"
reference = "https://attack.mitre.org/techniques/T1036/001/"


[[rule.threat.technique]]
id = "T1197"
name = "BITS Jobs"
reference = "https://attack.mitre.org/techniques/T1197/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

