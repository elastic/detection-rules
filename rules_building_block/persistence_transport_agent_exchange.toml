[metadata]
creation_date = "2023/07/14"
integration = ["windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies the use of Cmdlets and methods related to Microsoft Exchange Transport Agents install. Adversaries may
leverage malicious Microsoft Exchange Transport Agents to execute tasks in response to adversary-defined criteria,
establishing persistence.
"""
from = "now-119m"
index = ["winlogbeat-*", "logs-windows.powershell*"]
interval = "60m"
language = "kuery"
license = "Elastic License v2"
name = "Microsoft Exchange Transport Agent Install Script"
risk_score = 21
rule_id = "846fe13f-6772-4c83-bd39-9d16d4ad1a81"
setup = """## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with Advanced Audit Configuration:
```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```
Steps to implement the logging policy via registry:
```
reg add "hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Persistence",
    "Data Source: PowerShell Logs",
    "Rule Type: BBR",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category: "process" and host.os.type:windows and
  powershell.file.script_block_text : (
    (
    "Install-TransportAgent" or
    "Enable-TransportAgent"
    )
  ) and
  not user.id : "S-1-5-18" and
  not powershell.file.script_block_text : (
    "'Install-TransportAgent', 'Invoke-MonitoringProbe', 'Mount-Database', 'Move-ActiveMailboxDatabase'," or
    "'Enable-TransportAgent', 'Enable-TransportRule', 'Export-ActiveSyncLog', 'Export-AutoDiscoverConfig'," or
    ("scriptCmd.GetSteppablePipeline" and "ForwardHelpTargetName Install-TransportAgent")
  )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Microsoft Exchange Transport Agent Install Script

Microsoft Exchange Transport Agents are components that process email messages as they move through the transport pipeline. Adversaries may exploit these agents to execute malicious tasks, achieving persistence by installing or enabling rogue agents. The detection rule identifies suspicious use of PowerShell cmdlets related to transport agents, excluding benign activities, to flag potential abuse.

### Possible investigation steps

- Review the alert details to understand which specific PowerShell cmdlet was used, focusing on "Install-TransportAgent" or "Enable-TransportAgent" as indicated in the query.
- Check the user ID associated with the event to determine if it deviates from the expected system account (S-1-5-18), which could indicate unauthorized activity.
- Analyze the script block text captured in the alert to identify any unusual or suspicious patterns that might suggest malicious intent.
- Investigate the process execution context by examining the parent process and any child processes spawned by the PowerShell command to identify potential lateral movement or further exploitation.
- Use Osquery to gather additional context on the host by running a query to list all installed transport agents: `SELECT name, version, enabled FROM exchange_transport_agents;` to verify if any unauthorized agents are present.
- Correlate the event with other logs, such as Windows Event Logs, to identify any related activities or anomalies around the same timeframe, such as failed login attempts or unusual network connections.
- Check for any recent changes in the Exchange server configuration or permissions that could have facilitated the installation or enabling of a rogue transport agent.
- Review historical data to determine if similar activities have been observed in the past, which could indicate a recurring threat or persistent adversary.
- Consult threat intelligence sources to see if there are any known campaigns or threat actors that utilize similar techniques involving Microsoft Exchange Transport Agents.
- Engage with the system owner or administrator to verify if the activity was authorized or part of a legitimate administrative task, ensuring that any benign activities are accounted for.

### False positive analysis

- Routine administrative tasks: Legitimate administrators may use PowerShell cmdlets like "Install-TransportAgent" or "Enable-TransportAgent" during regular maintenance or updates, which can trigger false positives. To manage this, users can create exceptions for known administrative accounts or specific maintenance windows.
- Monitoring and diagnostic scripts: Some monitoring tools or diagnostic scripts might invoke these cmdlets as part of their operations. Users should identify these tools and exclude their associated processes or script signatures from the detection rule.
- Automated deployment scripts: Organizations using automated scripts for deploying or configuring Exchange environments might inadvertently trigger the rule. Users can handle this by whitelisting specific script hashes or deployment accounts.
- Testing environments: In test or development environments, frequent changes and installations might cause false positives. Users can exclude these environments from the rule or adjust the sensitivity of the detection in these contexts.

### Response and remediation

- Immediately isolate the affected Exchange server from the network to prevent further malicious activity and lateral movement.
- Conduct a thorough investigation to identify any unauthorized transport agents installed on the server by reviewing PowerShell logs and Exchange server logs.
- Remove any identified malicious transport agents using the Remove-TransportAgent cmdlet and disable any suspicious agents using the Disable-TransportAgent cmdlet.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the compromise.
- Review and update the PowerShell logging policy to ensure that all script block logging and module logging are enabled for enhanced visibility into future activities.
- Implement additional security measures such as application whitelisting and endpoint detection and response (EDR) solutions to detect and prevent unauthorized changes to the Exchange server.
- Restore the Exchange server from a known good backup if necessary, ensuring that all patches and updates are applied to prevent exploitation of known vulnerabilities.
- Conduct a post-incident review to identify gaps in security controls and processes, and update incident response plans accordingly.
- Educate and train IT staff and users on recognizing and reporting suspicious activities related to Exchange server operations.
- Monitor for any signs of persistence or re-infection, and ensure that all security measures are continuously updated and tested."""


[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Exchange\\\\RemotePowerShell\\\\*"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Windows\\\\TEMP\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\*\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1505"
name = "Server Software Component"
reference = "https://attack.mitre.org/techniques/T1505/"
[[rule.threat.technique.subtechnique]]
id = "T1505.002"
name = "Transport Agent"
reference = "https://attack.mitre.org/techniques/T1505/002/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

