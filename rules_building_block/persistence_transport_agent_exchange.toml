[metadata]
creation_date = "2023/07/14"
integration = ["windows"]
maturity = "production"
updated_date = "2025/01/10"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies the use of Cmdlets and methods related to Microsoft Exchange Transport Agents install. Adversaries may
leverage malicious Microsoft Exchange Transport Agents to execute tasks in response to adversary-defined criteria,
establishing persistence.
"""
from = "now-119m"
index = ["winlogbeat-*", "logs-windows.powershell*"]
interval = "60m"
language = "kuery"
license = "Elastic License v2"
name = "Microsoft Exchange Transport Agent Install Script"
risk_score = 21
rule_id = "846fe13f-6772-4c83-bd39-9d16d4ad1a81"
setup = """## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with Advanced Audit Configuration:
```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```
Steps to implement the logging policy via registry:
```
reg add "hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Persistence",
    "Data Source: PowerShell Logs",
    "Rule Type: BBR",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category: "process" and host.os.type:windows and
  powershell.file.script_block_text : (
    (
    "Install-TransportAgent" or
    "Enable-TransportAgent"
    )
  ) and
  not user.id : "S-1-5-18" and
  not powershell.file.script_block_text : (
    "'Install-TransportAgent', 'Invoke-MonitoringProbe', 'Mount-Database', 'Move-ActiveMailboxDatabase'," or
    "'Enable-TransportAgent', 'Enable-TransportRule', 'Export-ActiveSyncLog', 'Export-AutoDiscoverConfig'," or
    ("scriptCmd.GetSteppablePipeline" and "ForwardHelpTargetName Install-TransportAgent")
  )
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Microsoft Exchange Transport Agent Install Script

Microsoft Exchange Transport Agents are components that process email messages as they move through the transport pipeline. They can be customized to perform tasks like filtering or modifying messages. However, adversaries may exploit these agents to maintain persistence by installing malicious agents that execute tasks based on specific triggers. The detection rule identifies suspicious use of PowerShell cmdlets related to installing or enabling these agents, excluding known benign activities, to flag potential abuse.

### Possible investigation steps

- Review the PowerShell script block text associated with the alert to understand the context and intent of the commands executed, focusing on the use of "Install-TransportAgent" or "Enable-TransportAgent".
- Check the user account associated with the alert, especially since the query excludes the system account (S-1-5-18), to determine if the activity is expected or if the account may have been compromised.
- Investigate the host where the alert was triggered to identify any recent changes or anomalies, such as new software installations or configuration changes, that could indicate malicious activity.
- Examine PowerShell logs and other relevant security logs on the host for additional suspicious activities or patterns that coincide with the time of the alert.
- Cross-reference the alert with known benign activities that are excluded in the query to ensure the activity is not part of a legitimate administrative task.
- Assess the risk and impact of the detected activity by considering the role of the affected Exchange server and the potential consequences of a compromised transport agent.

### False positive analysis

- Legitimate administrative tasks using Install-TransportAgent or Enable-TransportAgent can trigger alerts. To manage this, create exceptions for known administrative accounts or scripts that regularly perform these tasks.
- Scheduled maintenance activities involving PowerShell cmdlets related to Exchange Transport Agents may be flagged. Document and exclude these activities by identifying their specific script block text patterns.
- Automated monitoring or backup solutions that invoke similar cmdlets might cause false positives. Review and whitelist these processes by their user IDs or script block text to prevent unnecessary alerts.
- Ensure that any exclusions do not inadvertently allow malicious activity by regularly reviewing and updating exception lists based on current threat intelligence and organizational changes.

### Response and remediation

- Immediately isolate the affected Exchange server from the network to prevent further malicious activity and potential lateral movement by the adversary.
- Review and disable any suspicious or unauthorized transport agents identified on the Exchange server to halt any ongoing malicious processes.
- Conduct a thorough examination of PowerShell logs and other relevant system logs to identify any additional indicators of compromise or related malicious activities.
- Restore the affected Exchange server from a known good backup taken before the suspicious activity was detected to ensure system integrity.
- Apply the latest security patches and updates to the Exchange server to mitigate any known vulnerabilities that could be exploited by adversaries.
- Implement enhanced monitoring and alerting for PowerShell activities and transport agent modifications to detect any future unauthorized changes promptly.
- Escalate the incident to the organization's security operations center (SOC) or incident response team for further investigation and to determine if additional systems may be compromised."""


[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Exchange\\\\RemotePowerShell\\\\*"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Windows\\\\TEMP\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.filters]]

[rule.filters.meta]
negate = true
[rule.filters.query.wildcard."file.path"]
case_insensitive = true
value = "?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\*\\\\tmp_????????.???\\\\tmp_????????.???.ps?1"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1505"
name = "Server Software Component"
reference = "https://attack.mitre.org/techniques/T1505/"
[[rule.threat.technique.subtechnique]]
id = "T1505.002"
name = "Transport Agent"
reference = "https://attack.mitre.org/techniques/T1505/002/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

