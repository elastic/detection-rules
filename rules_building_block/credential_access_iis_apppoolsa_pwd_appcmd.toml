[metadata]
bypass_bbr_timing = true
creation_date = "2020/08/18"
integration = ["endpoint", "windows", "system"]
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."
min_stack_version = "8.14.0"
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords. An attacker
with IIS web server access via a web shell can decrypt and dump the IIS AppPool service account password using AppCmd.
"""
from = "now-9m"
index = [
    "winlogbeat-*",
    "logs-endpoint.events.process-*",
    "logs-windows.*",
    "endgame-*",
    "logs-system.security*",
]
language = "eql"
license = "Elastic License v2"
name = "Microsoft IIS Service Account Password Dumped"
references = ["https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/"]
risk_score = 21
rule_id = "0564fb9d-90b9-4234-a411-82a546dc1343"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Rule Type: BBR",
    "Data Source: System",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
   (process.name : "appcmd.exe" or ?process.pe.original_file_name == "appcmd.exe") and
   process.args : "list" and process.args : "/text*"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Microsoft IIS Service Account Password Dumped

Microsoft IIS is a web server technology that uses service accounts for application pools, which can be managed via the AppCmd command-line tool. Adversaries with access to the server might exploit AppCmd to extract and decrypt these service account passwords, potentially leading to unauthorized access. The detection rule identifies suspicious use of AppCmd by monitoring for specific command-line arguments indicative of password dumping activities.

### Possible investigation steps

- Review the alert details to confirm the presence of the `appcmd.exe` process with the specific arguments `list` and `/text*` to ensure the alert is not a false positive.
- Check the process execution context, including the user account under which `appcmd.exe` was executed, to determine if it aligns with expected administrative activity.
- Investigate the parent process of `appcmd.exe` to identify how it was initiated and whether it was triggered by a legitimate administrative tool or a suspicious script or process.
- Examine the host's security logs for any recent login events or anomalies around the time `appcmd.exe` was executed to identify potential unauthorized access.
- Use Osquery to gather additional context on the process execution by running a query such as: `SELECT * FROM processes WHERE name = 'appcmd.exe' AND cmdline LIKE '%list%/text*%';` to verify the command-line arguments and execution details.
- Analyze network logs to identify any unusual outbound connections from the host that might indicate data exfiltration following the password dump.
- Review recent changes to IIS configuration files and application pool settings to detect any unauthorized modifications that could be related to the alert.
- Check for the presence of web shells or other malicious files on the IIS server that could have been used to execute `appcmd.exe`.
- Correlate the alert with other security events or alerts from the same host or network segment to identify potential lateral movement or coordinated attacks.
- Consult threat intelligence sources to determine if there are known campaigns or threat actors associated with similar tactics, techniques, and procedures (TTPs) involving IIS and `appcmd.exe`.

### False positive analysis

- Routine administrative tasks: System administrators may use AppCmd to manage IIS configurations, including listing application pools and their properties, which can trigger the rule. To handle this, identify and document regular maintenance schedules and exclude these activities from alerts during those times.
- Automated scripts: Some organizations use automated scripts for IIS management that might include commands similar to those flagged by the rule. Review and whitelist these scripts by creating exceptions based on specific command-line arguments or script paths.
- Monitoring and auditing tools: Security and monitoring tools might execute AppCmd commands as part of their regular checks. Verify the legitimacy of these tools and exclude their known processes from triggering alerts.
- Development and testing environments: In non-production environments, developers might frequently use AppCmd for testing purposes. Consider excluding these environments from the rule or adjusting the sensitivity of alerts based on the environment type.

### Response and remediation

- Immediately isolate the affected server from the network to prevent further unauthorized access.
- Conduct a thorough investigation to determine the extent of the compromise, focusing on identifying any additional compromised accounts or systems.
- Review server logs and AppCmd usage history to identify unauthorized access patterns and potential entry points.
- Change all service account passwords associated with the IIS server and ensure they follow strong password policies.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging and monitoring for IIS servers, including command-line activity and access logs, to detect future unauthorized actions.
- Integrate security information and event management (SIEM) solutions to correlate and analyze security events across the network.
- Apply security patches and updates to the IIS server and related software to mitigate known vulnerabilities.
- Conduct a security review of the IIS server configuration and apply hardening measures, such as disabling unnecessary services and enforcing least privilege access.
- Educate and train IT staff on recognizing and responding to similar threats, leveraging MITRE ATT&CK framework details for context on credential dumping techniques."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

