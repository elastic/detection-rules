[metadata]
creation_date = "2023/07/12"
integration = ["windows"]
maturity = "production"
updated_date = "2025/01/10"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
building_block_type = "default"
description = """
Identifies the use of Cmdlets and methods related to remote execution activities using WinRM. Attackers can abuse WinRM
to perform lateral movement using built-in tools.
"""
from = "now-119m"
index = ["winlogbeat-*", "logs-windows.powershell*"]
interval = "60m"
language = "kuery"
license = "Elastic License v2"
name = "PowerShell Script with Password Policy Discovery Capabilities"
risk_score = 21
rule_id = "fe25d5bc-01fa-494a-95ff-535c29cc4c96"
setup = """## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add "hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Tactic: Execution",
    "Data Source: PowerShell Logs",
    "Rule Type: BBR",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category: "process" and host.os.type:windows and
(
  powershell.file.script_block_text: (
    "Get-ADDefaultDomainPasswordPolicy" or
    "Get-ADFineGrainedPasswordPolicy" or
    "Get-ADUserResultantPasswordPolicy" or
    "Get-DomainPolicy" or
    "Get-GPPPassword" or
    "Get-PassPol"
  )
  or
  powershell.file.script_block_text: (
    ("defaultNamingContext" or "ActiveDirectory.DirectoryContext" or "ActiveDirectory.DirectorySearcher") and
    (
      (
        ".MinLengthPassword" or
        ".MinPasswordAge" or
        ".MaxPasswordAge"
      ) or
      (
        "minPwdAge" or
        "maxPwdAge" or
        "minPwdLength"
      ) or
      (
        "msDS-PasswordSettings"
      )
    )
  )
) and not powershell.file.script_block_text : (
    "sentinelbreakpoints" and "Set-PSBreakpoint" and "PowerSploitIndicators"
  )
  and not
  (
    powershell.file.script_block_text : ("43c15630-959c-49e4-a977-758c5cc93408" and "CmdletsToExport" and "ActiveDirectory.Types.ps1xml")
  )
  and not user.id : "S-1-5-18"
'''
note = """## Triage and analysis

> **Disclaimer**:
> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating PowerShell Script with Password Policy Discovery Capabilities

PowerShell, a powerful scripting language in Windows, facilitates system management and automation. Adversaries exploit PowerShell to discover password policies, aiding lateral movement and privilege escalation. The detection rule identifies suspicious PowerShell activity by monitoring specific cmdlets and methods linked to password policy queries, filtering out benign scripts and known safe user IDs to pinpoint potential threats.

### Possible investigation steps

- Review the PowerShell script block text associated with the alert to identify any suspicious cmdlets or methods, such as "Get-ADDefaultDomainPasswordPolicy" or "ActiveDirectory.DirectorySearcher", that may indicate an attempt to discover password policies.
- Check the user ID associated with the alert to determine if it is a known and trusted user or if it is an unexpected or unauthorized account, especially since the rule excludes the system account "S-1-5-18".
- Investigate the source host of the PowerShell activity to determine if it is a critical system or a less monitored endpoint, which could provide context on the potential impact of the activity.
- Correlate the alert with other recent security events or logs from the same host or user to identify any patterns of suspicious behavior or potential lateral movement attempts.
- Assess the risk score and severity of the alert in conjunction with other security intelligence to prioritize the investigation and response efforts effectively.

### False positive analysis

- Scripts used by system administrators for legitimate password policy audits may trigger the rule. To manage this, identify and whitelist specific user IDs or script signatures that are known to perform these tasks regularly.
- Automated compliance checks or security tools that query password policies as part of their routine operations can be mistaken for threats. Exclude these tools by adding their unique identifiers or script block text to the exception list.
- PowerShell scripts executed by trusted applications or services that include password policy queries for configuration purposes might be flagged. Review and exclude these applications by their process names or associated user IDs.
- Development or testing environments where password policy scripts are frequently run for validation purposes can generate false positives. Implement exclusions for these environments by specifying their hostnames or IP addresses.

### Response and remediation

- Isolate the affected system from the network to prevent further lateral movement and potential data exfiltration.
- Terminate any suspicious PowerShell processes identified by the detection rule to halt ongoing malicious activities.
- Conduct a thorough review of user accounts and privileges, focusing on any accounts that may have been compromised or used for unauthorized access.
- Reset passwords for affected accounts and enforce a password policy that includes complexity and expiration requirements to mitigate future risks.
- Implement additional monitoring on the affected system and network for any signs of further suspicious activity, particularly related to PowerShell and WinRM usage.
- Escalate the incident to the security operations center (SOC) or incident response team for a comprehensive investigation and to determine the full scope of the breach.
- Review and update endpoint protection measures to ensure they are capable of detecting and blocking similar threats in the future."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1201"
name = "Password Policy Discovery"
reference = "https://attack.mitre.org/techniques/T1201/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

