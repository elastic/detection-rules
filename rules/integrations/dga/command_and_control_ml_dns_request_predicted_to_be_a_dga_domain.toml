[metadata]
creation_date = "2023/09/14"
integration = ["dga", "endpoint", "network_traffic"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
A supervised machine learning model has identified a DNS question name that is predicted to be the result of a Domain
Generation Algorithm (DGA), which could indicate command and control network activity.
"""
from = "now-10m"
index = ["logs-endpoint.events.*", "logs-network_traffic.*"]
language = "kuery"
license = "Elastic License v2"
name = "Machine Learning Detected a DNS Request Predicted to be a DGA Domain"
references = [
    "https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html",
    "https://docs.elastic.co/en/integrations/dga",
    "https://www.elastic.co/security-labs/detect-domain-generation-algorithm-activity-with-new-kibana-integration",
]
risk_score = 21
rule_id = "f3403393-1fd9-4686-8f6e-596c58bc00b4"
setup = """## Setup

The rule requires the Domain Generation Algorithm (DGA) Detection integration assets to be installed, as well as DNS events collected by integrations such as Elastic Defend, Network Packet Capture, or Packetbeat.  

### DGA Detection Setup
The DGA Detection integration consists of an ML-based framework to detect DGA activity in DNS events.

#### Prerequisite Requirements:
- Fleet is required for DGA Detection.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).
- DNS events collected by the [Elastic Defend](https://docs.elastic.co/en/integrations/endpoint), [Network Packet Capture](https://docs.elastic.co/integrations/network_traffic) integration, or [Packetbeat](https://www.elastic.co/guide/en/beats/packetbeat/current/packetbeat-overview.html).
- To install Elastic Defend, refer to the [documentation](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
- To add the Network Packet Capture integration to an Elastic Agent policy, refer to [this](https://www.elastic.co/guide/en/fleet/current/add-integration-to-policy.html) guide.
- To set up and run Packetbeat, follow [this](https://www.elastic.co/guide/en/beats/packetbeat/current/setting-up-and-running.html) guide.

#### The following steps should be executed to install assets associated with the DGA Detection integration:
- Go to the Kibana homepage. Under Management, click Integrations.
- In the query bar, search for Domain Generation Algorithm Detection and select the integration to see more details about it.
- Follow the instructions under the **Installation** section.
- For this rule to work, complete the instructions through **Configure the ingest pipeline**.
"""
severity = "low"
tags = [
    "Domain: Network",
    "Domain: Endpoint",
    "Data Source: Elastic Defend",
    "Use Case: Domain Generation Algorithm Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Command and Control",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
ml_is_dga.malicious_prediction:1 and not dns.question.registered_domain:avsvmcloud.com
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Machine Learning Detected a DNS Request Predicted to be a DGA Domain

Machine learning models can identify patterns in DNS requests that suggest the use of Domain Generation Algorithms (DGAs), often employed by adversaries to dynamically generate domain names for command and control servers, evading static blocklists. This detection rule leverages such models to flag DNS queries likely generated by DGAs, excluding known benign domains, thus highlighting potential malicious activity.

### Possible investigation steps

- Review the alert details to understand the context, focusing on the `ml_is_dga.malicious_prediction` field to confirm the prediction of a DGA domain.
- Examine the `dns.question.registered_domain` field to identify the specific domain flagged by the machine learning model.
- Cross-reference the flagged domain against known threat intelligence sources to determine if it has been previously associated with malicious activity.
- Investigate the source IP address of the DNS request to identify the device or user responsible for the query.
- Use network logs to trace the DNS request's path and identify any other suspicious domains queried by the same source.
- Analyze historical DNS logs to check for patterns or repeated queries to similar domains, which might indicate ongoing DGA activity.
- Utilize Osquery to gather additional context from the endpoint. For example, run the following query to list recent DNS queries from the device: `SELECT name, time FROM dns_resolvers WHERE name LIKE '%<suspicious_domain>%' ORDER BY time DESC;`
- Check for any associated processes or applications on the endpoint that might be generating the suspicious DNS requests, using endpoint detection and response (EDR) tools.
- Investigate any outbound connections from the source IP to external IPs that might correlate with the flagged domain, using firewall or proxy logs.
- Collaborate with other teams to gather additional context, such as user activity logs or recent changes to the network environment, to better understand the potential threat.

### False positive analysis

- Known false positives for the Machine Learning Detected a DNS Request Predicted to be a DGA Domain rule can include legitimate services that frequently change their domain names, such as content delivery networks (CDNs) or cloud service providers, which may use dynamic domain generation for load balancing or redundancy.
- Users can manage these false positives by creating exceptions for domains that are verified to be part of legitimate services. This can be done by maintaining a whitelist of known benign domains that are frequently flagged, ensuring that these are excluded from the machine learning model's predictions.
- Another potential false positive source is internal applications that use dynamic domain generation for legitimate purposes, such as testing environments or internal load balancing. Users should identify these applications and add their domains to an exception list to prevent unnecessary alerts.
- Regularly reviewing and updating the list of exceptions is crucial, as legitimate services may change their domain generation patterns over time. This ensures that the detection rule remains effective without being overwhelmed by false positives.
- Collaboration with network and security teams can help in identifying patterns of legitimate dynamic domain usage, allowing for more accurate tuning of the detection rule and reducing the likelihood of false positives.

### Response and remediation

- Isolate the affected system from the network to prevent further communication with potential command and control servers.
- Conduct a thorough investigation of the DNS logs to identify other potentially malicious domains and assess the scope of the compromise.
- Utilize endpoint detection and response (EDR) tools to scan the affected system for additional indicators of compromise (IOCs) and remove any identified malware.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if other systems are affected.
- Implement a temporary block on the identified malicious domains across the network to prevent further access.
- Review and enhance DNS logging policies to ensure comprehensive monitoring and detection of suspicious activities in the future.
- Integrate threat intelligence feeds with security information and event management (SIEM) systems to improve detection capabilities for DGA-related threats.
- Restore the affected system from a known good backup to ensure it is free from compromise and return it to operational status.
- Apply security patches and updates to the affected system and other vulnerable systems to mitigate exploitation risks.
- Conduct a post-incident review to identify gaps in the current security posture and implement hardening measures, such as network segmentation and enhanced access controls, to prevent future incidents."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1568"
name = "Dynamic Resolution"
reference = "https://attack.mitre.org/techniques/T1568/"
[[rule.threat.technique.subtechnique]]
id = "T1568.002"
name = "Domain Generation Algorithms"
reference = "https://attack.mitre.org/techniques/T1568/002/"



[rule.threat.tactic]
id = "TA0011"
name = "Command and Control"
reference = "https://attack.mitre.org/tactics/TA0011/"

