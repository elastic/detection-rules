[metadata]
creation_date = "2020/07/21"
integration = ["aws"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies a high number of failed authentication attempts to the AWS management console for the Root user identity. An
adversary may attempt to brute force the password for the Root user identity, as it has complete access to all services
and resources for the AWS account.
"""
false_positives = [
    """
    Automated processes that attempt to authenticate using expired credentials and unbounded retries may lead to false
    positives.
    """,
]
from = "now-20m"
index = ["filebeat-*", "logs-aws.cloudtrail-*"]
language = "kuery"
license = "Elastic License v2"
name = "AWS Management Console Brute Force of Root User Identity"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating AWS Management Console Brute Force of Root User Identity

The AWS Management Console is a web-based interface for managing AWS resources. The root user has unrestricted access, making it a prime target for attackers. Adversaries may attempt brute force attacks to gain unauthorized access. The detection rule monitors failed login attempts by the root user, identifying potential brute force activity by analyzing specific event patterns in AWS CloudTrail logs.

### Possible investigation steps

- Review the AWS CloudTrail logs to confirm the high number of failed login attempts by filtering for `event.dataset:aws.cloudtrail`, `event.provider:signin.amazonaws.com`, `event.action:ConsoleLogin`, `aws.cloudtrail.user_identity.type:Root`, and `event.outcome:failure`.
- Analyze the timestamps of the failed login attempts to determine if they occurred in a short period, indicating a potential brute force attack.
- Identify the source IP addresses associated with the failed login attempts to check for any patterns or anomalies, such as multiple attempts from a single IP or a range of IPs.
- Cross-reference the source IP addresses with known malicious IP databases or threat intelligence feeds to assess if they are associated with previous malicious activities.
- Investigate the geographical locations of the source IP addresses to determine if they are consistent with the expected locations of legitimate users.
- Check for any successful login attempts by the root user around the same time as the failed attempts to assess if the brute force attack was successful.
- Review the AWS CloudTrail logs for any unusual activities or changes made by the root user following the failed login attempts.
- Use Osquery to gather additional context on the AWS environment. For example, run a query to list all recent login attempts: `SELECT * FROM aws_cloudtrail_events WHERE eventName = 'ConsoleLogin' AND userIdentity.type = 'Root';`
- Examine the AWS account's security settings, such as multi-factor authentication (MFA) status for the root user, to evaluate the account's resilience against brute force attacks.
- Collaborate with other security teams or stakeholders to gather additional context or insights regarding the alert and any related activities within the AWS environment.

### False positive analysis

- **Frequent failed logins by legitimate users:** Users may occasionally forget their passwords or mistype them, leading to multiple failed login attempts. To manage this, consider setting a threshold for the number of failed attempts within a specific time frame before triggering an alert.
- **Automated scripts or tools:** Some organizations use automated scripts for testing or monitoring purposes that may inadvertently cause failed login attempts. Identify and whitelist these scripts or tools to prevent false positives.
- **IP address changes:** Users accessing the AWS Management Console from different locations or through VPNs may trigger failed login attempts due to IP address changes. Implement IP whitelisting or geolocation checks to reduce false positives.
- **Time zone differences:** Users in different time zones may log in at unusual hours, leading to suspicion of brute force attempts. Adjust alerting rules to account for legitimate access patterns based on user time zones.
- **Password policy changes:** Recent changes in password policies may lead to an increase in failed login attempts as users adjust. Monitor for a temporary spike in failed logins following policy updates and adjust thresholds accordingly.

### Response and remediation

- Immediately disable the root user account to prevent further unauthorized access attempts.
- Review AWS CloudTrail logs to identify the source IP addresses of the failed login attempts and block these IPs using AWS security groups or network ACLs.
- Conduct a thorough investigation to determine if any successful logins occurred and assess any potential unauthorized changes or data access.
- Reset the root account password and ensure it is strong and unique, following best practices for password security.
- Enable multi-factor authentication (MFA) for the root user to add an additional layer of security.
- Escalate the incident to the security operations team for further analysis and to determine if the attack is part of a larger threat campaign.
- Implement AWS GuardDuty to enhance threat detection capabilities and receive alerts on suspicious activities.
- Review and update IAM policies to ensure the principle of least privilege is enforced across all user accounts.
- Conduct a security awareness training session for all users to reinforce the importance of secure password practices and recognizing phishing attempts.
- Regularly audit and monitor AWS account activity using CloudTrail and other logging services to quickly identify and respond to future threats.

## Setup

The AWS Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = ["https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html"]
risk_score = 73
rule_id = "4d50a94f-2844-43fa-8395-6afbd5e1c5ef"
severity = "high"
tags = [
    "Domain: Cloud",
    "Data Source: AWS",
    "Data Source: Amazon Web Services",
    "Use Case: Identity and Access Audit",
    "Tactic: Credential Access",
]
timestamp_override = "event.ingested"
type = "threshold"

query = '''
event.dataset:aws.cloudtrail and event.provider:signin.amazonaws.com and event.action:ConsoleLogin and aws.cloudtrail.user_identity.type:Root and event.outcome:failure
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1110"
name = "Brute Force"
reference = "https://attack.mitre.org/techniques/T1110/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

[rule.threshold]
field = ["cloud.account.id"]
value = 10

