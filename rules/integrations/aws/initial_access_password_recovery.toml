[metadata]
creation_date = "2020/07/02"
integration = ["aws"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies AWS IAM password recovery requests. An adversary may attempt to gain unauthorized AWS access by abusing
password recovery mechanisms.
"""
false_positives = [
    """
    Verify whether the user identity, user agent, and/or hostname should be requesting changes in your environment.
    Password reset attempts from unfamiliar users should be investigated. If known behavior is causing false positives,
    it can be exempted from the rule.
    """,
]
from = "now-60m"
index = ["filebeat-*", "logs-aws.cloudtrail-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
name = "AWS IAM Password Recovery Requested"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating AWS IAM Password Recovery Requested

AWS IAM manages user access and permissions in AWS environments. Password recovery requests are legitimate processes for users to regain access. However, adversaries may exploit this by initiating unauthorized recovery attempts to gain access. The detection rule monitors AWS CloudTrail logs for successful password recovery requests, flagging potential unauthorized access attempts by correlating specific event attributes.

### Possible investigation steps

- Review the AWS CloudTrail logs to confirm the details of the password recovery request, focusing on the `event.dataset:aws.cloudtrail` and `event.provider:signin.amazonaws.com` fields to ensure the event is related to AWS IAM.
- Verify the `event.action:PasswordRecoveryRequested` field to confirm that the alert was triggered by a password recovery request.
- Check the `event.outcome:success` field to ensure the password recovery request was successful, indicating a potential unauthorized access attempt.
- Identify the IAM user associated with the password recovery request and review their recent activity for any anomalies or unauthorized actions.
- Investigate the source IP address and geolocation from which the password recovery request was initiated to determine if it aligns with the user's typical access patterns.
- Examine the AWS account's login history to identify any unusual login attempts or patterns that could indicate compromised credentials.
- Use Osquery to gather additional context on the IAM user's activity. For example, run the following Osquery query to list recent actions by the user: `SELECT * FROM aws_cloudtrail_events WHERE userIdentity.arn = 'arn:aws:iam::<account-id>:user/<username>' ORDER BY eventTime DESC LIMIT 10;`
- Review any recent changes to IAM policies or permissions associated with the user to identify potential privilege escalation attempts.
- Check for any other security alerts or incidents related to the same user or account to assess if this is part of a broader attack.
- Collaborate with the user or account owner to verify if the password recovery request was legitimate and authorized, ensuring that the user is aware of the request and its implications.

### False positive analysis

- Legitimate user activity: Regular users may frequently request password recovery due to forgotten passwords or account lockouts. These actions can be considered false positives if they originate from known and trusted users.
- Automated processes: Some organizations may have automated systems or scripts that periodically test password recovery mechanisms for security audits. These should be identified and excluded from alerts.
- Third-party integrations: Applications or services integrated with AWS IAM might trigger password recovery requests as part of their normal operation. Identifying these integrations and excluding them can reduce false positives.
- Handling false positives: Implement user and entity behavior analytics (UEBA) to establish a baseline of normal password recovery activities. Create exceptions for users or systems that regularly perform legitimate password recovery requests by adding them to an allowlist or using conditional logic in detection rules.

### Response and remediation

- Immediately verify the legitimacy of the password recovery request by contacting the user associated with the request to confirm if they initiated it.
- Temporarily disable the affected IAM user account to prevent any unauthorized access until the investigation is complete.
- Review AWS CloudTrail logs for any suspicious activities associated with the IAM user account, focusing on any unusual login attempts or changes in permissions.
- Check for any other recent password recovery requests or account changes that may indicate a broader attack.
- If unauthorized access is confirmed, reset the IAM user's password and enforce multi-factor authentication (MFA) to enhance account security.
- Escalate the incident to the security operations team for a deeper investigation and to assess the potential impact on the AWS environment.
- Implement logging policies to ensure comprehensive monitoring of IAM activities, including password recovery requests and login attempts.
- Integrate AWS CloudTrail with a Security Information and Event Management (SIEM) system to enhance real-time detection and alerting capabilities.
- Conduct a security review of IAM policies and permissions to ensure the principle of least privilege is enforced across all user accounts.
- Educate users on recognizing phishing attempts and the importance of reporting suspicious activities to prevent future unauthorized access attempts.

## Setup

The AWS Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = ["https://www.cadosecurity.com/an-ongoing-aws-phishing-campaign/"]
risk_score = 21
rule_id = "69c420e8-6c9e-4d28-86c0-8a2be2d1e78c"
severity = "low"
tags = [
    "Domain: Cloud",
    "Data Source: AWS",
    "Data Source: Amazon Web Services",
    "Data Source: AWS Signin",
    "Use Case: Identity and Access Audit",
    "Tactic: Initial Access",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:aws.cloudtrail and event.provider:signin.amazonaws.com and event.action:PasswordRecoveryRequested and event.outcome:success
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1078"
name = "Valid Accounts"
reference = "https://attack.mitre.org/techniques/T1078/"


[rule.threat.tactic]
id = "TA0001"
name = "Initial Access"
reference = "https://attack.mitre.org/tactics/TA0001/"

