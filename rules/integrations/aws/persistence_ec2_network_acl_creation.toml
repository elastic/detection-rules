[metadata]
creation_date = "2020/06/04"
integration = ["aws"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the creation of an AWS Elastic Compute Cloud (EC2) network access control list (ACL) or an entry in a network
ACL with a specified rule number.
"""
false_positives = [
    """
    Network ACL's may be created by a network administrator. Verify whether the user identity, user agent, and/or
    hostname should be making changes in your environment. Network ACL creations by unfamiliar users or hosts should be
    investigated. If known behavior is causing false positives, it can be exempted from the rule.
    """,
]
from = "now-60m"
index = ["filebeat-*", "logs-aws.cloudtrail-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
name = "AWS EC2 Network Access Control List Creation"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating AWS EC2 Network Access Control List Creation

AWS EC2 Network ACLs are stateless firewalls for controlling inbound and outbound traffic at the subnet level. Adversaries may exploit ACLs to establish persistence or enable unauthorized access by creating permissive rules. The detection rule monitors successful creation events of ACLs or entries, flagging potential misuse by identifying unusual or unauthorized configurations.

### Possible investigation steps

- Review the alert details to confirm the event dataset is `aws.cloudtrail` and the event provider is `ec2.amazonaws.com`, ensuring the alert is relevant to AWS EC2 Network ACL creation.
- Verify the event action is either `CreateNetworkAcl` or `CreateNetworkAclEntry` and the event outcome is `success` to confirm the alert is triggered by a successful creation event.
- Identify the AWS account and user or role that initiated the ACL creation by examining the `user.identity.arn` and `user.identity.accountId` fields.
- Check the `sourceIPAddress` field to determine the IP address from which the request originated, which can help identify potential unauthorized access.
- Investigate the `aws.region` field to understand the geographical location of the resource creation and assess if it aligns with expected operations.
- Examine the `requestParameters` field to gather details about the specific ACL rules created, such as rule number, protocol, and port range, to identify any overly permissive configurations.
- Cross-reference the `userAgent` field to determine the tool or service used to create the ACL, which may provide insights into whether the action was automated or manual.
- Utilize AWS CloudTrail logs to search for any preceding or subsequent suspicious activities associated with the same user or IP address.
- If using Osquery, execute a query to list all current network ACLs and their entries for the affected AWS account to compare against known configurations:
  ```sql
  SELECT * FROM aws_ec2_network_acls WHERE account_id = '<affected_account_id>';
  ```
- Review IAM policies and permissions associated with the user or role that created the ACL to ensure they align with the principle of least privilege.

### False positive analysis

- Routine administrative tasks: Regular updates or changes to network configurations by authorized personnel can trigger alerts. To manage this, users can create exceptions for known IP addresses or user accounts that frequently perform these tasks.
- Automated scripts or tools: Organizations may use automated processes to manage network ACLs, which can result in multiple creation events. Users should identify and whitelist these scripts or tools to prevent unnecessary alerts.
- Infrastructure as Code (IaC) deployments: Deployments using IaC tools like Terraform or CloudFormation can generate numerous ACL creation events. Users can exclude these events by filtering based on the source of the deployment or tagging conventions.
- Testing and development environments: Frequent changes in non-production environments can lead to false positives. Users can exclude these environments by using environment-specific tags or identifiers in their monitoring rules.

### Response and remediation

- Immediately review the newly created Network ACLs and entries to verify if they align with the organization's security policies and intended configurations.
- Contain potential threats by temporarily restricting or removing overly permissive ACL rules that could allow unauthorized access.
- Investigate the source of the ACL creation by reviewing CloudTrail logs to identify the user or service account responsible for the action.
- If unauthorized access is suspected, rotate credentials and access keys for affected accounts and services to prevent further exploitation.
- Escalate the incident to the security operations team if the ACL creation is determined to be malicious or part of a larger attack pattern.
- Implement additional logging and monitoring for Network ACL changes to ensure real-time detection of suspicious activities.
- Integrate AWS CloudTrail with a Security Information and Event Management (SIEM) system to enhance threat detection and response capabilities.
- Restore the system to its operational state by reapplying the correct ACL configurations and ensuring all security policies are enforced.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans accordingly.
- Harden the environment by applying the principle of least privilege to IAM roles and ensuring that only authorized personnel can modify network configurations.

## Setup

The AWS Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = [
    "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/create-network-acl.html",
    "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html",
    "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/create-network-acl-entry.html",
    "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html",
]
risk_score = 21
rule_id = "39144f38-5284-4f8e-a2ae-e3fd628d90b0"
severity = "low"
tags = [
    "Domain: Cloud",
    "Data Source: AWS",
    "Data Source: Amazon Web Services",
    "Data Source: AWS EC2",
    "Use Case: Network Security Monitoring",
    "Tactic: Persistence",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:aws.cloudtrail and event.provider:ec2.amazonaws.com and event.action:(CreateNetworkAcl or CreateNetworkAclEntry) and event.outcome:success
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1133"
name = "External Remote Services"
reference = "https://attack.mitre.org/techniques/T1133/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

