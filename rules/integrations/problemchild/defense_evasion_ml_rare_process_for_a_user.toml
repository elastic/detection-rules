[metadata]
creation_date = "2023/10/16"
integration = ["problemchild", "endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
A machine learning job has detected a suspicious Windows process. This process has been classified as malicious in two
ways. It was predicted to be malicious by the ProblemChild supervised ML model, and it was found to be suspicious given
that its user context is unusual and does not commonly manifest malicious activity,by an unsupervised ML model. Such a
process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to
detection using conventional search rules.
"""
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = "problem_child_rare_process_by_user"
name = "Unusual Process Spawned by a User"
references = [
    "https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html",
    "https://docs.elastic.co/en/integrations/problemchild",
    "https://www.elastic.co/security-labs/detecting-living-off-the-land-attacks-with-new-elastic-integration",
]
risk_score = 21
rule_id = "40155ee4-1e6a-4e4d-a63b-e8ba16980cfb"
setup = """## Setup

The rule requires the Living off the Land (LotL) Attack Detection integration assets to be installed, as well as Windows process events collected by integrations such as Elastic Defend or Winlogbeat.  

### LotL Attack Detection Setup
The LotL Attack Detection integration detects living-off-the-land activity in Windows process events.

#### Prerequisite Requirements:
- Fleet is required for LotL Attack Detection.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).
- Windows process events collected by the [Elastic Defend](https://docs.elastic.co/en/integrations/endpoint) integration or Winlogbeat(https://www.elastic.co/guide/en/beats/winlogbeat/current/_winlogbeat_overview.html).
- To install Elastic Defend, refer to the [documentation](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
- To set up and run Winlogbeat, follow [this](https://www.elastic.co/guide/en/beats/winlogbeat/current/winlogbeat-installation-configuration.html) guide.

#### The following steps should be executed to install assets associated with the LotL Attack Detection integration:
- Go to the Kibana homepage. Under Management, click Integrations.
- In the query bar, search for Living off the Land Attack Detection and select the integration to see more details about it.
- Follow the instructions under the **Installation** section.
- For this rule to work, complete the instructions through **Add preconfigured anomaly detection jobs**.
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Living off the Land Attack Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Defense Evasion",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Process Spawned by a User

The detection of unusual processes spawned by users leverages machine learning to identify anomalies in user behavior and process execution. Adversaries may exploit legitimate tools, known as LOLbins, to evade detection by masquerading malicious activities as benign processes. This detection rule employs both supervised and unsupervised ML models to flag processes that deviate from typical user patterns, indicating potential misuse or malicious intent.

### Possible investigation steps

- Review the alert details to identify the specific process name, user context, and timestamp of the unusual process execution.
- Cross-reference the process name with known legitimate tools and LOLbins to determine if it is commonly used for legitimate purposes or known for malicious activity.
- Analyze the user context to understand if the user typically runs such processes. Check historical data for any previous instances of this process being executed by the same user.
- Investigate the parent process that spawned the unusual process to determine if it is a legitimate process or potentially compromised.
- Use Osquery to gather additional context about the process. For example, run the following query to retrieve details about the process and its parent: `SELECT pid, name, path, parent, cmdline FROM processes WHERE name = '<process_name>';`
- Check for any recent changes in the user's behavior or system configuration that might explain the unusual process execution.
- Examine network connections initiated by the process to identify any suspicious or unexpected external communications.
- Review system logs and security events around the time of the process execution for any related anomalies or indicators of compromise.
- Correlate the findings with other security alerts or incidents to determine if this is part of a broader attack campaign.
- Document all findings and observations to provide a comprehensive overview of the investigation, which can be used for further analysis or reporting.

### False positive analysis

- Known false positives for the Unusual Process Spawned by a User rule may include legitimate administrative tools or scripts that are infrequently used but necessary for specific tasks, such as system updates or maintenance activities, which may be flagged due to their atypical execution patterns.
- Users can manage these false positives by creating exceptions for processes that are verified as non-threatening. This can be done by analyzing the context in which these processes are executed, such as the time, user, and system involved, and then configuring the ML models to recognize these patterns as benign.
- Another common false positive scenario involves software updates or installations that temporarily alter user behavior or process execution patterns. Users should document these occurrences and adjust the detection parameters to accommodate such changes without compromising security.
- To handle false positives effectively, users should regularly review flagged processes and update the exception list to include any new legitimate processes that are consistently misclassified, ensuring that the detection system remains accurate and efficient.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malicious activity.
- Conduct a thorough investigation of the flagged process, including reviewing process execution details, parent processes, and associated user activity.
- Utilize endpoint detection and response (EDR) tools to analyze the system for additional indicators of compromise (IOCs) and identify any persistence mechanisms.
- Terminate the suspicious process and remove any associated files or artifacts identified during the investigation.
- Escalate the incident to the security operations center (SOC) or incident response team if the process is confirmed to be malicious or if there is evidence of broader compromise.
- Implement enhanced logging policies to capture detailed process execution and user activity for future analysis and detection.
- Integrate threat intelligence feeds to enrich alerts with context and improve detection capabilities against known LOLbins and masquerading techniques.
- Restore the system to its operational state by applying necessary patches, updates, and verifying system integrity.
- Conduct a post-incident review to identify gaps in detection and response, and update security policies and procedures accordingly.
- Implement hardening measures such as application whitelisting, user behavior analytics, and least privilege access controls to reduce the risk of similar incidents in the future."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

