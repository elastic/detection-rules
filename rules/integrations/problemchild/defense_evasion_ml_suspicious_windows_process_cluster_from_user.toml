[metadata]
creation_date = "2023/10/16"
integration = ["problemchild", "endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high
scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es)
were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious
processes, each process has the same user name, and the aggregate score of the event cluster was calculated to be
unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly
involving LOLbins, that may be resistant to detection using conventional search rules.
"""
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = "problem_child_high_sum_by_user"
name = "Suspicious Windows Process Cluster Spawned by a User"
references = [
    "https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html",
    "https://docs.elastic.co/en/integrations/problemchild",
    "https://www.elastic.co/security-labs/detecting-living-off-the-land-attacks-with-new-elastic-integration",
]
risk_score = 21
rule_id = "1224da6c-0326-4b4f-8454-68cdc5ae542b"
setup = """## Setup

The rule requires the Living off the Land (LotL) Attack Detection integration assets to be installed, as well as Windows process events collected by integrations such as Elastic Defend or Winlogbeat.  

### LotL Attack Detection Setup
The LotL Attack Detection integration detects living-off-the-land activity in Windows process events.

#### Prerequisite Requirements:
- Fleet is required for LotL Attack Detection.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).
- Windows process events collected by the [Elastic Defend](https://docs.elastic.co/en/integrations/endpoint) integration or Winlogbeat(https://www.elastic.co/guide/en/beats/winlogbeat/current/_winlogbeat_overview.html).
- To install Elastic Defend, refer to the [documentation](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
- To set up and run Winlogbeat, follow [this](https://www.elastic.co/guide/en/beats/winlogbeat/current/winlogbeat-installation-configuration.html) guide.

#### The following steps should be executed to install assets associated with the LotL Attack Detection integration:
- Go to the Kibana homepage. Under Management, click Integrations.
- In the query bar, search for Living off the Land Attack Detection and select the integration to see more details about it.
- Follow the instructions under the **Installation** section.
- For this rule to work, complete the instructions through **Add preconfigured anomaly detection jobs**.
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Living off the Land Attack Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Defense Evasion",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Suspicious Windows Process Cluster Spawned by a User
The detection leverages machine learning to identify clusters of Windows processes with high malicious probability scores. Adversaries may exploit legitimate binaries (LOLBins) to evade detection, masquerading as benign processes. This rule uses both supervised and unsupervised ML models to flag anomalies, focusing on clusters with shared user names and high aggregate scores, indicating potential malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific processes flagged as suspicious, focusing on the user name and the aggregate malicious probability score.
- Cross-reference the flagged processes with known legitimate binaries (LOLBins) to determine if they are being used in an unusual context or manner.
- Use process lineage analysis to trace the parent and child processes of the flagged processes, identifying any unusual or unexpected process relationships.
- Investigate the user account associated with the suspicious processes to determine if there have been any recent changes in behavior or access patterns.
- Check for any recent logins or access attempts from unusual locations or devices for the user associated with the suspicious processes.
- Utilize Osquery to gather additional context on the suspicious processes. For example, run the following query to list all processes started by the user in question: `SELECT pid, name, path, cmdline, start_time FROM processes WHERE user = '<username>';`
- Examine network connections initiated by the suspicious processes to identify any unusual or unauthorized external communications.
- Review recent file modifications or creations by the suspicious processes to detect any potential data exfiltration or tampering activities.
- Analyze system logs for any other anomalies or errors that coincide with the time frame of the suspicious process activity.
- Correlate the findings with other security tools and logs to build a comprehensive picture of the potential threat and its scope.

### False positive analysis

- Legitimate administrative tools: Some legitimate administrative tools and scripts may trigger false positives due to their similarity to known malicious patterns. Users should review these alerts and consider adding exceptions for trusted tools frequently used in their environment.
- Software updates and installations: During software updates or installations, processes may exhibit behaviors that resemble malicious activity. Users can mitigate these false positives by creating exceptions for known update processes or installation scripts.
- Custom scripts and automation: Custom scripts or automated tasks that perform system-level operations might be flagged as suspicious. Users should evaluate these scripts and, if deemed safe, exclude them from detection to prevent unnecessary alerts.
- Frequent use of LOLBins: In environments where legitimate use of LOLBins is common, such as in development or testing, these processes might be incorrectly classified as malicious. Users should identify and exclude these benign uses to reduce false positives.
- Shared user accounts: Environments with shared user accounts may see higher false positive rates due to the aggregation of process scores. Users should consider monitoring these accounts separately or implementing more granular user tracking to better assess the context of alerts.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malicious activity.
- Conduct a thorough investigation of the flagged processes to confirm malicious activity, focusing on the use of LOLBins and masquerading techniques.
- Terminate any identified malicious processes and remove any associated files or executables from the system.
- Review and analyze user account activity to identify any unauthorized access or privilege escalation attempts.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging policies to capture detailed process execution and user activity, aiding in future investigations.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats.
- Restore the system to its operational state by applying the latest security patches and updates, and verifying system integrity.
- Conduct a security awareness session for users to educate them on recognizing and reporting suspicious activities.
- Implement system hardening measures, such as disabling unnecessary services and enforcing least privilege access controls, to reduce the attack surface."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

