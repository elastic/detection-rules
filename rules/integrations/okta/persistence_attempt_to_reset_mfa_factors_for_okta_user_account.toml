[metadata]
creation_date = "2020/05/21"
integration = ["okta"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.15.0"
min_stack_comments = "Breaking change at 8.15.0 for the Okta Integration."

[rule]
author = ["Elastic"]
description = """
Detects attempts to reset an Okta user's enrolled multi-factor authentication (MFA) factors. An adversary may attempt to
reset the MFA factors for an Okta user's account in order to register new MFA factors and abuse the account to blend in
with normal activity in the victim's environment.
"""
false_positives = [
    """
    Consider adding exceptions to this rule to filter false positives if the MFA factors for Okta user accounts are
    regularly reset in your organization.
    """,
]
index = ["filebeat-*", "logs-okta*"]
language = "kuery"
license = "Elastic License v2"
name = "Attempt to Reset MFA Factors for an Okta User Account"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Attempt to Reset MFA Factors for an Okta User Account

Okta's MFA system enhances security by requiring multiple verification methods. Adversaries may exploit this by resetting MFA factors, allowing them to register their own and gain unauthorized access. The detection rule identifies such attempts by monitoring specific system events, alerting analysts to potential account manipulation threats.

### Possible investigation steps

- Review the alert details to confirm the presence of the `event.dataset:okta.system` and `event.action:user.mfa.factor.reset_all` fields, which indicate an attempt to reset MFA factors.
- Identify the user account associated with the alert by examining the `user.name` or `user.id` fields in the event data.
- Check the timestamp of the event to determine when the MFA reset attempt occurred and correlate it with any other suspicious activities around the same time.
- Investigate the source IP address and geolocation from which the MFA reset attempt was made to assess if it aligns with the user's typical access patterns.
- Review the user's recent login history and activity logs in Okta to identify any unusual behavior or unauthorized access attempts.
- Examine any changes to the user's account settings or permissions around the time of the MFA reset attempt to detect potential account manipulation.
- Utilize Osquery to gather additional context on the user's device, such as running processes or network connections, to identify any signs of compromise. Example Osquery: `SELECT * FROM processes WHERE user = '<username>';`
- Check for any other alerts or incidents involving the same user account or IP address to identify potential patterns or coordinated attacks.
- Review the organization's change management and access request logs to verify if the MFA reset was authorized or part of a legitimate request.
- Collaborate with the user or their manager to confirm whether the MFA reset attempt was expected or if it indicates unauthorized activity.

### False positive analysis

- Routine administrative actions: IT administrators may legitimately reset MFA factors for maintenance or user support, which can trigger the detection rule. To manage this, create exceptions for known administrative accounts or scheduled maintenance windows.
- User-initiated resets: Users might reset their own MFA factors due to lost devices or personal preference changes. Implement a verification process to confirm user-initiated actions and exclude these from alerts.
- Automated processes: Some organizations use automated scripts or tools to manage MFA settings, which could be mistaken for malicious activity. Identify and whitelist these processes to prevent false positives.
- Third-party integrations: Integrations with other security or identity management systems might reset MFA factors as part of their normal operation. Document and exclude these integrations from triggering alerts.

### Response and remediation

- Immediately isolate the affected user account by disabling it to prevent further unauthorized access.
- Verify the identity of the legitimate user through an out-of-band communication method to ensure they are not compromised.
- Review recent login and activity logs for the affected account to identify any suspicious behavior or unauthorized access attempts.
- Reset the MFA factors for the affected account and ensure that only the legitimate user can re-enroll their MFA devices.
- Conduct a thorough investigation to determine how the adversary gained access to reset the MFA factors, focusing on potential phishing attacks or credential compromise.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if other accounts or systems are affected.
- Implement enhanced logging and monitoring for Okta events, specifically focusing on MFA-related actions, to improve detection of similar threats in the future.
- Integrate Okta logs with a security information and event management (SIEM) system to enable real-time alerting and correlation with other security events.
- Educate users on recognizing phishing attempts and the importance of safeguarding their credentials and MFA devices.
- Review and update security policies and procedures related to account management and MFA to incorporate lessons learned from the incident and strengthen defenses against account manipulation.

## Setup

The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = [
    "https://developer.okta.com/docs/reference/api/system-log/",
    "https://developer.okta.com/docs/reference/api/event-types/",
    "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
    "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
    "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta",
    "https://www.elastic.co/security-labs/okta-and-lapsus-what-you-need-to-know",
]
risk_score = 21
rule_id = "729aa18d-06a6-41c7-b175-b65b739b1181"
severity = "low"
tags = ["Tactic: Persistence", "Use Case: Identity and Access Audit", "Data Source: Okta"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:okta.system and event.action:user.mfa.factor.reset_all
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1098"
name = "Account Manipulation"
reference = "https://attack.mitre.org/techniques/T1098/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

