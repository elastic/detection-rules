[metadata]
creation_date = "2020/07/08"
integration = ["endpoint"]
maturity = "production"
min_stack_comments = "New fields added: required_fields, related_integrations, setup"
min_stack_version = "8.3.0"
promotion = true
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Generates a detection alert each time an Elastic Defend alert is received. Enabling this rule allows you to
immediately begin investigating your Endpoint alerts.
"""
enabled = true
from = "now-10m"
index = ["logs-endpoint.alerts-*"]
language = "kuery"
license = "Elastic License v2"
max_signals = 10000
name = "Endpoint Security (Elastic Defend)"

risk_score = 47
rule_id = "9a1a2dae-0b5f-4c3d-8305-a268d404c306"
rule_name_override = "message"
setup = """
## Setup

### Elastic Defend Alerts
If this rule is disabled, you will not receive alerts for Elastic Defend alerts. This rule is designed to capture all alerts generated by Elastic Defend. For more granular alerting, consider using additional prebuilt-rules that capture specific Elastic Defend alerts.

If this rule is enabled, along with the related rules listed below, you will receive duplicate alerts for the same events. To avoid this, it is recommended to disable this generic rule and enable the more specific rules that capture these alerts separately.

Related rules:
- Behavior - Detected - Elastic Defend (UUID: 0f615fe4-eaa2-11ee-ae33-f661ea17fbce)
- Behavior - Prevented - Elastic Defend (UUID: eb804972-ea34-11ee-a417-f661ea17fbce)
- Malicious File - Detected - Elastic Defend (UUID: f2c3caa6-ea34-11ee-a417-f661ea17fbce)
- Malicious File - Prevented - Elastic Defend (UUID: f87e6122-ea34-11ee-a417-f661ea17fbce)
- Memory Threat - Detected - Elastic Defend (UUID: 017de1e4-ea35-11ee-a417-f661ea17fbce)
- Memory Threat - Prevented - Elastic Defend (UUID: 06f3a26c-ea35-11ee-a417-f661ea17fbce)
- Ransomware - Detected - Elastic Defend (UUID: 0c74cd7e-ea35-11ee-a417-f661ea17fbce)
- Ransomware - Prevented - Elastic Defend (UUID: 10f3d520-ea35-11ee-a417-f661ea17fbce)

### Additional notes
This rule is configured to generate more **Max alerts per run** than the default 1000 alerts per run set for all rules. This is to ensure that it captures as many alerts as possible.

**IMPORTANT:** The rule's **Max alerts per run** setting can be superseded by the `xpack.alerting.rules.run.alerts.max` Kibana config setting, which determines the maximum alerts generated by _any_ rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, this rule will still generate no more than 1000 alerts even if its own **Max alerts per run** is set higher.

To make sure this rule can generate as many alerts as it's configured in its own **Max alerts per run** setting, increase the `xpack.alerting.rules.run.alerts.max` system setting accordingly.

**NOTE:** Changing `xpack.alerting.rules.run.alerts.max` is not possible in Serverless projects.
"""
severity = "medium"
tags = ["Data Source: Elastic Defend"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.kind:alert and event.module:(endpoint and not endgame)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Endpoint Security

Endpoint Security plays a crucial role in safeguarding devices by monitoring and responding to threats. It leverages alerts from Elastic Endpoint Security to detect suspicious activities. Adversaries may exploit endpoints to execute unauthorized actions or exfiltrate data. The detection rule identifies potential threats by filtering alerts related to endpoint activities, excluding non-relevant modules, thus enabling swift investigation and response.

### Possible investigation steps

- Review the alert details to understand the context, focusing on the `event.kind:alert` and `event.module:endpoint` fields to confirm the alert's origin and type.
- Check the alert timestamp to determine when the suspicious activity occurred and correlate it with other events around the same time.
- Investigate the affected endpoint by identifying the device's hostname or IP address from the alert details.
- Examine user activity on the affected endpoint to identify any unauthorized access or actions, using logs that capture user logins and executed commands.
- Utilize Osquery to gather more information about the endpoint. For example, run the following query to list all running processes: `SELECT pid, name, path, cmdline FROM processes;`.
- Analyze network connections from the affected endpoint to identify any unusual or unauthorized external communications.
- Cross-reference the alert with other security tools and logs to gather additional context, such as firewall logs or intrusion detection system alerts.
- Investigate any file modifications or creations on the endpoint around the alert time to detect potential malicious files or scripts.
- Check for any recent changes in system configurations or installed software that could indicate tampering or exploitation.
- Review historical alerts and incidents related to the same endpoint or user to identify patterns or repeated attack attempts.

### False positive analysis

- Known false positives for the Endpoint Security rule may include benign activities that resemble threat patterns, such as routine software updates or legitimate administrative tasks that trigger alerts.
- Users can manage these false positives by creating exceptions for specific processes or activities that are consistently identified as non-threatening, ensuring these are well-documented and reviewed regularly.
- It's important to analyze the context of each alert to determine if it aligns with expected behavior, such as scheduled maintenance or known software behavior, before categorizing it as a false positive.
- Implementing a feedback loop with security teams can help refine detection rules and reduce the frequency of false positives by adjusting the criteria for alerts.
- Regularly updating the list of exceptions and reviewing them against current threat intelligence can help maintain a balance between security and operational efficiency.

### Response and remediation

- Isolate the affected endpoint from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation of the alert by analyzing logs and endpoint data to determine the scope and impact of the threat.
- Identify and terminate any malicious processes or unauthorized access points on the affected endpoint.
- Escalate the incident to the security operations center (SOC) or incident response team if the threat is beyond the current team's capability to handle.
- Apply patches or updates to the affected systems to address any vulnerabilities exploited by the adversary.
- Restore the system to its operational state by reinstalling the operating system or restoring from a clean backup if necessary.
- Implement enhanced logging policies to capture detailed endpoint activity for future investigations.
- Integrate additional security tools, such as intrusion detection systems or threat intelligence platforms, to improve threat detection capabilities.
- Conduct a post-incident review to identify gaps in the current security posture and update security policies accordingly.
- Apply hardening measures, such as disabling unnecessary services and enforcing strong authentication mechanisms, to reduce the attack surface of endpoints."""


[[rule.exceptions_list]]
id = "endpoint_list"
list_id = "endpoint_list"
namespace_type = "agnostic"
type = "endpoint"

[[rule.risk_score_mapping]]
field = "event.risk_score"
operator = "equals"
value = ""

[[rule.severity_mapping]]
field = "event.severity"
operator = "equals"
severity = "low"
value = "21"

[[rule.severity_mapping]]
field = "event.severity"
operator = "equals"
severity = "medium"
value = "47"

[[rule.severity_mapping]]
field = "event.severity"
operator = "equals"
severity = "high"
value = "73"

[[rule.severity_mapping]]
field = "event.severity"
operator = "equals"
severity = "critical"
value = "99"


