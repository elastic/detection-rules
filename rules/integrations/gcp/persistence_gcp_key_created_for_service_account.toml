[metadata]
creation_date = "2020/09/21"
integration = ["gcp"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies when a new key is created for a service account in Google Cloud Platform (GCP). A service account is a
special type of account used by an application or a virtual machine (VM) instance, not a person. Applications use
service accounts to make authorized API calls, authorized as either the service account itself, or as G Suite or Cloud
Identity users through domain-wide delegation. If private keys are not tracked and managed properly, they can present a
security risk. An adversary may create a new key for a service account in order to attempt to abuse the permissions
assigned to that account and evade detection.
"""
false_positives = [
    """
    Service account keys may be created by system administrators. Verify that the configuration change was expected.
    Exceptions can be added to this rule to filter expected behavior.
    """,
]
index = ["filebeat-*", "logs-gcp*"]
language = "kuery"
license = "Elastic License v2"
name = "GCP Service Account Key Creation"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating GCP Service Account Key Creation

In GCP, service accounts enable applications to interact with Google APIs securely. They use keys for authentication, which, if mismanaged, can be exploited by adversaries to gain unauthorized access. Malicious actors might create new keys to leverage existing permissions stealthily. The detection rule identifies successful key creation events, signaling potential misuse by monitoring specific audit logs.

### Possible investigation steps

- Review the alert details to confirm the presence of `event.dataset:gcp.audit`, `event.action:google.iam.admin.v*.CreateServiceAccountKey`, and `event.outcome:success` to ensure the alert is valid and corresponds to a successful key creation event.
- Identify the service account associated with the key creation by examining the audit log entry for details such as `serviceAccountId` and `serviceAccountEmail`.
- Check the `principalEmail` field in the audit log to determine which user or service account initiated the key creation event.
- Investigate the context of the key creation by reviewing the `timestamp` field to understand when the event occurred and correlate it with any other suspicious activities around the same time.
- Analyze the `resourceName` field to identify the specific resource or project associated with the service account key creation.
- Use Osquery to gather additional information about the service account and its permissions. For example, run the following Osquery query to list all service accounts and their associated keys: `SELECT * FROM gcp_service_account_keys WHERE service_account_email = '<serviceAccountEmail>';`.
- Review the IAM policy for the project or resource to understand the permissions granted to the service account and assess if they align with expected usage.
- Check for any recent changes in IAM roles or permissions for the service account by reviewing the audit logs for `event.action:google.iam.admin.v*.SetIamPolicy`.
- Investigate any other recent key creation events for the same service account to determine if there is a pattern or repeated unauthorized activity.
- Collaborate with the account owner or relevant stakeholders to verify if the key creation was authorized and necessary, and gather any additional context or explanations for the activity.

### False positive analysis

- Routine administrative tasks: Service account keys may be created as part of regular maintenance or deployment processes by authorized personnel. To manage these, users can create exceptions for known administrative activities by correlating key creation events with change management records or deployment logs.
- Automated processes: Some automated systems or CI/CD pipelines might generate service account keys as part of their normal operation. Users can handle these by identifying and excluding key creation events associated with specific automated workflows or service accounts dedicated to these processes.
- Testing environments: In development or testing environments, service account keys might be frequently created and deleted. Users can reduce false positives by excluding events from specific projects or environments that are designated for testing purposes.
- Third-party integrations: Certain third-party tools or integrations may require the creation of service account keys to function correctly. Users should document and exclude these known integrations by maintaining an inventory of approved third-party services and their associated service accounts.

### Response and remediation

- Immediately revoke the newly created service account key to prevent unauthorized access and potential misuse.
- Investigate the IAM audit logs to identify the user or service that created the key and assess if it was an authorized action.
- Review the permissions associated with the affected service account to ensure they are aligned with the principle of least privilege.
- Conduct a thorough review of recent activities performed by the service account to detect any suspicious or unauthorized actions.
- Escalate the incident to the security operations team if the key creation is deemed unauthorized or malicious, and initiate an incident response process.
- Implement logging policies to ensure all service account key creation events are logged and monitored in real-time for future detection.
- Integrate with a Security Information and Event Management (SIEM) system to correlate service account key creation events with other security events for enhanced threat detection.
- Restore the system to its operational state by ensuring all unauthorized keys are revoked and legitimate keys are securely managed.
- Harden the environment by enforcing key rotation policies and using Cloud Identity-Aware Proxy (IAP) to limit access to applications.
- Educate and train relevant personnel on the risks associated with service account key management and the importance of adhering to security best practices.

## Setup

The GCP Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = [
    "https://cloud.google.com/iam/docs/service-accounts",
    "https://cloud.google.com/iam/docs/creating-managing-service-account-keys",
]
risk_score = 21
rule_id = "0e5acaae-6a64-4bbc-adb8-27649c03f7e1"
severity = "low"
tags = [
    "Domain: Cloud",
    "Data Source: GCP",
    "Data Source: Google Cloud Platform",
    "Use Case: Identity and Access Audit",
    "Tactic: Persistence",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:gcp.audit and event.action:google.iam.admin.v*.CreateServiceAccountKey and event.outcome:success
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1098"
name = "Account Manipulation"
reference = "https://attack.mitre.org/techniques/T1098/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

