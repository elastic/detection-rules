[metadata]
creation_date = "2020/09/22"
integration = ["gcp"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies when a new service account is created in Google Cloud Platform (GCP). A service account is a special type of
account used by an application or a virtual machine (VM) instance, not a person. Applications use service accounts to
make authorized API calls, authorized as either the service account itself, or as G Suite or Cloud Identity users
through domain-wide delegation. If service accounts are not tracked and managed properly, they can present a security
risk. An adversary may create a new service account to use during their operations in order to avoid using a standard
user account and attempt to evade detection.
"""
false_positives = [
    """
    Service accounts can be created by system administrators. Verify that the behavior was expected. Exceptions can be
    added to this rule to filter expected behavior.
    """,
]
index = ["filebeat-*", "logs-gcp*"]
language = "kuery"
license = "Elastic License v2"
name = "GCP Service Account Creation"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating GCP Service Account Creation

In GCP, service accounts enable applications and VMs to authenticate and interact with Google services securely. However, adversaries may exploit this by creating unauthorized service accounts to maintain persistence and evade detection. The detection rule monitors audit logs for successful service account creation events, helping identify potential misuse by correlating specific actions and outcomes.

### Possible investigation steps

- Review the audit logs to confirm the event details, focusing on `event.dataset:gcp.audit` to ensure the event is related to GCP audit logs.
- Verify the `event.action:google.iam.admin.v*.CreateServiceAccount` to confirm that the action was indeed a service account creation.
- Check the `event.outcome:success` field to ensure the service account creation was successful.
- Identify the user or service that initiated the service account creation by examining the `actor` field in the audit logs.
- Investigate the context of the service account creation by reviewing the `request` and `response` fields in the audit logs for any unusual parameters or configurations.
- Cross-reference the service account details with known legitimate service accounts to determine if the creation aligns with expected patterns or projects.
- Use Osquery to gather additional context on the service account creation. For example, run the following query to list recent service account creations: `SELECT * FROM gcp_service_accounts WHERE creation_time > (NOW() - INTERVAL 1 DAY);`
- Check for any associated IAM policy changes around the time of the service account creation to identify if the new account was granted elevated permissions.
- Investigate any recent activity associated with the new service account, such as API calls or resource access, to identify potential misuse.
- Collaborate with the relevant project or application owners to verify if the service account creation was authorized and aligns with current operational needs.

### False positive analysis

- Routine administrative tasks: Service accounts may be created as part of regular administrative operations, such as setting up new applications or services. To manage these, users can create exceptions for known administrative actions by correlating them with change management records or approved workflows.
- Automated deployment processes: Continuous integration and deployment pipelines might automatically create service accounts. Users can handle these by identifying and excluding service account creation events linked to specific deployment tools or scripts.
- Third-party integrations: Some third-party services require the creation of service accounts for integration purposes. Users should maintain a list of approved third-party services and exclude related service account creation events from alerts.
- Testing and development environments: Service accounts are often created in non-production environments for testing purposes. Users can exclude these environments from monitoring or create specific rules that differentiate between production and non-production service account creation events.
- Frequent legitimate service account creation: In environments with high service account turnover, such as those using microservices architectures, users can establish baseline patterns and exclude events that match these patterns from triggering alerts.

### Response and remediation

- Immediately review the audit logs to confirm the unauthorized creation of the service account and identify the source of the request.
- Disable the suspicious service account to prevent further unauthorized access and actions.
- Investigate the permissions and roles assigned to the service account to assess potential access and impact.
- Check for any API calls or actions performed by the service account to identify any malicious activities.
- Escalate the incident to the security operations team for further analysis and to determine if other systems or accounts have been compromised.
- Implement additional logging and monitoring for service account activities to detect future unauthorized creations or actions.
- Review and update IAM policies to ensure that only authorized personnel can create and manage service accounts.
- Conduct a security review of the affected environment to identify and remediate any vulnerabilities that may have been exploited.
- Restore the system to its operational state by re-enabling legitimate service accounts and ensuring all unauthorized changes are reverted.
- Educate and train staff on the importance of monitoring and managing service accounts to prevent similar incidents in the future.

## Setup

The GCP Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = ["https://cloud.google.com/iam/docs/service-accounts"]
risk_score = 21
rule_id = "7ceb2216-47dd-4e64-9433-cddc99727623"
severity = "low"
tags = [
    "Domain: Cloud",
    "Data Source: GCP",
    "Data Source: Google Cloud Platform",
    "Use Case: Identity and Access Audit",
    "Tactic: Persistence",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:gcp.audit and event.action:google.iam.admin.v*.CreateServiceAccount and event.outcome:success
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1136"
name = "Create Account"
reference = "https://attack.mitre.org/techniques/T1136/"


[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

