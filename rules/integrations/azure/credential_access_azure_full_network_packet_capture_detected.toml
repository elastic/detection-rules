[metadata]
creation_date = "2021/08/12"
integration = ["azure"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Austin Songer"]
description = """
Identifies potential full network packet capture in Azure. Packet Capture is an Azure Network Watcher feature that can
be used to inspect network traffic. This feature can potentially be abused to read sensitive data from unencrypted
internal traffic.
"""
false_positives = [
    """
    Full Network Packet Capture may be done by a system or network administrator. Verify whether the user identity, user
    agent, and/or hostname should be making changes in your environment. Full Network Packet Capture from unfamiliar
    users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the
    rule.
    """,
]
from = "now-25m"
index = ["filebeat-*", "logs-azure*"]
language = "kuery"
license = "Elastic License v2"
name = "Azure Full Network Packet Capture Detected"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Azure Full Network Packet Capture Detected

Azure Network Watcher's packet capture feature allows for detailed inspection of network traffic, aiding in diagnostics and performance monitoring. However, if misused, it can capture sensitive data from unencrypted traffic, posing a security risk. Adversaries might exploit this to intercept credentials or other confidential information. The detection rule identifies suspicious packet capture activities by monitoring specific Azure operations and successful outcomes, alerting analysts to potential misuse.

### Possible investigation steps

- Review the alert details to understand the specific operation name and outcome, focusing on `azure.activitylogs.operation_name` and `event.outcome` fields to confirm the type of packet capture activity detected.
- Check the timestamp of the alert to determine when the packet capture was initiated and correlate it with any other suspicious activities in the same timeframe.
- Identify the user or service principal associated with the packet capture operation by examining the `azure.activitylogs.caller` field to determine if the activity aligns with expected behavior.
- Investigate the source IP address and location from which the packet capture was initiated using the `azure.activitylogs.callerIpAddress` field to identify any anomalies or unauthorized access.
- Analyze the resource group and network interface involved in the packet capture by reviewing the `azure.activitylogs.resource` field to understand the scope and potential impact of the capture.
- Cross-reference the packet capture activity with any recent changes in network configurations or deployments to identify if the capture was part of a legitimate change or deployment process.
- Utilize Osquery to gather additional context on the systems involved. For example, run an Osquery query to list recent network connections on the affected virtual machines: `SELECT * FROM process_open_sockets WHERE remote_address = '<suspicious IP>';`.
- Check for any other alerts or logs related to network sniffing or credential access attempts in the same environment to identify potential patterns or coordinated attacks.
- Review access logs and permissions for the Azure Network Watcher to ensure that only authorized personnel have the ability to initiate packet captures.
- Consult with the network and security teams to verify if the packet capture aligns with any ongoing troubleshooting or monitoring activities, ensuring that it was not a sanctioned operation.

### False positive analysis

- Routine network diagnostics: Regularly scheduled packet captures for legitimate network diagnostics or performance monitoring can trigger this detection. Users can manage these by creating exceptions for known diagnostic operations or specific time windows when these activities are expected.
- Security audits: Organizations conducting security audits may intentionally perform packet captures to assess network security. To handle these, users can whitelist specific audit-related operations or IP addresses involved in the audit process.
- Automated monitoring tools: Some automated tools may initiate packet captures as part of their monitoring processes. Users should identify these tools and exclude their activities from triggering alerts by specifying their operation names or associated user accounts.
- Testing environments: In testing or development environments, packet captures might be used frequently for troubleshooting. Users can exclude these environments by filtering based on resource groups or tags associated with non-production environments.

### Response and remediation

- Immediately isolate the affected Azure resources to prevent further data exposure or unauthorized access.
- Review Azure activity logs to identify the source and scope of the packet capture activity, focusing on the specific operations flagged by the detection rule.
- Verify the legitimacy of the packet capture request by contacting the resource owner or administrator to confirm if the activity was authorized.
- If unauthorized, revoke any compromised credentials and enforce a password reset for affected accounts.
- Escalate the incident to the security operations team for further investigation and to determine if any data was exfiltrated.
- Implement network segmentation to limit the exposure of sensitive data and reduce the risk of unauthorized packet capture.
- Enhance logging and monitoring by enabling Azure Security Center and integrating with a Security Information and Event Management (SIEM) system for real-time alerts and analysis.
- Conduct a thorough review of access controls and permissions to ensure that only authorized personnel can initiate packet captures.
- Restore affected systems to their operational state by applying any necessary patches or updates and verifying system integrity.
- Implement hardening measures such as encrypting internal traffic and using secure protocols to mitigate the risk of network sniffing in the future.

## Setup

The Azure Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = ["https://docs.microsoft.com/en-us/azure/role-based-access-control/resource-provider-operations"]
risk_score = 47
rule_id = "3ad77ed4-4dcf-4c51-8bfc-e3f7ce316b2f"
severity = "medium"
tags = ["Domain: Cloud", "Data Source: Azure", "Tactic: Credential Access"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:azure.activitylogs and azure.activitylogs.operation_name:
    (
        MICROSOFT.NETWORK/*/STARTPACKETCAPTURE/ACTION or
        MICROSOFT.NETWORK/*/VPNCONNECTIONS/STARTPACKETCAPTURE/ACTION or
        MICROSOFT.NETWORK/*/PACKETCAPTURES/WRITE
    ) and
event.outcome:(Success or success)
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1040"
name = "Network Sniffing"
reference = "https://attack.mitre.org/techniques/T1040/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

