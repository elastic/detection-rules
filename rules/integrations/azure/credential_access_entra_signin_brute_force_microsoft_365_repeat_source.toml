[metadata]
creation_date = "2024/09/06"
integration = ["azure"]
maturity = "production"
min_stack_comments = "ES|QL not available until 8.13.0 in technical preview."
min_stack_version = "8.13.0"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies potential brute-force attempts against Microsoft 365 user accounts by detecting a high number of failed
interactive or non-interactive login attempts within a 30-minute window from a single source. Attackers may attempt to brute force user
accounts to gain unauthorized access to Microsoft 365 services via different services such as Exchange, SharePoint, or
Teams.
"""
false_positives = [
    """
    Automated processes that attempt to authenticate using expired credentials or have misconfigured authentication
    settings may lead to false positives.
    """,
]
from = "now-30m"
language = "esql"
interval = "10m"
license = "Elastic License v2"
name = "Azure Entra Sign-in Brute Force Microsoft 365 Accounts by Repeat Source"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Azure Entra Sign-in Brute Force Microsoft 365 Accounts by Repeat Source

Azure Entra, part of Microsoft's identity and access management suite, secures access to Microsoft 365 services. Adversaries may exploit this by attempting numerous failed logins to guess user credentials, aiming to breach accounts. The detection rule identifies such brute-force attempts by flagging multiple failed logins from a single IP within a short timeframe, focusing on patterns indicative of unauthorized access attempts.

### Possible investigation steps

- Review the alert details to understand the source IP and the number of distinct failed login attempts, focusing on the `source.ip` and `target_count` fields.
- Cross-reference the `source.ip` with known threat intelligence feeds to determine if the IP is associated with any known malicious activity.
- Analyze the `azure.signinlogs.properties.user_principal_name` field to identify which user accounts were targeted and assess if these accounts have any commonalities or are high-value targets.
- Check the `azure.signinlogs.properties.resource_display_name` to determine which Microsoft 365 services were targeted, such as Exchange, SharePoint, or Teams, to understand the potential impact.
- Investigate the `azure.signinlogs.properties.status.error_code` to identify specific error codes associated with the failed login attempts, which may provide insights into the attack method.
- Use Osquery to gather additional context on the affected user accounts. For example, run a query to list recent login activities for the targeted user accounts: `SELECT * FROM azure_signin_logs WHERE user_principal_name IN ('user1@example.com', 'user2@example.com') AND outcome != 'success';`
- Examine historical login patterns for the affected user accounts to determine if the failed attempts are anomalous compared to typical behavior.
- Check for any successful logins from the same `source.ip` around the time of the failed attempts to assess if the attacker eventually gained access.
- Review any recent changes to the user accounts or permissions that might have been made prior to the alert, which could indicate preparatory actions by the attacker.
- Collaborate with the network team to analyze network traffic logs for the `source.ip` to identify any other suspicious activities or connections related to the brute-force attempts.

### False positive analysis

- Legitimate high-volume automated processes: Some organizations may have automated scripts or services that perform numerous login attempts in a short period, such as system health checks or batch processing tasks. These can trigger the rule as false positives.
- Shared IP addresses: Users accessing Microsoft 365 services from shared IP addresses, such as those in corporate networks or VPNs, may result in multiple failed login attempts from a single source, leading to false positives.
- Frequent password changes: Users who frequently change their passwords and subsequently enter incorrect credentials multiple times may inadvertently trigger the rule.
- Testing and development environments: In environments where developers or IT staff are testing authentication processes, multiple failed logins may occur, which can be mistaken for brute-force attempts.
- To manage these false positives, users can create exceptions for known IP addresses associated with legitimate automated processes or shared networks. Additionally, monitoring and adjusting the threshold for failed login attempts based on organizational behavior can help reduce false positives.

### Response and remediation

- Immediately block the source IP address identified in the alert to prevent further unauthorized access attempts.
- Investigate the affected user accounts for any signs of compromise or unauthorized access, and reset passwords as a precautionary measure.
- Review the sign-in logs for additional suspicious activity from the same IP or related IP addresses to identify potential patterns or coordinated attacks.
- Escalate the incident to the security operations team if there is evidence of a broader attack or if multiple accounts are targeted.
- Implement multi-factor authentication (MFA) for all user accounts to add an additional layer of security against brute-force attacks.
- Enhance logging policies to ensure comprehensive capture of authentication events, including both successful and failed login attempts, for better future analysis.
- Integrate Azure Entra logs with a Security Information and Event Management (SIEM) system to enable real-time monitoring and automated alerting for similar threats.
- Conduct a security awareness training session for users to educate them on recognizing phishing attempts and the importance of strong, unique passwords.
- Review and update firewall and intrusion detection/prevention system (IDS/IPS) rules to detect and block similar brute-force attempts in the future.
- Apply security patches and updates to all systems and applications to mitigate vulnerabilities that could be exploited in conjunction with brute-force attacks.

This rule relies on Azure Entra ID sign-in logs, but filters for Microsoft 365 resources."""
references = [
    "https://cloud.hacktricks.xyz/pentesting-cloud/azure-security/az-unauthenticated-enum-and-initial-entry/az-password-spraying",
    "https://github.com/0xZDH/o365spray"
]
risk_score = 47
rule_id = "c6655282-6c79-11ef-bbb5-f661ea17fbcc"
severity = "medium"
tags = [
    "Domain: Cloud",
    "Domain: SaaS",
    "Data Source: Azure",
    "Data Source: Entra ID",
    "Data Source: Entra ID Sign-in",
    "Use Case: Identity and Access Audit",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
]
timestamp_override = "event.ingested"
type = "esql"

query = '''
from logs-azure.signinlogs*
| WHERE
  event.dataset == "azure.signinlogs"
  and event.category == "authentication"
  and to_lower(azure.signinlogs.properties.resource_display_name) rlike "(.*)365(.*)"
  and azure.signinlogs.category in ("NonInteractiveUserSignInLogs", "SignInLogs")
  and event.outcome != "success"

  // For tuning, review azure.signinlogs.properties.status.error_code
  // https://learn.microsoft.com/en-us/entra/identity-platform/reference-error-codes

// keep only relevant fields
| keep event.dataset, event.category, azure.signinlogs.properties.resource_display_name, azure.signinlogs.category, event.outcome, azure.signinlogs.properties.user_principal_name, source.ip

// Count the number of unique targets per source IP
| stats
  target_count = count_distinct(azure.signinlogs.properties.user_principal_name) by source.ip

// Filter for at least 10 distinct failed login attempts from a single source
| where target_count >= 10
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1110"
name = "Brute Force"
reference = "https://attack.mitre.org/techniques/T1110/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

