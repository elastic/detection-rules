[metadata]
creation_date = "2020/08/31"
integration = ["azure"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies modifications to a Key Vault in Azure. The Key Vault is a service that safeguards encryption keys and secrets
like certificates, connection strings, and passwords. Because this data is sensitive and business critical, access to
key vaults should be secured to allow only authorized applications and users.
"""
false_positives = [
    """
    Key vault modifications may be done by a system or network administrator. Verify whether the username, hostname,
    and/or resource name should be making changes in your environment. Key vault modifications from unfamiliar users or
    hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule.
    """,
]
from = "now-25m"
index = ["filebeat-*", "logs-azure*"]
language = "kuery"
license = "Elastic License v2"
name = "Azure Key Vault Modified"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Azure Key Vault Modified

Azure Key Vault is a critical service for managing sensitive information like encryption keys and secrets. It ensures that only authorized users and applications can access this data. However, adversaries may attempt to modify Key Vault settings to gain unauthorized access to credentials. The detection rule monitors for successful write operations to Key Vaults, signaling potential unauthorized modifications that could lead to credential exposure.

### Possible investigation steps

- Review the alert details to confirm the presence of the event.dataset:azure.activitylogs and ensure the operation_name is "MICROSOFT.KEYVAULT/VAULTS/WRITE" with a successful outcome.
- Identify the user or application that performed the write operation by examining the user or service principal details in the activity logs.
- Check the timestamp of the modification to determine when the change occurred and correlate it with any other suspicious activities around the same time.
- Investigate the IP address and location from which the write operation was performed to identify any anomalies or unauthorized access patterns.
- Review the change history of the specific Key Vault to understand what modifications were made and assess if they align with expected changes.
- Analyze the access policies of the Key Vault to verify if any unauthorized users or applications have been granted access.
- Use Osquery to gather additional context on the system from which the modification was made. Example query: `SELECT * FROM azure_key_vault WHERE operation_name = 'MICROSOFT.KEYVAULT/VAULTS/WRITE' AND outcome = 'Success';`
- Cross-reference the activity with any recent changes in user permissions or roles that might explain the modification.
- Check for any related alerts or incidents in the security monitoring system that might indicate a broader attack or compromise.
- Consult with the relevant teams or stakeholders to verify if the modification was part of a legitimate change request or deployment.

### False positive analysis

- Routine administrative tasks: Regular maintenance or updates by authorized personnel can trigger the detection rule. To manage this, users can create exceptions for known administrative accounts or specific time windows when maintenance is scheduled.
- Automated deployment processes: Continuous integration and deployment pipelines may modify Key Vault settings as part of their normal operation. Users should identify and exclude these automated processes by whitelisting specific service accounts or IP addresses.
- Third-party integrations: Some third-party applications may require write access to Key Vaults for legitimate reasons. Users should verify these integrations and exclude them from the detection rule by adding them to an allowlist.
- Policy updates: Changes in organizational security policies might necessitate updates to Key Vault configurations. Users can handle these by documenting policy changes and temporarily excluding related activities during the transition period.

### Response and remediation

- Immediately isolate the affected Key Vault to prevent further unauthorized access by restricting network access and disabling any suspicious accounts or applications.
- Review Azure Activity Logs to identify unauthorized changes and determine the scope of the compromise, focusing on the specific write operations detected.
- Revoke any potentially compromised credentials and secrets stored in the Key Vault and rotate them to new, secure values.
- Conduct a thorough investigation to identify the source of the unauthorized access, leveraging threat intelligence and MITRE ATT&CK framework to understand potential adversary techniques.
- Escalate the incident to the security operations team and, if necessary, involve legal and compliance teams to assess potential impacts and regulatory obligations.
- Implement enhanced logging and monitoring policies for Azure Key Vault, ensuring that all access and modification attempts are logged and reviewed regularly.
- Integrate Azure Key Vault with a Security Information and Event Management (SIEM) system to enable real-time alerting and correlation with other security events.
- Restore the Key Vault to its operational state by verifying the integrity of its contents and ensuring that only authorized users and applications have access.
- Conduct a post-incident review to identify gaps in security controls and update policies and procedures to prevent future incidents.
- Implement hardening measures such as enabling Azure Key Vault firewall, using private endpoints, and enforcing strict access controls and multi-factor authentication for all users and applications accessing the Key Vault.

## Setup

The Azure Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = [
    "https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts",
    "https://docs.microsoft.com/en-us/azure/key-vault/general/secure-your-key-vault",
    "https://www.elastic.co/security-labs/detect-credential-access",
]
risk_score = 47
rule_id = "792dd7a6-7e00-4a0a-8a9a-a7c24720b5ec"
severity = "medium"
tags = ["Domain: Cloud", "Data Source: Azure", "Tactic: Credential Access"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:azure.activitylogs and azure.activitylogs.operation_name:"MICROSOFT.KEYVAULT/VAULTS/WRITE" and event.outcome:(Success or success)
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.001"
name = "Credentials In Files"
reference = "https://attack.mitre.org/techniques/T1552/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

