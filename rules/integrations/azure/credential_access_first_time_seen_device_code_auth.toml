[metadata]
creation_date = "2024/10/14"
integration = ["azure"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic", "Matteo Potito Giorgio"]
description = """
Identifies when a user is observed for the first time in the last 14 days authenticating using the deviceCode protocol. The device code authentication flow can be abused by attackers to phish users and steal access tokens to impersonate the victim. By its very nature, device code should only be used when logging in to devices without keyboards, where it is difficult to enter emails and passwords.
"""
from = "now-9m"
index = ["filebeat-*", "logs-azure.signinlogs-*", "logs-azure.activitylogs-*"]
language = "kuery"
license = "Elastic License v2"
name = "First Occurrence of Entra ID Auth via DeviceCode Protocol"
references =[
    "https://aadinternals.com/post/phishing/", 
    "https://www.blackhillsinfosec.com/dynamic-device-code-phishing/"
]
risk_score = 47
rule_id = "af22d970-7106-45b4-b5e3-460d15333727"
setup = """
This rule optionally requires Azure Sign-In logs from the Azure integration. Ensure that the Azure integration is correctly set up and that the required data is being collected.
"""
severity = "medium"
tags = [
    "Domain: Cloud",
    "Data Source: Azure",
    "Data Source: Microsoft Entra ID",
    "Use Case: Identity and Access Audit",
    "Tactic: Credential Access",
]
timestamp_override = "event.ingested"
type = "new_terms"

query = '''
 event.dataset:(azure.activitylogs or azure.signinlogs) and 
     (azure.signinlogs.properties.authentication_protocol:deviceCode or azure.activitylogs.properties.authentication_protocol:deviceCode) and event.outcome:success
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating First Occurrence of Entra ID Auth via DeviceCode Protocol

The device code authentication flow is designed for devices lacking keyboards, facilitating user login without direct input of credentials. However, attackers can exploit this by phishing users to capture access tokens, enabling unauthorized access. The detection rule identifies new instances of this protocol use, flagging potential misuse by monitoring successful authentications within a specified timeframe.

### Possible investigation steps

- Review the alert details to identify the specific user account involved in the first occurrence of the deviceCode protocol authentication.
- Verify the timestamp of the authentication event to understand when the activity took place and correlate it with any known user activities or scheduled tasks.
- Examine the `event.dataset` field to determine whether the event originated from `azure.activitylogs` or `azure.signinlogs`, providing context on the type of log and its source.
- Analyze the `event.outcome` field to confirm the success of the authentication attempt, ensuring that the alert is based on a successful login.
- Investigate the `azure.signinlogs.properties.authentication_protocol` or `azure.activitylogs.properties.authentication_protocol` fields to confirm the use of the deviceCode protocol.
- Check the IP address and location associated with the authentication event to identify any anomalies or unexpected geolocations.
- Use Osquery to gather additional context on the device involved in the authentication. For example, run the following query to list recent network connections: `SELECT * FROM process_open_sockets WHERE remote_address = '<IP_ADDRESS_FROM_ALERT>';`
- Review the user's recent activity logs to identify any unusual patterns or deviations from their typical behavior, such as logins from new devices or locations.
- Cross-reference the user's activity with any recent phishing campaigns or security incidents that might have targeted the organization.
- Consult with the user to verify whether they initiated the authentication and to gather any additional context or insights into the event.

### False positive analysis

- Legitimate use of the device code protocol by users accessing applications on devices without keyboards, such as smart TVs or IoT devices, can trigger false positives. These instances should be reviewed to confirm the legitimacy of the device and user.
- Automated scripts or applications that use the device code protocol for authentication as part of their normal operation may also be flagged. Identifying these scripts and adding them to an exception list can prevent unnecessary alerts.
- Users who frequently travel or work remotely might use the device code protocol on new devices, leading to repeated alerts. Monitoring user behavior and establishing a baseline for normal activity can help differentiate between legitimate and suspicious use.
- Organizations can create exceptions for known and trusted devices or applications that regularly use the device code protocol, reducing the likelihood of false positives while maintaining security oversight.

### Response and remediation

- Immediately isolate the affected user account to prevent further unauthorized access and token misuse.
- Conduct a thorough investigation to determine the source of the device code request and verify if it aligns with legitimate user activity.
- Revoke any access tokens associated with the compromised account to prevent further unauthorized access.
- Notify the user and relevant stakeholders about the potential compromise and advise them to change their passwords and review their account activity.
- Escalate the incident to the security operations team for further analysis and to determine if additional accounts or systems are affected.
- Implement enhanced logging and monitoring for device code authentication attempts to detect and respond to future misuse promptly.
- Integrate threat intelligence feeds to correlate device code authentication attempts with known malicious IP addresses or threat actors.
- Review and update security policies to restrict the use of device code authentication to only necessary scenarios and enforce multi-factor authentication.
- Restore the affected system to its operational state by ensuring all compromised tokens are revoked and user credentials are reset.
- Conduct a post-incident review to identify gaps in the current security posture and implement hardening measures, such as user training on phishing awareness and regular security audits."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1528"
name = "Steal Application Access Token"
reference = "https://attack.mitre.org/techniques/T1528/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"


[rule.new_terms]
field = "new_terms_fields"
value = ["azure.signinlogs.properties.user_principal_name"]
[[rule.new_terms.history_window_start]]
field = "history_window_start"
value = "now-14d"
