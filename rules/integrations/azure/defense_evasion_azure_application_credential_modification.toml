[metadata]
creation_date = "2020/12/14"
integration = ["azure"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies when a new credential is added to an application in Azure. An application may use a certificate or secret
string to prove its identity when requesting a token. Multiple certificates and secrets can be added for an application
and an adversary may abuse this by creating an additional authentication method to evade defenses or persist in an
environment.
"""
false_positives = [
    """
    Application credential additions may be done by a system or network administrator. Verify whether the username,
    hostname, and/or resource name should be making changes in your environment. Application credential additions from
    unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted
    from the rule.
    """,
]
from = "now-25m"
index = ["filebeat-*", "logs-azure*"]
language = "kuery"
license = "Elastic License v2"
name = "Azure Application Credential Modification"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Azure Application Credential Modification

Azure applications use credentials like certificates or secret strings for identity verification during token requests. Adversaries may exploit this by adding unauthorized credentials, enabling persistent access or evading defenses. The detection rule monitors audit logs for successful modifications in application credentials, signaling potential misuse by identifying unauthorized credential additions.

### Possible investigation steps

- Review the Azure audit logs to confirm the alert by checking for entries with `event.dataset:azure.auditlogs` and `azure.auditlogs.operation_name:"Update application - Certificates and secrets management"` with a successful outcome.
- Identify the application involved in the credential modification by examining the specific application ID or name in the audit log entry.
- Determine the user or service principal that performed the modification by reviewing the `initiatedBy` field in the audit log.
- Check the timestamp of the modification to understand when the change occurred and correlate it with any other suspicious activities around the same time.
- Investigate the new credential added by identifying its type (certificate or secret) and any associated metadata, such as expiration date or permissions.
- Review the application's activity logs for any unusual or unauthorized access patterns following the credential modification.
- Cross-reference the user or service principal involved with other logs or alerts to identify any patterns of suspicious behavior or previous incidents.
- Use Osquery to gather additional context on the system where the modification was initiated. For example, run a query to list recent Azure CLI commands executed: `SELECT * FROM shell_history WHERE command LIKE '%az ad app credential%'`.
- Verify if the new credential has been used by checking for any token requests or authentications involving the application post-modification.
- Consult with the application owner or relevant stakeholders to confirm if the credential modification was authorized and aligns with expected changes or maintenance activities.

### False positive analysis

- Routine administrative tasks: Regular updates or maintenance by IT staff may involve adding new credentials to applications, which can trigger the detection rule. To manage this, create exceptions for known administrative accounts or scheduled maintenance windows.
- Automated processes: Some applications may automatically rotate their credentials as part of a security policy. Identify these applications and exclude their credential updates from triggering alerts by using specific application IDs or tags.
- Third-party integrations: Integrations with external services might require adding new credentials. Document and whitelist these integrations to prevent false positives.
- Development and testing environments: Frequent changes in non-production environments can lead to numerous alerts. Consider excluding these environments from the rule or applying a different threshold for alerts.
- Organizational changes: Mergers, acquisitions, or restructuring may necessitate credential updates. During such periods, increase monitoring of changes but adjust the rule to reduce noise by temporarily excluding certain user groups or departments.

### Response and remediation

- Immediately revoke any unauthorized credentials added to the Azure application to prevent further unauthorized access.
- Conduct a thorough investigation to identify how the unauthorized credential was added, including reviewing audit logs and identifying any compromised accounts or systems.
- Reset passwords and rotate keys for any accounts or applications that may have been compromised to ensure no further unauthorized access.
- Escalate the incident to the security operations team and, if necessary, involve legal or compliance teams to assess potential impacts and obligations.
- Implement additional monitoring and alerting for changes to application credentials to detect similar activities in the future.
- Review and update access controls and permissions for Azure applications to ensure the principle of least privilege is enforced.
- Enhance logging policies to ensure comprehensive coverage of credential modifications and other critical security events.
- Integrate Azure security logs with a Security Information and Event Management (SIEM) system for centralized monitoring and analysis.
- Conduct a post-incident review to identify gaps in security controls and processes, and implement improvements to prevent recurrence.
- Apply hardening measures such as enabling multi-factor authentication (MFA) for administrative access and using managed identities for Azure resources to reduce reliance on static credentials.

## Setup

The Azure Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule."""
references = [
    "https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/",
]
risk_score = 47
rule_id = "1a36cace-11a7-43a8-9a10-b497c5a02cd3"
severity = "medium"
tags = [
    "Domain: Cloud",
    "Data Source: Azure",
    "Use Case: Identity and Access Audit",
    "Tactic: Defense Evasion",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.dataset:azure.auditlogs and azure.auditlogs.operation_name:"Update application - Certificates and secrets management" and event.outcome:(success or Success)
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1550"
name = "Use Alternate Authentication Material"
reference = "https://attack.mitre.org/techniques/T1550/"
[[rule.threat.technique.subtechnique]]
id = "T1550.001"
name = "Application Access Token"
reference = "https://attack.mitre.org/techniques/T1550/001/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

