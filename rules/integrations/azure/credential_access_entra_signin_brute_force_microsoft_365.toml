[metadata]
creation_date = "2024/09/06"
integration = ["azure"]
maturity = "production"
min_stack_comments = "ES|QL not available until 8.13.0 in technical preview."
min_stack_version = "8.13.0"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies potential brute-force attempts against Microsoft 365 user accounts by detecting a high number of failed
interactive or non-interactive login attempts within a 30-minute window. Attackers may attempt to brute force user
accounts to gain unauthorized access to Microsoft 365 services via different services such as Exchange, SharePoint, or
Teams.
"""
false_positives = [
    """
    Automated processes that attempt to authenticate using expired credentials or have misconfigured authentication
    settings may lead to false positives.
    """,
]
from = "now-60m"
language = "esql"
interval = "10m"
license = "Elastic License v2"
name = "Azure Entra Sign-in Brute Force against Microsoft 365 Accounts"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Azure Entra Sign-in Brute Force against Microsoft 365 Accounts

Azure Entra, part of Microsoft's identity and access management suite, secures Microsoft 365 accounts by managing sign-ins and authentication. Adversaries may exploit this by attempting numerous failed logins to guess passwords, aiming to gain unauthorized access to services like Exchange or Teams. The detection rule identifies such brute-force attempts by analyzing sign-in logs for high volumes of failed logins or diverse login sources within a short timeframe, flagging potential threats for further investigation.

### Possible investigation steps

- Review the `target_time_window` to determine the specific 30-minute period during which the brute-force attempts occurred, providing a focused timeframe for further analysis.
- Examine the `azure.signinlogs.properties.user_principal_name` to identify the specific user accounts targeted by the brute-force attempts, allowing for a user-centric investigation.
- Analyze the `source.ip` field to identify the IP addresses involved in the failed login attempts, which can help in determining if the attempts are coming from known malicious sources or unusual locations.
- Check the `azure.signinlogs.properties.resource_display_name` to understand which Microsoft 365 services (e.g., Exchange, SharePoint, Teams) were targeted, providing insight into the attacker's potential objectives.
- Investigate the `event.outcome` to confirm the nature of the failed attempts and cross-reference with known error codes from the Azure documentation to understand the specific reasons for failure.
- Utilize Osquery to gather additional context on the affected systems. For example, run a query to list recent login attempts on the endpoint: `SELECT * FROM users WHERE username = '<target_user>' AND last_login > '<target_time_window_start>' AND last_login < '<target_time_window_end>';`
- Correlate the `login_source_count` and `failed_login_count` with historical data to determine if this is an isolated incident or part of a larger pattern of attacks against the organization.
- Investigate any unusual patterns or anomalies in the `event.dataset` and `event.category` fields to identify if the attack is leveraging specific authentication methods or protocols.
- Cross-reference the identified `source.ip` addresses with threat intelligence feeds to check for any known associations with malicious activity.
- Review any additional logs or alerts from other security tools that may provide context or corroborate the findings from the Azure Entra sign-in logs, such as firewall logs or endpoint detection and response (EDR) alerts.

### False positive analysis

- High-volume legitimate access: Users with roles that require frequent access to multiple Microsoft 365 services, such as IT administrators or support staff, may trigger false positives due to their high number of login attempts. To manage this, create exceptions for known user accounts or IP addresses associated with these roles.
- Automated scripts or applications: Some organizations use automated scripts or applications that perform regular sign-ins to Microsoft 365 services for maintenance or data retrieval. These can be mistaken for brute-force attempts. Identify and whitelist these scripts or applications by their user agent or IP address.
- Shared IP addresses: Users accessing Microsoft 365 services from shared networks, such as corporate VPNs or educational institutions, may appear to have multiple login sources. To handle this, exclude known shared IP ranges from the rule.
- Frequent password changes: Organizations with policies that enforce regular password changes may see an increase in failed login attempts as users adjust to new credentials. Consider extending the monitoring window or adjusting the threshold for failed attempts during these periods.
- Third-party integrations: Integrations with third-party services that require frequent authentication to Microsoft 365 can generate numerous failed attempts if not configured correctly. Review and adjust the settings of these integrations to ensure they are not flagged as threats.

### Response and remediation

- Immediately isolate the affected user accounts by disabling them to prevent further unauthorized access.
- Conduct a thorough investigation of the sign-in logs to identify the source IP addresses and determine if they are associated with known malicious activity.
- Reset passwords for the compromised accounts and enforce multi-factor authentication (MFA) to enhance security.
- Notify the affected users and relevant stakeholders about the incident and provide guidance on recognizing phishing attempts and securing their accounts.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if other accounts or systems are affected.
- Implement conditional access policies to restrict access based on location, device compliance, and risk level to prevent future brute-force attempts.
- Review and update logging policies to ensure comprehensive capture of authentication events and integrate with a security information and event management (SIEM) system for real-time monitoring.
- Conduct a post-incident review to identify gaps in the current security posture and update incident response plans accordingly.
- Apply security patches and updates to all systems and applications to mitigate vulnerabilities that could be exploited in similar attacks.
- Educate users on best practices for password management and the importance of using unique, strong passwords for different accounts.

This rule relies on Azure Entra ID sign-in logs, but filters for Microsoft 365 resources."""
references = [
    "https://cloud.hacktricks.xyz/pentesting-cloud/azure-security/az-unauthenticated-enum-and-initial-entry/az-password-spraying",
    "https://github.com/0xZDH/o365spray"
]
risk_score = 47
rule_id = "35ab3cfa-6c67-11ef-ab4d-f661ea17fbcc"
severity = "medium"
tags = [
    "Domain: Cloud",
    "Domain: SaaS",
    "Data Source: Azure",
    "Data Source: Entra ID",
    "Data Source: Entra ID Sign-in",
    "Use Case: Identity and Access Audit",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
]
timestamp_override = "event.ingested"
type = "esql"

query = '''
from logs-azure.signinlogs*
// truncate the timestamp to a 30-minute window
| eval target_time_window = DATE_TRUNC(30 minutes, @timestamp)
| WHERE
  event.dataset == "azure.signinlogs"
  and event.category == "authentication"
  and to_lower(azure.signinlogs.properties.resource_display_name) rlike "(.*)365(.*)"
  and azure.signinlogs.category in ("NonInteractiveUserSignInLogs", "SignInLogs")
  and event.outcome != "success"
  // for tuning review azure.signinlogs.properties.status.error_code
  // https://learn.microsoft.com/en-us/entra/identity-platform/reference-error-codes

// keep only relevant fields
| keep target_time_window, event.dataset, event.category, azure.signinlogs.properties.resource_display_name, azure.signinlogs.category, event.outcome, azure.signinlogs.properties.user_principal_name, source.ip

// count the number of login sources and failed login attempts
| stats
  login_source_count = count(source.ip),
  failed_login_count = count(*) by target_time_window, azure.signinlogs.properties.user_principal_name

// filter for users with more than 20 login sources or failed login attempts
| where (login_source_count >= 20 or failed_login_count >= 20)
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1110"
name = "Brute Force"
reference = "https://attack.mitre.org/techniques/T1110/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

