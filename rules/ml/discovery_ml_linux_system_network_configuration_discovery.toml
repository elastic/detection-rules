[metadata]
creation_date = "2020/09/03"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 25
author = ["Elastic"]
description = """
Looks for commands related to system network configuration discovery from an unusual user context. This can be due to
uncommon troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor
to engage in system network configuration discovery in order to increase their understanding of connected networks and
hosts. This information may be used to shape follow-up behaviors such as lateral movement or additional discovery.
"""
false_positives = [
    """
    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual
    troubleshooting or reconfiguration.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_network_configuration_discovery"]
name = "Unusual Linux Network Configuration Discovery"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "f9590f47-6bd5-4a49-bd49-a2f886476fb9"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Discovery",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux Network Configuration Discovery

Linux systems often use commands like `ifconfig`, `ip`, and `netstat` for network configuration discovery, essential for troubleshooting and network management. Adversaries exploit these commands to map network structures, aiding in lateral movement or further reconnaissance. The detection rule identifies atypical usage patterns by monitoring command execution from unexpected user accounts, signaling potential account compromise or malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific command executed, the user account involved, and the timestamp of the activity.
- Check the user account's login history and recent activity to determine if the account has been used in an unusual manner or from unexpected locations.
- Analyze the command execution context, including the terminal or process that initiated the command, to identify any anomalies or suspicious patterns.
- Investigate the source IP address and hostname associated with the command execution to verify if they are known and trusted within the network.
- Use Osquery to gather additional context about the system and user activity. For example, run the following query to list recent network-related commands executed by the user: `SELECT * FROM shell_history WHERE command LIKE '%ifconfig%' OR command LIKE '%ip%' OR command LIKE '%netstat%' AND uid = <user_id>;`
- Examine system logs, such as `/var/log/auth.log` or `/var/log/secure`, for any signs of unauthorized access or privilege escalation attempts around the time of the alert.
- Cross-reference the alert with other security events or alerts to identify any correlated activities that might indicate a broader attack campaign.
- Review the system's network configuration and recent changes to identify any unauthorized modifications or suspicious network connections.
- Check for any recent file modifications or new files in the user's home directory or other sensitive directories that might indicate malicious activity.
- Consult threat intelligence sources to determine if the observed behavior matches any known tactics, techniques, or procedures (TTPs) associated with specific threat actors or campaigns.

### False positive analysis

- System administrators or network engineers performing routine network diagnostics may trigger the rule if they use unexpected accounts or workstations. To manage this, create exceptions for known user accounts or IP addresses that regularly perform these tasks.
- Automated scripts or monitoring tools that execute network configuration commands for legitimate purposes might be flagged. Users can whitelist these scripts or processes by identifying their signatures or execution patterns.
- Temporary or new user accounts created for specific projects or troubleshooting can cause alerts. Ensure these accounts are documented and added to an exception list if their activities are verified as non-threatening.
- Changes in user roles or responsibilities might lead to legitimate network configuration commands being run by users who previously did not perform such tasks. Regularly update the exception list to reflect these role changes.
- In environments with frequent network changes or testing, legitimate users might execute network discovery commands more often. Implement a review process to periodically assess and update the list of exceptions based on current network activity patterns.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Verify the legitimacy of the user account that executed the unusual network configuration commands and reset its credentials if compromised.
- Conduct a thorough investigation of the system logs to identify any additional suspicious activities or unauthorized access attempts.
- Review and analyze the command history to understand the scope of the adversary's reconnaissance and any potential data exfiltration.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging policies to capture detailed command execution and user activity for future investigations.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate and detect similar threats.
- Restore the system to its operational state by applying the latest security patches and updates, and ensure all security configurations are intact.
- Conduct a security audit of the network to identify and remediate any vulnerabilities that could be exploited for similar attacks.
- Implement hardening measures such as least privilege access, multi-factor authentication, and regular user activity reviews to prevent future incidents."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1016"
name = "System Network Configuration Discovery"
reference = "https://attack.mitre.org/techniques/T1016/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

