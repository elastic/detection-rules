[metadata]
creation_date = "2020/09/22"
integration = ["endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order
to harvest credentials or user data scripts containing secrets.
"""
false_positives = [
    """
    A newly installed program or one that runs very rarely as part of a monthly or quarterly workflow could trigger this
    detection rule.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_windows_rare_metadata_process"]
name = "Unusual Windows Process Calling the Metadata Service"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Windows

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Windows Integration Setup
The Windows integration allows you to monitor the Windows OS, services, applications, and more.

#### The following steps should be executed in order to add the Elastic Agent System integration "windows" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Windows” and select the integration to see more details about it.
- Click “Add Windows”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “windows” to an existing or a new agent policy, and deploy the agent on your system from which windows log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/windows).
"""
risk_score = 21
rule_id = "abae61a8-c560-4dbd-acca-1e1438bff36b"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Credential Access",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Windows Process Calling the Metadata Service

In cloud environments, the metadata service provides essential instance information, including credentials and configuration data. Adversaries exploit this by using atypical Windows processes to access the service, aiming to extract sensitive data. The detection rule identifies anomalies by monitoring unexpected process interactions with the metadata service, aligning with MITRE ATT&CK's focus on credential access and unsecured credentials.

### Possible investigation steps

- Review the alert details to identify the specific Windows process that accessed the metadata service, noting the process name, process ID, and the user account under which it was running.
- Check the timestamp of the alert to determine when the unusual access occurred and correlate it with any other suspicious activities in the logs around the same time.
- Investigate the parent process of the identified Windows process to understand how it was initiated and whether it was spawned by a legitimate application or script.
- Use Osquery to gather more information about the process. For example, run the following query to get details about the process and its parent: `SELECT pid, name, path, parent, cmdline FROM processes WHERE pid = <process_id>;`
- Examine the network connections established by the process using Osquery: `SELECT pid, local_address, local_port, remote_address, remote_port FROM process_open_sockets WHERE pid = <process_id>;` to identify any unusual or unauthorized connections.
- Analyze the command line arguments used by the process to determine if there are any indications of malicious intent or attempts to access sensitive data.
- Check the Windows Event Logs for any related security events, such as logon events or privilege escalation attempts, that might provide additional context about the process's activity.
- Investigate the user account associated with the process to determine if it has been compromised or if there are any signs of unauthorized access or privilege escalation.
- Review any recent changes or updates to the system or applications that might have introduced the unusual process behavior, including software installations or script deployments.
- Consult threat intelligence sources to see if the process or its behavior matches any known indicators of compromise or attack patterns related to credential access or metadata service exploitation.

### False positive analysis

- Known false positives may include legitimate administrative tools or scripts that access the metadata service for configuration management or system monitoring purposes. These tools might be scheduled to run at regular intervals, leading to repeated alerts.
- Automated backup or deployment processes that interact with the metadata service to retrieve instance-specific information can also trigger false positives. These processes are typically part of routine operations and not indicative of malicious activity.
- Users can manage these false positives by creating exceptions for known and trusted processes that regularly access the metadata service. This can be done by whitelisting specific process names or paths that are verified to be part of legitimate operations.
- It is important to regularly review and update the list of exceptions to ensure that only non-threatening behaviors are excluded, maintaining the effectiveness of the detection rule against genuine threats.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the unusual process and determine how it accessed the metadata service, focusing on process execution logs and network traffic.
- Terminate the suspicious process and any associated processes to stop ongoing malicious activity.
- Review and revoke any credentials or tokens that may have been exposed or compromised during the incident.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the attack is part of a larger campaign.
- Implement enhanced logging and monitoring for metadata service access, ensuring that all access attempts are logged and reviewed for anomalies.
- Integrate threat intelligence feeds to correlate the incident with known threat actors or tactics, techniques, and procedures (TTPs) from the MITRE ATT&CK framework.
- Restore the system to its operational state by applying patches, updating security configurations, and ensuring all security controls are functioning correctly.
- Conduct a post-incident review to identify gaps in security controls and processes, and implement hardening measures such as restricting metadata service access to only trusted processes.
- Provide training and awareness to relevant personnel on the risks associated with metadata service access and the importance of securing credentials."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.005"
name = "Cloud Instance Metadata API"
reference = "https://attack.mitre.org/techniques/T1552/005/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

