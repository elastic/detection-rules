[metadata]
creation_date = "2020/09/03"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
Looks for commands related to system user or owner discovery from an unusual user context. This can be due to uncommon
troubleshooting activity or due to a compromised account. A compromised account may be used to engage in system owner or
user discovery in order to identify currently active or primary users of a system. This may be a precursor to additional
discovery, credential dumping or privilege elevation activity.
"""
false_positives = [
    """
    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual
    troubleshooting or reconfiguration.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_system_user_discovery"]
name = "Unusual Linux User Discovery Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "59756272-1998-4b8c-be14-e287035c4d10"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Discovery",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux User Discovery Activity

In Linux environments, user discovery commands help administrators identify active users and system owners, crucial for system management. However, adversaries exploit these commands to gather intelligence on user accounts, potentially leading to further attacks like credential theft or privilege escalation. The detection rule identifies atypical execution of these commands by unexpected users, signaling possible account compromise or malicious reconnaissance.

### Possible investigation steps

- Review the alert details to identify the specific user account and the command executed that triggered the alert.
- Check the timestamp of the alert to determine when the unusual activity occurred and correlate it with any other suspicious activities around the same time.
- Investigate the source IP address and hostname from which the command was executed to verify if it aligns with the user's typical access patterns.
- Examine the user's login history and session details to identify any anomalies or unauthorized access attempts.
- Use Osquery to gather additional context on the system by running a query such as: `SELECT * FROM logged_in_users WHERE user = '<suspicious_user>';` to check for any active sessions of the suspicious user.
- Analyze the command history of the user account to identify any other potentially malicious or unusual commands executed around the time of the alert.
- Review system logs, such as `/var/log/auth.log` or `/var/log/secure`, for any failed login attempts or other suspicious authentication events related to the user.
- Check for any recent changes to user account permissions or group memberships that could indicate privilege escalation attempts.
- Investigate any recent file modifications or access patterns that could suggest data exfiltration or preparation for further attacks.
- Correlate the findings with other security alerts or incidents to determine if this activity is part of a larger attack campaign.

### False positive analysis

- System administrators or support staff may execute user discovery commands during routine maintenance or troubleshooting, which can trigger false positives. To manage this, create exceptions for known administrator accounts or specific maintenance windows.
- Automated scripts or monitoring tools that perform regular checks on user accounts might be flagged as unusual activity. Exclude these scripts or tools by identifying their execution patterns and adding them to an allowlist.
- Developers or engineers with legitimate reasons to access user information for debugging purposes may also cause alerts. Document these use cases and establish exceptions for specific user roles or groups.
- Temporary contractors or new employees performing legitimate user discovery as part of their onboarding process might be mistakenly flagged. Implement a review process to quickly assess and approve such activities when they occur.
- In environments with frequent user account changes, such as educational institutions or large enterprises, regular user discovery might be necessary. Adjust the detection thresholds or create dynamic exceptions based on the frequency of these changes.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Conduct a thorough investigation to determine the scope of the compromise, focusing on identifying the commands executed and the user accounts involved.
- Review system logs and user activity to identify any unauthorized access or suspicious behavior, leveraging enhanced logging policies if available.
- Reset passwords for all potentially compromised accounts and enforce multi-factor authentication to prevent unauthorized access.
- Remove any unauthorized users or accounts created by the adversary and ensure all legitimate accounts have appropriate permissions.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Restore the system to its operational state by applying the latest security patches and updates, and verify the integrity of critical system files.
- Implement additional security measures such as intrusion detection systems (IDS) and endpoint detection and response (EDR) solutions to enhance monitoring and detection capabilities.
- Conduct a post-incident review to identify gaps in security controls and update security policies and procedures accordingly.
- Educate users on security best practices and the importance of reporting suspicious activity to prevent future incidents."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1033"
name = "System Owner/User Discovery"
reference = "https://attack.mitre.org/techniques/T1033/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

