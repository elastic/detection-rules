[metadata]
creation_date = "2020/09/22"
integration = ["endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be
targeted in order to harvest credentials or user data scripts containing secrets.
"""
false_positives = [
    """
    A newly installed program, or one that runs under a new or rarely used user context, could trigger this detection
    rule. Manual interrogation of the metadata service during debugging or troubleshooting could trigger this rule.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_windows_rare_metadata_user"]
name = "Unusual Windows User Calling the Metadata Service"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Windows

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Windows Integration Setup
The Windows integration allows you to monitor the Windows OS, services, applications, and more.

#### The following steps should be executed in order to add the Elastic Agent System integration "windows" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Windows” and select the integration to see more details about it.
- Click “Add Windows”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “windows” to an existing or a new agent policy, and deploy the agent on your system from which windows log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/windows).
"""
risk_score = 21
rule_id = "df197323-72a8-46a9-a08e-3f5b04a4a97a"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Credential Access",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Windows User Calling the Metadata Service

Cloud platforms provide a metadata service that allows instances to access configuration data, including credentials. Adversaries may exploit this by using compromised Windows accounts to query the service, aiming to extract sensitive information. The detection rule identifies atypical access patterns by monitoring for unexpected user interactions with the metadata service, flagging potential credential harvesting attempts.

### Possible investigation steps

- Review the alert details to identify the specific Windows user account involved and the timestamp of the metadata service access.
- Check the source IP address and geolocation associated with the access to determine if it aligns with expected user behavior or known locations.
- Analyze the user's recent login history and patterns to identify any anomalies or deviations from their typical activity.
- Investigate the user's group memberships and permissions to assess if they have legitimate access to the metadata service.
- Examine the process and command-line arguments used during the metadata service access to identify any suspicious or unauthorized tools.
- Utilize Osquery to gather additional context on the system. For example, run the following query to list recent processes executed by the user: `SELECT pid, name, path, cmdline, start_time FROM processes WHERE user = '<username>';`
- Cross-reference the metadata service access with other security logs, such as firewall or intrusion detection system logs, to identify any correlated suspicious activities.
- Review any recent changes to the user's account, such as password resets or privilege escalations, that could indicate account compromise.
- Check for any other alerts or incidents involving the same user or system to determine if this is part of a broader attack pattern.
- Consult threat intelligence sources to see if there are any known campaigns or tactics that match the observed behavior, which could provide additional context for the investigation.

### False positive analysis

- Routine administrative tasks: System administrators may occasionally access the metadata service for legitimate purposes, such as configuration checks or updates. These actions can be mistaken for suspicious activity.
- Automated scripts: Some automated processes or scripts might be configured to interact with the metadata service regularly for maintenance or monitoring purposes, leading to false alerts.
- Third-party tools: Certain third-party management or monitoring tools may access the metadata service as part of their normal operation, which could trigger the detection rule.
- To manage these false positives, users can create exceptions for known administrative accounts or service accounts that regularly interact with the metadata service. This can be done by maintaining a whitelist of trusted users or processes.
- Regularly review and update the list of exceptions to ensure it reflects current operational needs and does not inadvertently exclude genuine threats.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the compromised user account and determine the scope of the breach, including any other systems or data accessed.
- Reset passwords for the compromised account and any other accounts that may have been affected, ensuring the use of strong, unique passwords.
- Review and analyze logs from the metadata service and other relevant systems to identify any unusual patterns or indicators of compromise.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional resources are needed.
- Implement enhanced logging and monitoring policies to capture detailed access logs for the metadata service and other critical systems.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to improve detection and response capabilities.
- Restore the affected system to its operational state by applying necessary patches, updates, and security configurations.
- Conduct a post-incident review to identify gaps in security controls and processes, and implement measures to address these vulnerabilities.
- Educate users on security best practices and the importance of safeguarding credentials to prevent future incidents."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.005"
name = "Cloud Instance Metadata API"
reference = "https://attack.mitre.org/techniques/T1552/005/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

