[metadata]
creation_date = "2020/03/25"
integration = ["endpoint", "network_traffic"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
A machine learning job detected unusually large numbers of DNS queries for a single top-level DNS domain, which is often
used for DNS tunneling. DNS tunneling can be used for command-and-control, persistence, or data exfiltration activity.
For example, dnscat tends to generate many DNS questions for a top-level domain as it uses the DNS protocol to tunnel
data.
"""
false_positives = [
    """
    DNS domains that use large numbers of child domains, such as software or content distribution networks, can trigger
    this alert and such parent domains can be excluded.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = "packetbeat_dns_tunneling"
name = "DNS Tunneling"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Network Packet Capture

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Network Packet Capture Integration Setup
The Network Packet Capture integration sniffs network packets on a host and dissects known protocols. Monitoring the network traffic is critical to gaining observability and securing your environment — ensuring high levels of performance and security. The Network Packet Capture integration captures the network traffic between your application servers, decodes common application layer protocols and records the interesting fields for each transaction.

#### The following steps should be executed in order to add the Elastic Agent System integration "network_traffic" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Network Packet Capture” and select the integration to see more details about it.
- Click “Add Network Packet Capture”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “network_traffic” to an existing or a new agent policy, and deploy the agent on your system from which network log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/network_traffic).
"""
references = ["https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html"]
risk_score = 21
rule_id = "91f02f01-969f-4167-8f66-07827ac3bdd9"
severity = "low"
tags = [
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Command and Control",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating DNS Tunneling
DNS tunneling exploits the DNS protocol to covertly transmit data between a compromised system and an attacker-controlled server. Adversaries may use it for stealthy command-and-control or data exfiltration by embedding data within DNS queries. The 'DNS Tunneling' detection rule leverages machine learning to identify anomalies, such as an unusually high volume of DNS queries to a single domain, indicative of potential tunneling activity.

### Possible investigation steps

- Review the alert details to identify the specific domain involved in the unusually high volume of DNS queries. Note the domain name and the number of queries.
- Check the source IP address or host that generated the DNS queries to determine if it is a known or trusted device within the network.
- Analyze historical DNS logs to identify patterns or trends in DNS query activity from the source IP address. Look for any other unusual or repetitive query patterns.
- Use network traffic analysis tools to capture and inspect DNS traffic from the source IP address. Look for any encoded data or unusual payloads within the DNS queries.
- Investigate the domain involved in the alert using threat intelligence sources to determine if it is associated with known malicious activity or DNS tunneling tools.
- Utilize Osquery to gather additional context from the affected host. For example, run the following Osquery query to list recent DNS queries made by the host:
  ```sql
  SELECT name, count FROM dns_cache WHERE name LIKE '%.<suspicious_domain>';
  ```
- Check for any running processes on the affected host that may be associated with DNS tunneling tools, such as dnscat or Iodine.
- Review system logs and security events on the affected host for any signs of compromise or unusual activity around the time of the DNS queries.
- Correlate the DNS tunneling alert with other security alerts or incidents to determine if it is part of a larger attack campaign or if other systems are affected.
- Consult with other teams, such as threat intelligence or incident response, to gather additional insights or context about the potential threat and its implications.

### False positive analysis

- High volumes of DNS queries to legitimate content delivery networks (CDNs) or cloud service providers can trigger false positives, as these services often use DNS for load balancing and redundancy. Users can mitigate this by creating exceptions for known CDN or cloud service domains.
- Internal applications that rely heavily on DNS for service discovery or configuration management might generate a large number of DNS queries, which could be mistaken for tunneling activity. Users should identify and whitelist these internal domains to prevent false alerts.
- Automated security tools or network monitoring solutions that perform frequent DNS lookups for threat intelligence or domain reputation checks may also cause false positives. Users can exclude these tools' DNS queries from the detection rule to reduce noise.
- Some legitimate software updates or patch management systems may use DNS queries to check for updates, leading to a high volume of DNS traffic. Users should identify these systems and add them to an exception list to avoid unnecessary alerts.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further data exfiltration or command-and-control communication.
- Conduct a thorough investigation of DNS logs to identify the scope of the tunneling activity and determine which domains were queried excessively.
- Analyze network traffic to identify any additional compromised systems or unusual patterns that may indicate further tunneling or malicious activity.
- Remove any malicious software or scripts identified during the investigation from the affected system.
- Change all credentials and access tokens that may have been exposed or compromised during the tunneling activity.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are at risk.
- Implement enhanced DNS logging and monitoring to detect future tunneling attempts, including setting up alerts for high volumes of DNS queries to single domains.
- Integrate threat intelligence feeds to enrich DNS query data and improve detection of known malicious domains.
- Restore the affected system to its operational state by applying necessary patches and updates, and ensure all security controls are re-enabled.
- Harden the network by implementing DNS filtering, restricting outbound DNS traffic to known and trusted servers, and regularly reviewing firewall and proxy configurations."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1572"
name = "Protocol Tunneling"
reference = "https://attack.mitre.org/techniques/T1572/"


[rule.threat.tactic]
id = "TA0011"
name = "Command and Control"
reference = "https://attack.mitre.org/tactics/TA0011/"

