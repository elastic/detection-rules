[metadata]
creation_date = "2020/09/03"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
Looks for sudo activity from an unusual user context. An unusual sudo user could be due to troubleshooting activity or
it could be a sign of credentialed access via compromised accounts.
"""
false_positives = [
    """
    Uncommon sudo activity can be due to an engineer logging onto a server instance in order to perform manual
    troubleshooting or reconfiguration.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_rare_sudo_user"]
name = "Unusual Sudo Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "1e9fc667-9ff1-4b33-9f40-fefca8537eb0"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Privilege Escalation",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Sudo Activity

Sudo allows users to execute commands with elevated privileges, essential for system administration. However, adversaries may exploit this by using compromised credentials to gain unauthorized access. The 'Unusual Sudo Activity' detection rule identifies anomalies in sudo usage patterns, flagging potential misuse by comparing current activity against typical user behavior, thus aiding in early threat detection.

### Possible investigation steps

- Review the alert details to identify the user account involved in the unusual sudo activity and the specific command executed.
- Check the timestamp of the activity to determine if it aligns with the user's typical working hours or if it occurred at an unusual time.
- Analyze the user's historical sudo usage patterns to assess whether this activity deviates from their normal behavior.
- Verify the source IP address and hostname from which the sudo command was executed to ensure it matches the user's known devices and locations.
- Cross-reference the user's recent login history to identify any suspicious logins or anomalies around the time of the sudo activity.
- Use Osquery to gather additional context on the system where the sudo command was executed. For example, run the following query to list recent sudo commands:
  ```sql
  SELECT uid, user, command, time FROM sudo_log WHERE user = '<username>';
  ```
- Investigate any recent changes to the user's account, such as password resets or modifications to group memberships, that could indicate account compromise.
- Check for any other security alerts or logs related to the user or system around the same timeframe to identify potential correlated activities.
- Review the system's audit logs for any unauthorized changes or suspicious activities that occurred before or after the unusual sudo command.
- Consult with the user, if possible, to verify whether they performed the action and to gather additional context about the necessity and legitimacy of the command.

### False positive analysis

- Known false positives for the Unusual Sudo Activity rule often arise from legitimate administrative tasks performed by users who do not typically require elevated privileges, such as developers or support staff temporarily granted sudo access for troubleshooting.
- Another common false positive occurs when system updates or maintenance scripts are executed by service accounts that do not usually perform such actions, leading to flagged activity.
- To manage these false positives, users can create exceptions for specific user accounts or groups that are known to perform these tasks regularly, ensuring that their activity is not flagged as unusual.
- Implementing a baseline of normal sudo activity for each user or role can help in distinguishing between legitimate and suspicious actions, reducing the likelihood of false positives.
- Regularly reviewing and updating the list of exceptions and baselines is crucial, as user roles and responsibilities may change over time, potentially altering what constitutes normal sudo activity.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Verify the legitimacy of the sudo activity by contacting the user involved and reviewing their recent activities and access needs.
- Conduct a thorough investigation of the system logs to identify any unauthorized changes or additional suspicious activities, focusing on the time frame of the unusual sudo activity.
- Reset passwords for the affected user account and any other accounts that may have been compromised, ensuring the use of strong, unique passwords.
- Escalate the incident to the security operations team if evidence of a broader compromise is found, such as multiple accounts affected or signs of data exfiltration.
- Implement enhanced logging policies to capture detailed sudo command usage and user activity, ensuring logs are stored securely and retained for an appropriate period.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate unusual sudo activity with known threat indicators and patterns.
- Restore the system to its operational state by verifying the integrity of critical system files and configurations, and applying any necessary patches or updates.
- Conduct a post-incident review to identify gaps in security controls and processes, and update incident response plans accordingly.
- Implement hardening measures such as enforcing the principle of least privilege, using multi-factor authentication, and regularly reviewing user access rights to minimize the risk of future incidents."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1548"
name = "Abuse Elevation Control Mechanism"
reference = "https://attack.mitre.org/techniques/T1548/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1548"
name = "Abuse Elevation Control Mechanism"
reference = "https://attack.mitre.org/techniques/T1548/"


[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"

