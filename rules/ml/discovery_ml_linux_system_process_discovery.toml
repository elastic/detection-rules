[metadata]
creation_date = "2020/09/03"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
Looks for commands related to system process discovery from an unusual user context. This can be due to uncommon
troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor to engage
in system process discovery in order to increase their understanding of software applications running on a target host
or network. This may be a precursor to selection of a persistence mechanism or a method of privilege elevation.
"""
false_positives = [
    """
    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual
    troubleshooting or reconfiguration.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_system_process_discovery"]
name = "Unusual Linux Process Discovery Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "5c983105-4681-46c3-9890-0c66d05e776b"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Discovery",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux Process Discovery Activity
In Linux environments, process discovery commands help users and administrators understand active processes, aiding in system management and troubleshooting. However, adversaries can exploit these commands to map out running applications, potentially identifying vulnerabilities for privilege escalation or persistence. The detection rule identifies atypical usage patterns of these commands, especially from unexpected user accounts, signaling possible account compromise or malicious reconnaissance activities.

### Possible investigation steps

- Review the alert details to identify the specific user account and process discovery command that triggered the alert.
- Check the timestamp of the alert to determine when the unusual activity occurred and correlate it with any other suspicious activities in the same timeframe.
- Investigate the user account's recent activity history to identify any anomalies or signs of compromise, such as unusual login times or IP addresses.
- Examine the command execution context, including the parent process and any associated child processes, to understand the broader activity chain.
- Use Osquery to gather additional context on the system. For example, run the following query to list all processes executed by the suspicious user in the last 24 hours: `SELECT * FROM processes WHERE user = '<suspicious_user>' AND datetime(start_time, 'unixepoch') > datetime('now', '-1 day');`
- Analyze system logs, such as auth logs and bash history, to identify any unauthorized access or command execution patterns.
- Cross-reference the process discovery command with known legitimate administrative activities to rule out false positives.
- Investigate any network connections initiated by the suspicious process to identify potential data exfiltration or lateral movement attempts.
- Check for any recent changes to system files or configurations that could indicate an attempt to establish persistence or escalate privileges.
- Consult threat intelligence sources to determine if the observed activity matches any known tactics, techniques, or procedures (TTPs) associated with specific threat actors.

### False positive analysis

- System administrators or IT personnel performing routine maintenance or troubleshooting may trigger the rule if they use process discovery commands from accounts not typically associated with such activities. 
- Automated scripts or monitoring tools that regularly execute process discovery commands for legitimate system health checks can also be flagged as unusual activity.
- Developers or engineers conducting performance testing or debugging on production systems might inadvertently cause alerts if their accounts are not recognized as standard for such operations.
- To manage these false positives, users can create exceptions for specific user accounts or groups known to perform legitimate process discovery tasks regularly.
- Implementing a whitelist of IP addresses or hostnames from which legitimate process discovery commands are expected can help reduce unnecessary alerts.
- Regularly review and update the list of known benign activities and user accounts to ensure that legitimate actions are not mistakenly flagged as suspicious.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Review the user account activity logs to identify any unauthorized access or anomalies, focusing on the account that executed the unusual process discovery commands.
- Terminate any suspicious processes identified during the investigation to halt potential malicious activities.
- Change passwords for compromised accounts and enforce multi-factor authentication to enhance account security.
- Conduct a thorough forensic analysis of the system to identify any additional indicators of compromise or persistence mechanisms.
- Restore the system from a known good backup if malicious activity is confirmed and ensure all security patches are applied.
- Implement enhanced logging policies to capture detailed process execution and user activity for future investigations.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to improve detection capabilities.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response coordination.
- Review and update security policies and hardening measures, such as disabling unnecessary services and enforcing least privilege principles, to reduce the attack surface."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1057"
name = "Process Discovery"
reference = "https://attack.mitre.org/techniques/T1057/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

