[metadata]
creation_date = "2020/09/22"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 75
author = ["Elastic"]
description = """
Looks for anomalous access to the cloud platform metadata service by an unusual user. The metadata service may be
targeted in order to harvest credentials or user data scripts containing secrets.
"""
false_positives = [
    """
    A newly installed program, or one that runs under a new or rarely used user context, could trigger this detection
    rule. Manual interrogation of the metadata service during debugging or troubleshooting could trigger this rule.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_rare_metadata_user"]
name = "Unusual Linux User Calling the Metadata Service"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "1faec04b-d902-4f89-8aff-92cd9043c16f"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Credential Access",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux User Calling the Metadata Service

Cloud platforms provide a metadata service that allows instances to access configuration data, including credentials. Adversaries may exploit this by using unauthorized users to query the service, aiming to extract sensitive information. The detection rule identifies atypical access patterns by monitoring for unexpected user interactions with the metadata service, flagging potential credential harvesting attempts.

### Possible investigation steps

- Review the alert details to identify the specific user account and instance involved in the unusual metadata service access.
- Check the timestamp of the alert to determine when the access occurred and correlate it with any known scheduled tasks or maintenance activities.
- Examine the command history of the identified user on the instance to look for any commands that might have been used to access the metadata service.
- Use Osquery to gather more information about the user and their recent activities. For example, run the following query to list recent processes executed by the user: `SELECT * FROM processes WHERE uid = (SELECT uid FROM users WHERE username = 'unusual_user');`
- Investigate the network logs to identify any other unusual outbound connections from the instance around the time of the alert.
- Check for any recent changes in user permissions or roles that might have inadvertently granted access to the metadata service.
- Review the instance's system logs for any signs of compromise or unauthorized access attempts.
- Analyze the metadata service access logs to determine if there were multiple access attempts or if other users have also accessed it unexpectedly.
- Cross-reference the instance's IP address with threat intelligence sources to check for any known malicious activity associated with it.
- Consult with the team responsible for the instance to verify if the access was legitimate and if any recent changes or deployments could explain the unusual behavior.

### False positive analysis

- Scheduled maintenance scripts or automated processes may trigger the rule if they access the metadata service regularly. These should be reviewed and, if deemed non-threatening, added to an exception list to prevent future alerts.
- Backup or monitoring tools that require metadata access for legitimate purposes might be flagged. Identifying these tools and excluding their access patterns can reduce false positives.
- Developers or system administrators performing legitimate testing or configuration tasks may inadvertently access the metadata service. Regularly review and update the list of authorized users to ensure their activities are not mistakenly flagged.
- Instances of newly deployed applications or services that access the metadata service as part of their initialization process can be mistaken for suspicious activity. Documenting and excluding these known behaviors can help in minimizing false alerts.

### Response and remediation

- Immediately isolate the affected instance to prevent further unauthorized access to the metadata service.
- Conduct a thorough investigation to identify the unusual user and determine how they gained access to the system.
- Review access logs and metadata service queries to assess the extent of the compromise and identify any data exfiltration.
- Revoke any credentials that may have been exposed and rotate keys or tokens associated with the affected instance.
- Escalate the incident to the security operations team for further analysis and to determine if other systems are affected.
- Implement enhanced logging policies to capture detailed access logs for the metadata service and monitor for future anomalies.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to improve detection capabilities.
- Restore the system to its operational state by applying security patches, updating configurations, and ensuring all credentials are secure.
- Harden the system by enforcing least privilege access, using role-based access controls, and regularly auditing user permissions.
- Educate users and administrators on the importance of securing credentials and recognizing signs of unauthorized access attempts."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.005"
name = "Cloud Instance Metadata API"
reference = "https://attack.mitre.org/techniques/T1552/005/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

