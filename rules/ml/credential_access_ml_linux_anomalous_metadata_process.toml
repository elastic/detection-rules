[metadata]
creation_date = "2020/09/22"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
Looks for anomalous access to the metadata service by an unusual process. The metadata service may be targeted in order
to harvest credentials or user data scripts containing secrets.
"""
false_positives = [
    """
    A newly installed program or one that runs very rarely as part of a monthly or quarterly workflow could trigger this
    detection rule.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_rare_metadata_process"]
name = "Unusual Linux Process Calling the Metadata Service"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "9d302377-d226-4e12-b54c-1906b5aec4f6"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Credential Access",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux Process Calling the Metadata Service

In cloud environments, the metadata service provides essential instance information, including credentials and configuration data. Adversaries exploit this by using atypical processes to access metadata, aiming to extract sensitive information like credentials. The detection rule identifies anomalies by monitoring unexpected process interactions with the metadata service, flagging potential credential access attempts.

### Possible investigation steps

- Review the alert details to identify the specific process and user account involved in the unusual access to the metadata service.
- Check the process command line and arguments to understand the intent and context of the process execution.
- Investigate the parent process to determine if the process was spawned by a legitimate or suspicious application.
- Use Osquery to gather additional context about the process. Example query: `SELECT pid, name, path, cmdline, parent FROM processes WHERE name = '<suspicious_process_name>';`
- Examine the process execution history on the host to identify any patterns or anomalies in its behavior.
- Analyze the network connections established by the process to verify if it accessed the metadata service endpoint.
- Review system logs for any related authentication attempts or access logs that might indicate unauthorized access.
- Correlate the process activity with other security events or alerts to identify potential lateral movement or privilege escalation.
- Investigate the user account associated with the process for any signs of compromise or unusual activity.
- Check for any recent changes or deployments on the host that might explain the presence of the unusual process.

### False positive analysis

- Scheduled maintenance scripts or automated backup processes may access the metadata service for legitimate reasons, leading to false positives. Users can handle these by identifying and whitelisting such processes.
- Custom monitoring tools or configuration management systems might interact with the metadata service to gather instance information, which could be misinterpreted as suspicious activity. Users should document these tools and create exceptions for them.
- Cloud-native applications that dynamically adjust configurations based on metadata service information might trigger alerts. Users should ensure these applications are recognized and excluded from the rule.
- Developers or system administrators performing manual checks or updates might access the metadata service, which could be flagged as unusual. Users can mitigate this by logging and reviewing such activities to differentiate between legitimate and suspicious access.
- In environments with frequent deployment changes, new or updated processes might temporarily appear unusual. Users should establish a baseline of normal behavior and update it regularly to accommodate these changes.

### Response and remediation

- Immediately isolate the affected instance to prevent further unauthorized access to the metadata service.
- Conduct a thorough investigation to identify the unusual process and determine if any credentials or sensitive data were accessed or exfiltrated.
- Revoke and rotate any credentials that may have been exposed to prevent unauthorized access to other systems.
- Review and update security group rules and IAM policies to ensure least privilege access to the metadata service.
- Implement enhanced logging and monitoring for metadata service access, including logging all API calls and process interactions.
- Integrate threat intelligence feeds and anomaly detection tools to improve detection of unusual activities related to metadata access.
- Escalate the incident to the security operations center (SOC) for further analysis and to determine if the attack is part of a larger campaign.
- Restore the affected system to its operational state by applying patches, updating configurations, and ensuring all security controls are in place.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans accordingly.
- Implement hardening measures such as disabling unnecessary services, applying security patches, and enforcing strong authentication mechanisms to protect against future attacks."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.005"
name = "Cloud Instance Metadata API"
reference = "https://attack.mitre.org/techniques/T1552/005/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

