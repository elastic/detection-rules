[metadata]
creation_date = "2020/03/25"
integration = ["endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
Identifies processes started from atypical folders in the file system, which might indicate malware execution or
persistence mechanisms. In corporate Windows environments, software installation is centrally managed and it is unusual
for programs to be executed from user or temporary directories. Processes executed from these locations can denote that
a user downloaded software directly from the Internet or a malicious script or macro executed malware.
"""
false_positives = [
    """
    A new and unusual program or artifact download in the course of software upgrades, debugging, or troubleshooting
    could trigger this alert. Users downloading and running programs from unusual locations, such as temporary
    directories, browser caches, or profile paths could trigger this alert.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_windows_anomalous_path_activity"]
name = "Unusual Windows Path Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Windows

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Windows Integration Setup
The Windows integration allows you to monitor the Windows OS, services, applications, and more.

#### The following steps should be executed in order to add the Elastic Agent System integration "windows" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Windows” and select the integration to see more details about it.
- Click “Add Windows”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “windows” to an existing or a new agent policy, and deploy the agent on your system from which windows log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/windows).
"""
references = ["https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html"]
risk_score = 21
rule_id = "445a342e-03fb-42d0-8656-0367eb2dead5"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Persistence",
    "Tactic: Execution",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Windows Path Activity

In corporate Windows environments, software is typically installed in standard directories, and deviations can signal potential threats. Adversaries exploit this by executing malware from non-standard paths like user or temporary directories, bypassing traditional security measures. The 'Unusual Windows Path Activity' rule detects such anomalies, flagging processes initiated from these atypical locations, thus aiding in identifying unauthorized or malicious activities.

### Possible investigation steps

- Review the alert details to identify the specific process name, path, and user account associated with the unusual activity.
- Check the process's parent process to understand how it was initiated, using fields like `parent_process_name` and `parent_process_id`.
- Investigate the file path from which the process was executed to determine if it is a known or expected location for legitimate software.
- Use Osquery to gather more information about the file, such as its hash, size, and creation date, with a query like: `SELECT path, md5, sha256, size, ctime FROM file WHERE path = '<unusual_path>';`.
- Examine the file's metadata and digital signature to verify its authenticity and origin.
- Cross-reference the process and file details with threat intelligence sources to check for known malicious indicators.
- Analyze recent user activity on the system to identify any downloads or installations that coincide with the alert.
- Review system logs for any network connections initiated by the process to external IP addresses or domains.
- Check for any persistence mechanisms that may have been established by the process, such as registry modifications or scheduled tasks.
- Consult with the user associated with the alert to gather additional context about their recent activities and any software installations they may have performed.

### False positive analysis

- Legitimate software updates: Some legitimate software may update themselves by downloading new versions to temporary directories before installation. Users can create exceptions for known update processes to prevent false positives.
- Development environments: Developers often compile and test software in user directories, which can trigger alerts. Excluding specific development tools or directories used by developers can reduce unnecessary alerts.
- Portable applications: These applications run from user directories without installation. Users should whitelist trusted portable applications to avoid false positives.
- User-installed software: In some environments, users may have permission to install software in their own directories. Identifying and excluding these known applications can help manage alerts.
- Automated scripts: Scheduled tasks or scripts that run from user directories for legitimate purposes can be flagged. Users should document and exclude these scripts to prevent false positives.
- Security tools: Some security tools may execute from non-standard paths for scanning or remediation purposes. Whitelisting these tools can prevent them from being flagged as threats.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of potential malware.
- Conduct a thorough investigation to identify the process and its origin, using endpoint detection and response (EDR) tools to trace the execution path and any associated files.
- Terminate any suspicious processes identified as originating from atypical directories, such as user or temporary folders.
- Remove or quarantine any malicious files or scripts found during the investigation to prevent re-execution.
- Review and analyze system logs to determine if there are any other indicators of compromise or related activities, leveraging MITRE ATT&CK framework for threat context.
- Escalate the incident to the security operations center (SOC) or incident response team if the threat is determined to be part of a larger attack campaign or if additional expertise is required.
- Restore the system to its operational state by reinstalling affected software from trusted sources and applying the latest security patches.
- Implement or enhance logging policies to capture detailed process execution data, focusing on atypical directories to improve future detection capabilities.
- Integrate threat intelligence feeds and automated alerting systems to enhance the detection of similar threats in the future.
- Conduct a post-incident review to identify gaps in security controls and apply hardening measures, such as restricting execution permissions in user and temporary directories."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1543"
name = "Create or Modify System Process"
reference = "https://attack.mitre.org/techniques/T1543/"
[[rule.threat.technique.subtechnique]]
id = "T1543.003"
name = "Windows Service"
reference = "https://attack.mitre.org/techniques/T1543/003/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1204"
name = "User Execution"
reference = "https://attack.mitre.org/techniques/T1204/"
[[rule.threat.technique.subtechnique]]
id = "T1204.002"
name = "Malicious File"
reference = "https://attack.mitre.org/techniques/T1204/002/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

