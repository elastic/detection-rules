[metadata]
creation_date = "2020/03/25"
integration = ["auditd_manager", "endpoint", "system"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = "Identifies an unusually high number of authentication attempts."
false_positives = [
    """
    Security audits may trigger this alert. Conditions that generate bursts of failed logins, such as misconfigured
    applications or account lockouts could trigger this alert.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = "suspicious_login_activity"
name = "Unusual Login Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager
- System

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.

### System Integration Setup
The System integration allows you to collect system logs and metrics from your servers with Elastic Agent.

#### The following steps should be executed in order to add the Elastic Agent System integration "system" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “System” and select the integration to see more details about it.
- Click “Add System”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “system” to an existing or a new agent policy, and deploy the agent on your system from which system log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/system).
"""
references = ["https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html"]
risk_score = 21
rule_id = "4330272b-9724-4bc6-a3ca-f1532b81e5c2"
severity = "low"
tags = [
    "Use Case: Identity and Access Audit",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Credential Access",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Login Activity
In modern environments, authentication systems are crucial for verifying user identities. Adversaries often exploit these systems through brute force attacks, attempting numerous login attempts to gain unauthorized access. The 'Unusual Login Activity' detection rule monitors for spikes in authentication attempts, signaling potential credential access threats. By identifying these anomalies, security teams can swiftly respond to and mitigate unauthorized access attempts.

### Possible investigation steps

- Review the alert details to identify the specific user accounts and IP addresses involved in the unusual login activity.
- Check the timestamp of the alert to determine the time window of the suspicious activity.
- Analyze the source IP addresses to identify if they are from known malicious sources or unusual locations for the user.
- Examine the number of failed versus successful login attempts to assess the likelihood of a brute force attack.
- Investigate the user accounts involved to determine if they have been targeted in past incidents or have elevated privileges.
- Use Osquery to gather additional context on the affected systems. For example, run the following query to list recent login attempts on a specific host:
  ```sql
  SELECT username, time, host, address FROM last WHERE host = 'affected_host_name';
  ```
- Correlate the unusual login activity with other security events, such as changes in user permissions or modifications to critical files.
- Check for any recent changes in the authentication system configuration that might have triggered false positives.
- Review logs from other security tools, such as firewalls or intrusion detection systems, for related suspicious activity.
- Consult with the user(s) involved to verify if the login attempts were legitimate or if their credentials may have been compromised.

### False positive analysis

- High-volume automated processes: Systems or applications that perform regular, automated login attempts, such as scheduled tasks or health checks, can trigger false positives. To manage this, identify and whitelist these processes by creating exceptions for known IP addresses or service accounts.
- User behavior during password resets: Users may attempt multiple logins during password reset processes, leading to a spike in authentication attempts. Security teams can mitigate this by monitoring for password reset activities and correlating them with login attempts to distinguish between legitimate and suspicious behavior.
- Load testing activities: During performance testing, systems may simulate numerous login attempts to evaluate authentication service capacity. Exclude these activities by coordinating with development and testing teams to schedule and document load tests, allowing for temporary rule adjustments.
- Shared workstations or kiosks: Environments where multiple users log in from the same device can result in a high number of authentication attempts. Implement user behavior baselines and exclude these devices from triggering alerts by recognizing their unique usage patterns.
- VPN or remote access fluctuations: Users connecting from different locations or through VPNs may cause a surge in login attempts. To handle this, establish a baseline for remote access patterns and adjust detection thresholds accordingly, ensuring legitimate remote work does not trigger false positives.

### Response and remediation

- Immediately isolate affected accounts to prevent further unauthorized access and reset passwords for compromised accounts.
- Conduct a thorough investigation of the login attempts to identify the source IP addresses and correlate them with known threat intelligence feeds.
- Review and analyze logs from authentication systems to determine the scope of the attack and identify any additional compromised accounts.
- Escalate the incident to the security operations center (SOC) for further analysis and to determine if the attack is part of a larger campaign.
- Implement multi-factor authentication (MFA) for all user accounts to enhance security and reduce the risk of future brute force attacks.
- Update and enforce strong password policies, ensuring that passwords are complex and changed regularly.
- Integrate additional security tools such as intrusion detection systems (IDS) and security information and event management (SIEM) solutions to improve monitoring and detection capabilities.
- Conduct a post-incident review to identify gaps in the current security posture and update incident response plans accordingly.
- Restore affected systems to their operational state by applying necessary patches and updates, and ensure all security controls are functioning correctly.
- Educate users on recognizing phishing attempts and the importance of safeguarding their credentials to prevent future incidents."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1110"
name = "Brute Force"
reference = "https://attack.mitre.org/techniques/T1110/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

