[metadata]
creation_date = "2020/03/25"
integration = ["endpoint", "network_traffic"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 50
author = ["Elastic"]
description = """
A machine learning job detected a rare and unusual DNS query that indicate network activity with unusual DNS domains.
This can be due to initial access, persistence, command-and-control, or exfiltration activity. For example, when a user
clicks on a link in a phishing email or opens a malicious document, a request may be sent to download and run a payload
from an uncommon domain. When malware is already running, it may send requests to an uncommon DNS domain the malware
uses for command-and-control communication.
"""
false_positives = [
    """
    A newly installed program or one that runs rarely as part of a monthly or quarterly workflow could trigger this
    alert. Network activity that occurs rarely, in small quantities, can trigger this alert. Possible examples are
    browsing technical support or vendor networks sparsely. A user who visits a new or unique web destination may
    trigger this alert.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = "packetbeat_rare_dns_question"
name = "Unusual DNS Activity"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Network Packet Capture

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Network Packet Capture Integration Setup
The Network Packet Capture integration sniffs network packets on a host and dissects known protocols. Monitoring the network traffic is critical to gaining observability and securing your environment — ensuring high levels of performance and security. The Network Packet Capture integration captures the network traffic between your application servers, decodes common application layer protocols and records the interesting fields for each transaction.

#### The following steps should be executed in order to add the Elastic Agent System integration "network_traffic" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Network Packet Capture” and select the integration to see more details about it.
- Click “Add Network Packet Capture”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “network_traffic” to an existing or a new agent policy, and deploy the agent on your system from which network log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/network_traffic).
"""
references = ["https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html"]
risk_score = 21
rule_id = "746edc4c-c54c-49c6-97a1-651223819448"
severity = "low"
tags = [
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Command and Control",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual DNS Activity
DNS, a cornerstone of internet functionality, translates domain names into IP addresses. Adversaries exploit DNS by using rare domains for malicious activities like command-and-control or data exfiltration. The 'Unusual DNS Activity' detection rule leverages machine learning to identify atypical DNS queries, signaling potential threats such as phishing or malware communication, by flagging uncommon domain interactions.

### Possible investigation steps

- Review the alert details to identify the specific uncommon domain that triggered the alert and the associated timestamp.
- Cross-reference the uncommon domain with threat intelligence sources to determine if it is associated with known malicious activity.
- Analyze DNS logs to identify the source IP address of the device making the unusual DNS query and any other domains it has queried recently.
- Investigate the user or system associated with the source IP address to determine if there are any signs of compromise or unusual behavior.
- Use Osquery to gather additional context from the affected system. For example, run the following query to list recent DNS queries made by the system: `SELECT name, time FROM dns_resolvers WHERE time > strftime('%s', 'now', '-1 day');`
- Check network traffic logs for any outbound connections to the uncommon domain and assess the volume and frequency of these connections.
- Examine endpoint security logs for any alerts or detections that coincide with the timestamp of the unusual DNS activity.
- Investigate any recent changes or installations on the affected system that could be related to the unusual DNS activity.
- Review email logs for any phishing attempts or suspicious emails received by the user associated with the alert.
- Consult with other security team members or departments to gather additional insights or context regarding the unusual DNS activity.

### False positive analysis

- Legitimate software updates or cloud services may trigger the Unusual DNS Activity rule if they use uncommon domains for content delivery or API calls. Users can manage these by identifying and whitelisting known update servers or cloud service domains.
- Internal development or testing environments might use non-standard domains that appear unusual. To handle these, users should document and exclude these domains from the detection rule to prevent false alerts.
- Third-party applications or services that rely on dynamic or ephemeral domains for functionality can be mistaken for malicious activity. Users should maintain a list of trusted applications and their associated domains to exclude them from triggering the rule.
- Some organizations use custom DNS configurations or private domains that may not be widely recognized. Users should ensure these are accounted for in the detection rule settings to avoid false positives.
- Temporary spikes in DNS queries due to legitimate business activities, such as marketing campaigns or product launches, can be misinterpreted as unusual activity. Users should monitor and adjust the rule thresholds during such events to prevent unnecessary alerts.

### Response and remediation

- Isolate the affected system from the network to prevent further communication with the malicious domain.
- Conduct a thorough investigation to identify the scope of the compromise, including checking for other systems that may have communicated with the same domain.
- Analyze DNS logs and network traffic to identify any additional indicators of compromise (IOCs) related to the unusual DNS activity.
- Remove any identified malware or unauthorized software from the affected system using antivirus or endpoint detection and response (EDR) tools.
- Change passwords and credentials that may have been exposed or used on the compromised system.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional resources are needed.
- Implement or enhance DNS logging and monitoring to detect future unusual DNS activities more effectively.
- Integrate threat intelligence feeds to enrich DNS data and improve detection capabilities for known malicious domains.
- Restore the system to its operational state by applying necessary patches and updates, and verify that all security controls are functioning correctly.
- Harden the system by implementing security best practices, such as disabling unnecessary services, applying least privilege principles, and ensuring regular security training for users."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1071"
name = "Application Layer Protocol"
reference = "https://attack.mitre.org/techniques/T1071/"
[[rule.threat.technique.subtechnique]]
id = "T1071.004"
name = "DNS"
reference = "https://attack.mitre.org/techniques/T1071/004/"



[rule.threat.tactic]
id = "TA0011"
name = "Command and Control"
reference = "https://attack.mitre.org/tactics/TA0011/"

