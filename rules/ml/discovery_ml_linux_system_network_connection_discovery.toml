[metadata]
creation_date = "2020/09/03"
integration = ["auditd_manager", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
anomaly_threshold = 25
author = ["Elastic"]
description = """
Looks for commands related to system network connection discovery from an unusual user context. This can be due to
uncommon troubleshooting activity or due to a compromised account. A compromised account may be used by a threat actor
to engage in system network connection discovery in order to increase their understanding of connected services and
systems. This information may be used to shape follow-up behaviors such as lateral movement or additional discovery.
"""
false_positives = [
    """
    Uncommon user command activity can be due to an engineer logging onto a server instance in order to perform manual
    troubleshooting or reconfiguration.
    """,
]
from = "now-45m"
interval = "15m"
license = "Elastic License v2"
machine_learning_job_id = ["v3_linux_network_connection_discovery"]
name = "Unusual Linux Network Connection Discovery"
setup = """## Setup

This rule requires the installation of associated Machine Learning jobs, as well as data coming in from one of the following integrations:
- Elastic Defend
- Auditd Manager

### Anomaly Detection Setup

Once the rule is enabled, the associated Machine Learning job will start automatically. You can view the Machine Learning job linked under the "Definition" panel of the detection rule. If the job does not start due to an error, the issue must be resolved for the job to commence successfully. For more details on setting up anomaly detection jobs, refer to the [helper guide](https://www.elastic.co/guide/en/kibana/current/xpack-ml-anomalies.html).

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration to your system:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditd Manager Integration Setup
The Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.
Auditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.

#### The following steps should be executed in order to add the Elastic Agent System integration "auditd_manager" to your system:
- Go to the Kibana home page and click “Add integrations”.
- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.
- Click “Add Auditd Manager”.
- Configure the integration name and optionally add a description.
- Review optional and advanced settings accordingly.
- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.
- Click “Save and Continue”.
- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).

#### Rule Specific Setup Note
Auditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.
However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the "audit rules" configuration box or the "auditd rule files" box by specifying a file to read the audit rules from.
- For this detection rule no additional audit rules are required.
"""
risk_score = 21
rule_id = "c28c4d8c-f014-40ef-88b6-79a1d67cd499"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Rule Type: ML",
    "Rule Type: Machine Learning",
    "Tactic: Discovery",
]
type = "machine_learning"
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Unusual Linux Network Connection Discovery

In Linux environments, network connection discovery tools help administrators understand system connectivity. Adversaries exploit these tools to map networks, aiding in lateral movement or further reconnaissance. The detection rule identifies atypical usage patterns by monitoring commands executed from unexpected user contexts, signaling potential account compromise or unauthorized network probing.

### Possible investigation steps

- Review the alert details to identify the specific command executed and the user context from which it was run. Pay attention to fields such as `user`, `command`, and `timestamp`.
- Check the user's login history and session details using `last` and `who` commands to determine if the user context is legitimate or if there are signs of unauthorized access.
- Analyze the command history for the user in question by reviewing the `.bash_history` or equivalent shell history files to identify any other suspicious activities.
- Use Osquery to gather more context about the network connections on the system. For example, run the query: `SELECT * FROM process_open_sockets WHERE pid IN (SELECT pid FROM processes WHERE name = 'netstat' OR name = 'ss');` to identify processes that have opened network connections.
- Investigate the source IP addresses and destinations involved in the network connections to determine if they are known and trusted or if they are unusual or malicious.
- Cross-reference the alert with any recent changes in user permissions or group memberships that might explain the unusual activity.
- Check for any recent file modifications or new files in the user's home directory that could indicate the presence of malicious scripts or tools.
- Review system logs, such as `/var/log/auth.log` or `/var/log/secure`, for any anomalies or failed login attempts around the time of the alert.
- Correlate the alert with other security events or alerts in the environment to identify if this is part of a larger attack pattern or campaign.
- Consult threat intelligence sources to determine if the observed behavior matches any known tactics, techniques, or procedures (TTPs) associated with specific threat actors.

### False positive analysis

- System administrators or network engineers may execute network discovery commands during routine maintenance or troubleshooting, which could trigger the rule. To manage this, create exceptions for known user accounts or specific time windows when such activities are expected.
- Automated scripts or monitoring tools that perform regular network checks might be flagged as unusual. Identify these scripts and whitelist their execution paths or associated user accounts to prevent false alerts.
- New employees or contractors who are unfamiliar with standard procedures might inadvertently run network discovery commands. Educate these users on proper protocols and consider temporary exceptions while they are onboarded.
- Changes in network infrastructure or security policies might necessitate increased network discovery activities. During these periods, adjust the rule's sensitivity or temporarily disable it to accommodate the expected increase in legitimate network probing.
- In environments with frequent role changes, users might inherit permissions that allow them to execute network discovery commands. Regularly review and update user permissions to ensure they align with current job responsibilities, and adjust the rule to account for these transitions.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Conduct a thorough investigation to determine the scope of the compromise, focusing on identifying the user account and commands involved in the unusual network connection discovery.
- Reset passwords and review permissions for the compromised account to prevent further unauthorized access.
- Analyze system logs and network traffic to identify any additional indicators of compromise or related suspicious activities.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the threat actor has accessed other systems.
- Implement enhanced logging policies to capture detailed command execution and network activity, ensuring future incidents can be detected more effectively.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate unusual activities with known threat actor behaviors.
- Restore the system to its operational state by applying necessary patches, updates, and verifying the integrity of critical system files.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans accordingly.
- Implement hardening measures such as disabling unused network services, enforcing least privilege access, and regularly auditing user accounts and permissions."""
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1049"
name = "System Network Connections Discovery"
reference = "https://attack.mitre.org/techniques/T1049/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

