[metadata]
creation_date = "2021/01/11"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Detects attempts to disable Gatekeeper on macOS. Gatekeeper is a security feature that's designed to ensure that only
trusted software is run. Adversaries may attempt to disable Gatekeeper before executing malicious code.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "kuery"
license = "Elastic License v2"
name = "Attempt to Disable Gatekeeper"
references = [
    "https://support.apple.com/en-us/HT202491",
    "https://community.carbonblack.com/t5/Threat-Advisories-Documents/TAU-TIN-Shlayer-OSX/ta-p/68397",
]
risk_score = 47
rule_id = "4da13d6e-904f-4636-81d8-6ab14b4e6ae9"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and host.os.type:macos and event.type:(start or process_started) and
  process.args:(spctl and "--master-disable")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Attempt to Disable Gatekeeper

Gatekeeper is a macOS security feature that ensures only trusted software is executed by verifying app signatures. Adversaries may attempt to disable Gatekeeper to bypass these checks and run malicious code. The detection rule identifies such attempts by monitoring process activities for specific commands that indicate an effort to disable Gatekeeper, thus alerting analysts to potential security breaches.

### Possible investigation steps

- Review the alert details to confirm the presence of the specific command `spctl --master-disable` in the `process.args` field, which indicates an attempt to disable Gatekeeper.
- Check the `event.category` and `event.type` fields to ensure the event is related to a process start on a macOS host, confirming the context of the alert.
- Identify the user account associated with the process by examining the `user.name` field to determine if the action was initiated by a legitimate user or a potential adversary.
- Investigate the `process.name` and `process.executable` fields to gather more information about the process attempting to disable Gatekeeper, including its origin and legitimacy.
- Use Osquery to list all processes running on the affected host to identify any other suspicious activities. Example query: `SELECT pid, name, path FROM processes WHERE name LIKE '%spctl%';`
- Examine the `host.name` and `host.ip` fields to identify the affected machine and assess if it is part of a larger pattern or isolated incident.
- Review recent login events on the affected host to identify any unauthorized access attempts that could correlate with the Gatekeeper disable attempt.
- Analyze the `process.parent.name` and `process.parent.executable` fields to trace the parent process that initiated the Gatekeeper disable command, which may provide insights into the attack vector.
- Check for any recent changes in system settings or configurations on the affected host that could indicate further tampering or preparation for executing malicious code.
- Correlate the alert with other security events or logs from the same timeframe to identify any additional indicators of compromise or related suspicious activities.

### False positive analysis

- Legitimate administrative actions: System administrators or IT personnel may intentionally disable Gatekeeper for troubleshooting or software testing purposes. These actions can trigger the detection rule, leading to false positives.
- Software development activities: Developers working on macOS applications might disable Gatekeeper to test unsigned apps during the development process, which can be mistakenly flagged as malicious behavior.
- Custom scripts or automation tools: Some organizations use scripts or automation tools that include commands to disable Gatekeeper as part of their workflow, potentially causing false alerts.
- To manage these false positives, users can create exceptions for known and trusted administrative accounts or specific processes that are regularly involved in legitimate Gatekeeper disabling activities. This can be done by refining the detection rule to exclude certain user accounts or process paths that are verified as non-threatening.

### Response and remediation

- Immediately isolate the affected macOS system from the network to prevent potential lateral movement or data exfiltration.
- Verify the presence of unauthorized changes by reviewing system logs and Gatekeeper settings to confirm if it has been disabled.
- Conduct a thorough investigation to identify any malicious processes or files that may have been executed following the Gatekeeper disablement attempt.
- Restore Gatekeeper to its default state by re-enabling it using the command `sudo spctl --master-enable` and ensure that system integrity is maintained.
- Escalate the incident to the security operations team for further analysis and to determine if this attempt is part of a broader attack campaign.
- Implement enhanced logging policies to capture detailed process execution data and command-line arguments for future monitoring and analysis.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities and provide context on similar threats.
- Review and update security policies to include regular audits of security settings and configurations, ensuring compliance with best practices.
- Educate users on the importance of security features like Gatekeeper and the risks associated with disabling them, reinforcing the organization's security culture.
- Conduct a post-incident review to identify gaps in the current security posture and develop a plan to address these vulnerabilities, including potential system hardening measures such as application whitelisting and regular software updates."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1553"
name = "Subvert Trust Controls"
reference = "https://attack.mitre.org/techniques/T1553/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

