[metadata]
creation_date = "2020/08/14"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way
for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords,
websites, secure notes and certificates.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Access to Keychain Credentials Directories"
references = [
    "https://objective-see.com/blog/blog_0x25.html",
    "https://securelist.com/calisto-trojan-for-macos/86543/",
]
risk_score = 73
rule_id = "96e90768-c3b7-4df6-b5d9-6237f8bc36a8"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "macos" and event.type in ("start", "process_started") and
  process.args :
    (
      "/Users/*/Library/Keychains/*",
      "/Library/Keychains/*",
      "/Network/Library/Keychains/*",
      "System.keychain",
      "login.keychain-db",
      "login.keychain"
    ) and
    not process.args : ("find-certificate",
                        "add-trusted-cert",
                        "set-keychain-settings",
                        "delete-certificate",
                        "/Users/*/Library/Keychains/openvpn.keychain-db",
                        "show-keychain-info",
                        "lock-keychain",
                        "set-key-partition-list",
                        "import",
                        "find-identity") and
    not process.parent.executable :
      (
        "/Applications/OpenVPN Connect/OpenVPN Connect.app/Contents/MacOS/OpenVPN Connect",
        "/Applications/Microsoft Defender.app/Contents/MacOS/wdavdaemon_enterprise.app/Contents/MacOS/wdavdaemon_enterprise",
        "/opt/jc/bin/jumpcloud-agent"
      ) and
    not process.executable : ("/opt/jc/bin/jumpcloud-agent", "/usr/bin/basename") and
    not process.Ext.effective_parent.executable : ("/opt/rapid7/ir_agent/ir_agent",
                                                   "/Library/Elastic/Endpoint/elastic-endpoint.app/Contents/MacOS/elastic-endpoint",
                                                   "/Applications/QualysCloudAgent.app/Contents/MacOS/qualys-cloud-agent",
                                                   "/Library/Application Support/JAMF/Jamf.app/Contents/MacOS/JamfDaemon.app/Contents/MacOS/JamfDaemon",
                                                   "/Library/Application Support/JAMF/Jamf.app/Contents/MacOS/JamfManagementService.app/Contents/MacOS/JamfManagementService",
                                                   "/usr/local/jamf/bin/jamf",
                                                   "/Applications/Microsoft Defender.app/Contents/MacOS/wdavdaemon")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Access to Keychain Credentials Directories

macOS keychains securely store user credentials, such as passwords and certificates, essential for system and application authentication. Adversaries may target these directories to extract sensitive information, bypassing security measures. The detection rule identifies suspicious access attempts by monitoring process activities related to keychain directories, excluding legitimate operations and known safe executables, thus highlighting potential credential theft activities.

### Possible investigation steps

- Review the alert details to identify the specific process and arguments that triggered the rule, focusing on the `process.args` field to understand which keychain directory was accessed.
- Examine the `process.parent.executable` and `process.executable` fields to determine the origin of the process and assess whether it is a known or unknown application.
- Check the `process.Ext.effective_parent.executable` field to identify the effective parent process and evaluate if it is a legitimate application or potentially malicious.
- Use Osquery to list all processes currently accessing keychain directories with a query like: `SELECT pid, name, path FROM processes WHERE path LIKE '/Users/%/Library/Keychains/%' OR path LIKE '/Library/Keychains/%';`
- Investigate the user account associated with the process by examining the `process.user.name` field to determine if the activity aligns with the user's typical behavior.
- Correlate the timestamp of the alert with other system logs to identify any concurrent suspicious activities or anomalies.
- Review recent login events and user activity to determine if there were any unauthorized access attempts around the time of the alert.
- Analyze network connections initiated by the process using network monitoring tools to identify any suspicious outbound connections that may indicate data exfiltration.
- Check for any recent changes or installations of software on the system that could explain the process's behavior, focusing on software that interacts with keychain data.
- Consult threat intelligence sources to determine if the process or its parent is associated with known malicious activity or campaigns targeting macOS keychain data.

### False positive analysis

- Legitimate applications accessing keychain directories for routine operations may trigger false positives. For example, security software like Microsoft Defender or management tools like JAMF may access keychain data as part of their normal functionality.
- Users can manage these false positives by adding exceptions for known safe executables and processes. This can be done by updating the detection rule to exclude specific process arguments or executables that are verified as non-threatening.
- Regularly review and update the list of excluded processes and executables to ensure that only trusted applications are allowed access without triggering alerts.
- Consider the context of the access attempt, such as the time of day or the user account involved, to further refine the detection rule and reduce false positives.
- Collaborate with IT and security teams to identify and document legitimate use cases for keychain access, ensuring these are accounted for in the detection rule exceptions.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the process and user account involved in the suspicious access attempt, using available logs and forensic tools.
- Review the process tree and command-line arguments to understand the context of the access attempt and determine if it was malicious.
- If malicious activity is confirmed, reset passwords and revoke any compromised credentials associated with the affected keychain.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging for keychain access attempts and integrate with a security information and event management (SIEM) system for real-time monitoring.
- Review and update security policies to ensure that only authorized applications and users have access to keychain directories.
- Restore the system to its operational state by removing any malicious software and applying security patches and updates.
- Conduct a post-incident review to identify gaps in security controls and improve detection and response capabilities.
- Implement hardening measures such as enabling two-factor authentication and using strong, unique passwords for keychain-protected services."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"
[[rule.threat.technique.subtechnique]]
id = "T1555.001"
name = "Keychain"
reference = "https://attack.mitre.org/techniques/T1555/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

