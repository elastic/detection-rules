[metadata]
creation_date = "2021/01/12"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the execution of macOS built-in commands related to account or group enumeration. Adversaries may use account
and group information to orient themselves before deciding how to act.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Enumeration of Users or Groups via Built-in Commands"
risk_score = 21
rule_id = "6e9b351e-a531-4bdc-b73e-7034d6eed7ff"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "macos" and event.type in ("start", "process_started") and
  (
    process.name : ("ldapsearch", "dsmemberutil") or
    (process.name : "dscl" and
      process.args : ("read", "-read", "list", "-list", "ls", "search", "-search") and
      process.args : ("/Active Directory/*", "/Users*", "/Groups*"))
	) and
  ((process.Ext.effective_parent.executable : ("/Volumes/*", "/Applications/*") or process.parent.executable : ("/Volumes/*", "/Applications/*")) or
   (process.Ext.effective_parent.name : ".*" or process.parent.name : ".*")) and
  not process.Ext.effective_parent.executable : ("/Applications/QualysCloudAgent.app/Contents/MacOS/qualys-cloud-agent",
                                                 "/Applications/Kaspersky Anti-Virus For Mac.app/Contents/MacOS/kavd.app/Contents/MacOS/kavd",
                                                 "/Applications/ESET Endpoint Security.app/Contents/MacOS/esets_ctl",
                                                 "/Applications/NordVPN.app/Contents/MacOS/NordVPN",
                                                 "/Applications/Xcode.app/Contents/MacOS/Xcode",
                                                 "/Applications/ESET Endpoint Security.app/Contents/Helpers/Uninstaller.app/Contents/MacOS/Uninstaller",
                                                 "/Applications/Parallels Desktop.app/Contents/MacOS/prl_client_app",
                                                 "/Applications/Zscaler/Zscaler.app/Contents/MacOS/Zscaler",
                                                 "/Applications/com.avast.av.uninstaller.app/Contents/MacOS/com.avast.av.uninstaller",
                                                 "/Applications/NoMAD.app/Contents/MacOS/NoMAD",
                                                 "/Applications/ESET Management Agent.app/Contents/MacOS/ERAAgent")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Enumeration of Users or Groups via Built-in Commands

Built-in commands on macOS, such as `ldapsearch`, `dsmemberutil`, and `dscl`, are essential for managing and querying user and group information. Adversaries exploit these to gather insights into user accounts and group memberships, aiding in privilege escalation or lateral movement. The detection rule identifies suspicious use of these commands by monitoring their execution patterns and excluding known legitimate applications, thus highlighting potential malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific command executed, focusing on `process.name` and `process.args` fields to understand the nature of the enumeration attempt.
- Examine the `process.parent.executable` and `process.Ext.effective_parent.executable` fields to determine the parent process that initiated the command, which can provide context on whether the execution was part of a legitimate application or potentially malicious activity.
- Check the `process.parent.name` and `process.Ext.effective_parent.name` fields to identify any unusual or suspicious parent process names that might indicate unauthorized use.
- Investigate the user account associated with the process execution to determine if the account has a history of similar activities or if it has been compromised.
- Utilize Osquery to gather additional context on the system. For example, run the following query to list recent processes executed by the same user: `SELECT pid, name, path, cmdline, start_time FROM processes WHERE uid = (SELECT uid FROM users WHERE username = '<username>') ORDER BY start_time DESC LIMIT 10;`
- Cross-reference the execution time of the command with other security events or logs to identify any correlated activities that might suggest a broader attack pattern.
- Analyze network logs to check for any outbound connections made by the system around the time of the command execution, which could indicate data exfiltration attempts.
- Review system logs for any recent changes to user accounts or group memberships that could be related to the enumeration activity.
- Check for any other alerts or incidents involving the same host or user account to assess if this is part of a larger attack campaign.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors that use similar enumeration techniques, which could provide additional context for the investigation.

### False positive analysis

- Legitimate applications such as security tools, system management software, or network monitoring solutions may trigger this rule due to their need to query user and group information for legitimate purposes. Examples include QualysCloudAgent, Kaspersky Anti-Virus, and ESET Endpoint Security.
- System administrators or IT support personnel may use these commands during routine maintenance or troubleshooting, leading to benign alerts.
- To manage these false positives, users can create exceptions for known legitimate applications by excluding their executable paths from the detection rule. This can be done by adding the application's executable path to the exclusion list in the detection query.
- Regularly review and update the exclusion list to ensure it reflects the current environment and includes any new legitimate applications that may trigger the rule.
- Consider implementing additional context-based checks, such as verifying the user account executing the command or correlating with other suspicious activities, to reduce false positives while maintaining security vigilance.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Conduct a thorough investigation to determine the scope of the activity, including reviewing logs for any unauthorized access or changes to user accounts and groups.
- Utilize endpoint detection and response (EDR) tools to analyze the execution patterns of the identified commands and correlate them with known malicious behaviors.
- If unauthorized enumeration is confirmed, reset passwords for affected accounts and review group memberships to ensure no unauthorized changes have been made.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging policies to capture detailed command execution and user activity, ensuring that logs are stored securely and retained for an appropriate period.
- Integrate threat intelligence feeds to identify known indicators of compromise (IOCs) related to the detected activity and update detection rules accordingly.
- Restore the system to its operational state by applying the latest security patches and updates, and ensure that all security configurations are in line with best practices.
- Conduct a post-incident review to identify gaps in security controls and processes, and implement measures to prevent similar incidents in the future.
- Educate users on security best practices and the importance of reporting suspicious activity to help prevent social engineering attacks that could lead to unauthorized access."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1069"
name = "Permission Groups Discovery"
reference = "https://attack.mitre.org/techniques/T1069/"
[[rule.threat.technique.subtechnique]]
id = "T1069.001"
name = "Local Groups"
reference = "https://attack.mitre.org/techniques/T1069/001/"


[[rule.threat.technique]]
id = "T1087"
name = "Account Discovery"
reference = "https://attack.mitre.org/techniques/T1087/"
[[rule.threat.technique.subtechnique]]
id = "T1087.001"
name = "Local Account"
reference = "https://attack.mitre.org/techniques/T1087/001/"



[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

