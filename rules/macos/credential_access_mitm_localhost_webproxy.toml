[metadata]
creation_date = "2021/01/05"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the use of the built-in networksetup command to configure webproxy settings. This may indicate an attempt to
hijack web browser traffic for credential access via traffic sniffing or redirection.
"""
false_positives = ["Legitimate WebProxy Settings Modification"]
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "kuery"
license = "Elastic License v2"
name = "WebProxy Settings Modification"
references = [
    "https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/",
    "https://objectivebythesea.com/v2/talks/OBTS_v2_Zohar.pdf",
]
risk_score = 47
rule_id = "10a500bb-a28f-418e-ba29-ca4c8d1a9f2f"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and host.os.type:macos and event.type:start and
 process.name : networksetup and process.args : (("-setwebproxy" or "-setsecurewebproxy" or "-setautoproxyurl") and not (Bluetooth or off)) and
 not process.parent.executable : ("/Library/PrivilegedHelperTools/com.80pct.FreedomHelper" or
                                  "/Applications/Fiddler Everywhere.app/Contents/Resources/app/out/WebServer/Fiddler.WebUi" or
                                  "/usr/libexec/xpcproxy") and
 not process.Ext.effective_parent.executable : ("/Applications/Proxyman.app/Contents/MacOS/Proxyman" or "/Applications/Incoggo.app/Contents/MacOS/Incoggo.app")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating WebProxy Settings Modification

WebProxy settings in macOS manage how web traffic is routed, often used to enhance security or performance. Adversaries may exploit these settings to intercept or redirect traffic, potentially capturing sensitive data like credentials. The detection rule identifies suspicious use of the `networksetup` command to alter proxy settings, excluding known legitimate applications, thus highlighting potential unauthorized modifications indicative of malicious activity.

### Possible investigation steps

- Review the alert details to confirm the presence of the `networksetup` command with arguments like `-setwebproxy`, `-setsecurewebproxy`, or `-setautoproxyurl` in the process arguments.
- Verify the process parent executable to ensure it is not one of the known legitimate applications such as `/Library/PrivilegedHelperTools/com.80pct.FreedomHelper`, `/Applications/Fiddler Everywhere.app/Contents/Resources/app/out/WebServer/Fiddler.WebUi`, or `/usr/libexec/xpcproxy`.
- Check the effective parent executable to confirm it is not `/Applications/Proxyman.app/Contents/MacOS/Proxyman` or `/Applications/Incoggo.app/Contents/MacOS/Incoggo.app`.
- Use Osquery to list all current proxy settings on the affected macOS system to identify any unauthorized changes. Example query: `SELECT * FROM preferences WHERE domain = 'com.apple.networkservices' AND key LIKE '%Proxy%';`
- Investigate the user account associated with the process execution to determine if it aligns with expected behavior or if it might be compromised.
- Examine the process execution timeline to identify any preceding or subsequent suspicious activities that might correlate with the proxy settings modification.
- Cross-reference the event with network logs to identify any unusual outbound connections or data exfiltration attempts following the proxy change.
- Analyze other processes running on the host at the time of the alert to detect any additional suspicious activities or malware presence.
- Review system logs for any failed or successful authentication attempts around the time of the alert to identify potential unauthorized access.
- Consult threat intelligence sources to determine if the observed behavior matches any known attack patterns or campaigns targeting macOS systems.

### False positive analysis

- Known false positives for the WebProxy Settings Modification rule include legitimate applications that modify proxy settings for valid reasons, such as network management tools or security applications. These applications may use the `networksetup` command as part of their normal operation.
- Users can manage these false positives by creating exceptions for known legitimate applications. This can be done by adding the application's executable path to the exclusion list in the detection rule, ensuring that routine and non-threatening behaviors are not flagged as suspicious.
- Specific applications that may trigger false positives include network diagnostic tools, VPN clients, and security software that require proxy configuration to function correctly. Users should verify the legitimacy of these applications and update the exclusion list accordingly.
- Regularly review and update the exclusion list to accommodate new legitimate applications or updates to existing ones, ensuring that the detection rule remains effective without generating unnecessary alerts.

### Response and remediation

- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or data exfiltration.
- Review the process execution details and command-line arguments to confirm unauthorized changes to WebProxy settings.
- Check for any suspicious network traffic or connections that may indicate data interception or redirection.
- Investigate the user account associated with the process execution to determine if it has been compromised.
- Revert any unauthorized changes to the WebProxy settings using the `networksetup` command to restore normal network configuration.
- Conduct a thorough scan of the system for malware or other indicators of compromise using updated security tools.
- Escalate the incident to the security operations team if evidence of credential theft or broader compromise is found.
- Implement enhanced logging for network configuration changes and monitor for any future unauthorized modifications.
- Integrate threat intelligence feeds to correlate detected activities with known threat actor tactics, techniques, and procedures.
- Apply security hardening measures, such as restricting access to network configuration commands and enforcing least privilege principles."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1539"
name = "Steal Web Session Cookie"
reference = "https://attack.mitre.org/techniques/T1539/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

