[metadata]
creation_date = "2021/01/21"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the creation or modification of the default configuration for periodic tasks. Adversaries may abuse periodic
tasks to execute malicious code or maintain persistence.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "kuery"
license = "Elastic License v2"
name = "Potential Persistence via Periodic Tasks"
references = [
    "https://opensource.apple.com/source/crontabs/crontabs-13/private/etc/defaults/periodic.conf.auto.html",
    "https://www.oreilly.com/library/view/mac-os-x/0596003706/re328.html",
    "https://github.com/D00MFist/PersistentJXA/blob/master/PeriodicPersist.js",
]
risk_score = 21
rule_id = "48ec9452-e1fd-4513-a376-10a1a26d2c83"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Persistence",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:file and host.os.type:macos and not event.type:"deletion" and
 file.path:(/private/etc/periodic/* or /private/etc/defaults/periodic.conf or /private/etc/periodic.conf)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Persistence via Periodic Tasks

Periodic tasks in macOS are scheduled operations that automate system maintenance and other routine activities. Adversaries may exploit these tasks to execute unauthorized code or maintain persistence by altering task configurations. The detection rule identifies suspicious file events related to periodic task configurations, excluding deletions, to spot potential tampering indicative of malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific file path that triggered the alert, focusing on paths like `/private/etc/periodic/*`, `/private/etc/defaults/periodic.conf`, or `/private/etc/periodic.conf`.
- Check the timestamp of the event to determine when the suspicious modification or creation occurred.
- Investigate the user account associated with the event to determine if the activity aligns with expected behavior or if it might be indicative of unauthorized access.
- Use Osquery to list all periodic tasks and their configurations to identify any unexpected or unauthorized entries. Example query: `SELECT * FROM file WHERE path LIKE '/private/etc/periodic/%' OR path = '/private/etc/defaults/periodic.conf' OR path = '/private/etc/periodic.conf';`
- Examine the contents of the modified or newly created configuration files to identify any suspicious scripts or commands that could indicate malicious intent.
- Cross-reference the event with other logs, such as authentication logs, to identify any unusual login activities around the time of the event.
- Check for any recent changes in user privileges or group memberships that could have allowed unauthorized modifications to periodic task configurations.
- Investigate any network connections or external communications initiated by the host around the time of the event to identify potential data exfiltration or command-and-control activity.
- Review historical data to determine if similar modifications have occurred in the past, which could indicate a pattern of persistence attempts.
- Consult threat intelligence sources to see if the identified modifications or scripts match known malicious activity or indicators of compromise.

### False positive analysis

- Routine system updates or legitimate software installations may modify periodic task configurations, leading to false positives. Users should verify if the changes coincide with known update schedules or software installations.
- Administrative scripts or maintenance tools used by IT departments might alter periodic task settings as part of their normal operations. Users can create exceptions for these known scripts or tools to reduce noise.
- Configuration management systems like Puppet or Chef may update periodic task configurations as part of their automated processes. Users should ensure these systems are accounted for in their monitoring rules.
- Developers or system administrators might manually adjust periodic task settings for testing or optimization purposes. Users can maintain a whitelist of authorized personnel or processes that are allowed to make such changes.
- Some third-party applications may legitimately modify periodic task configurations to schedule their own maintenance tasks. Users should review and approve these applications to prevent unnecessary alerts.

### Response and remediation

- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or execution of malicious code.
- Conduct a thorough investigation of the modified or newly created periodic task configurations to identify any unauthorized changes or scripts.
- Review system logs and use endpoint detection and response (EDR) tools to trace the origin of the changes and identify any associated malicious activity.
- Restore the original periodic task configurations from a known good backup to ensure system integrity.
- Scan the system for additional indicators of compromise (IOCs) and remove any detected malware or unauthorized files.
- Escalate the incident to the security operations center (SOC) or incident response team if the investigation reveals a broader compromise or if assistance is needed.
- Implement enhanced logging policies to capture detailed file modification events and periodic task executions for future investigations.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate events and detect similar threats in the future.
- Apply security patches and updates to the macOS system to mitigate vulnerabilities that could be exploited by adversaries.
- Harden the system by restricting access to configuration files, enforcing least privilege principles, and regularly auditing scheduled tasks for unauthorized changes."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1053"
name = "Scheduled Task/Job"
reference = "https://attack.mitre.org/techniques/T1053/"
[[rule.threat.technique.subtechnique]]
id = "T1053.003"
name = "Cron"
reference = "https://attack.mitre.org/techniques/T1053/003/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

