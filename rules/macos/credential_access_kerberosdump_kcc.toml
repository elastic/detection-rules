[metadata]
creation_date = "2020/08/14"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the use of the Kerberos credential cache (kcc) utility to dump locally cached Kerberos tickets. Adversaries
may attempt to dump credential material in the form of tickets that can be leveraged for lateral movement.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "kuery"
license = "Elastic License v2"
name = "Kerberos Cached Credentials Dumping"
references = [
    "https://github.com/EmpireProject/EmPyre/blob/master/lib/modules/collection/osx/kerberosdump.py",
    "https://opensource.apple.com/source/Heimdal/Heimdal-323.12/kuser/kcc-commands.in.auto.html",
]
risk_score = 73
rule_id = "ad88231f-e2ab-491c-8fc6-64746da26cfe"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and host.os.type:macos and event.type:(start or process_started) and
  process.name:kcc and
  process.args:copy_cred_cache
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Kerberos Cached Credentials Dumping

Kerberos is a network authentication protocol that uses tickets to allow nodes to prove their identity securely. In macOS environments, the `kcc` utility manages these tickets. Adversaries may exploit `kcc` to extract cached credentials, facilitating unauthorized access and lateral movement. The detection rule identifies suspicious `kcc` activity by monitoring process initiation and specific arguments, signaling potential credential dumping attempts.

### Possible investigation steps

- Review the alert details to confirm the presence of `kcc` process activity with the `copy_cred_cache` argument, as indicated by the query fields `process.name:kcc` and `process.args:copy_cred_cache`.
- Correlate the timestamp of the suspicious `kcc` activity with other logs to identify any concurrent or subsequent suspicious activities, such as unusual network connections or file access.
- Investigate the user account associated with the `kcc` process initiation to determine if the account has a history of legitimate use of Kerberos utilities or if it shows signs of compromise.
- Examine the parent process of the `kcc` activity to understand how the process was initiated and whether it was triggered by a legitimate application or a potentially malicious script.
- Use Osquery to gather additional context about the system state and running processes. For example, execute the following Osquery query to list all processes related to Kerberos activities: `SELECT pid, name, path, cmdline FROM processes WHERE name LIKE '%kcc%' OR cmdline LIKE '%kcc%';`
- Check for any recent changes in user privileges or group memberships that could indicate an attempt to escalate privileges or gain unauthorized access to Kerberos tickets.
- Analyze network logs to identify any unusual outbound connections from the host that could suggest data exfiltration or communication with a command and control server.
- Review historical logs for any previous instances of `kcc` usage on the host to determine if this is a recurring pattern or an isolated incident.
- Investigate any other processes or scripts executed around the same time as the `kcc` activity to identify potential lateral movement or further credential access attempts.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors associated with similar Kerberos credential dumping techniques.

### False positive analysis

- Routine administrative tasks: System administrators may use the `kcc` utility for legitimate purposes, such as managing Kerberos tickets during maintenance or troubleshooting, which could trigger the detection rule.
- Automated scripts: Some automated scripts or management tools might invoke `kcc` with similar arguments for regular operations, leading to false positives.
- Testing environments: In environments where security tools or protocols are being tested, `kcc` might be used frequently, causing benign alerts.
- To manage these false positives, users can create exceptions for known administrative accounts or specific scripts that regularly use `kcc` for legitimate purposes. This can be done by excluding certain user accounts or process arguments from triggering the alert, ensuring that only truly suspicious activities are flagged.

### Response and remediation

- Immediately isolate the affected macOS system from the network to prevent further unauthorized access and lateral movement.
- Conduct a thorough investigation to confirm the presence of unauthorized `kcc` activity by reviewing process logs and correlating with other security events.
- Identify and terminate any suspicious processes related to `kcc` and any other unauthorized access attempts.
- Change passwords for any accounts that may have been compromised, focusing on those with elevated privileges.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the breach.
- Implement enhanced logging policies to capture detailed process execution data, including command-line arguments and user context, to aid in future investigations.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats.
- Restore the affected system from a known good backup to ensure no malicious artifacts remain.
- Apply security patches and updates to the operating system and applications to mitigate known vulnerabilities.
- Conduct a post-incident review to identify gaps in security controls and update security policies and procedures to prevent recurrence."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1558"
name = "Steal or Forge Kerberos Tickets"
reference = "https://attack.mitre.org/techniques/T1558/"
[[rule.threat.technique.subtechnique]]
id = "T1558.003"
name = "Kerberoasting"
reference = "https://attack.mitre.org/techniques/T1558/003/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

