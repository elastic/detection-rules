[metadata]
creation_date = "2023/09/25"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the execution of commonly abused Windows utilities via a delayed Ping execution. This behavior is often
observed during malware installation and is consistent with an attacker attempting to evade detection.
"""
from = "now-9m"
index = ["logs-endpoint.events.process-*"]
language = "eql"
license = "Elastic License v2"
name = "Delayed Execution via Ping"
risk_score = 21
rule_id = "e00b8d49-632f-4dc6-94a5-76153a481915"
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Execution",
    "Tactic: Defense Evasion",
    "Data Source: Elastic Defend",
]
type = "eql"

query = '''
sequence by process.parent.entity_id with maxspan=1m
  [process where host.os.type == "windows" and event.action == "start" and process.name : "ping.exe" and
   process.args : "-n" and process.parent.name : "cmd.exe" and not user.id : "S-1-5-18"]
  [process where host.os.type == "windows" and event.action == "start" and
   process.parent.name : "cmd.exe" and
   (
        process.name : (
            "rundll32.exe", "powershell.exe",
            "mshta.exe", "msbuild.exe",
            "certutil.exe", "regsvr32.exe",
            "powershell.exe", "cscript.exe",
            "wscript.exe", "wmic.exe",
            "installutil.exe", "msxsl.exe",
            "Microsoft.Workflow.Compiler.exe",
            "ieexec.exe", "iexpress.exe",
            "RegAsm.exe", "installutil.exe",
            "RegSvcs.exe", "RegAsm.exe"
        ) or
        (process.executable : "?:\\Users\\*\\AppData\\*.exe" and not process.code_signature.trusted == true)
    ) and

    not process.args : ("?:\\Program Files\\*", "?:\\Program Files (x86)\\*") and
    not (process.name : ("openssl.exe", "httpcfg.exe", "certutil.exe") and process.parent.command_line : "*ScreenConnectConfigurator.cmd*") and
    not (process.pe.original_file_name : "DPInst.exe" and process.command_line : "driver\\DPInst_x64  /f ") and
    not (process.name : "powershell.exe" and process.args : "Write-Host ======*") and
    not (process.name : "wscript.exe" and process.args : "launchquiet_args.vbs" and process.parent.args : "?:\\Windows\\TempInst\\7z*") and
    not (process.name : "regsvr32.exe" and process.args : ("?:\\windows\\syswow64\\msxml?.dll", "msxml?.dll", "?:\\Windows\\SysWOW64\\mschrt20.ocx")) and 
    not (process.name : "wscript.exe" and
         process.working_directory :
                    ("?:\\Windows\\TempInst\\*",
                     "?:\\Users\\*\\AppData\\Local\\Temp\\BackupBootstrapper\\Logs\\",
                     "?:\\Users\\*\\AppData\\Local\\Temp\\QBTools\\"))
    ]
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Delayed Execution via Ping

Ping is a network utility used to test connectivity and measure response times. Adversaries exploit it for delayed execution by using it to introduce pauses in scripts, often to evade detection. The detection rule identifies suspicious use of ping with specific arguments, followed by execution of potentially malicious utilities, indicating an attempt to stealthily execute harmful payloads.

### Possible investigation steps

- Review the alert details to understand the context, including the specific process names and arguments involved, such as "ping.exe" with the "-n" argument and the subsequent execution of suspicious utilities like "rundll32.exe" or "powershell.exe".
- Examine the parent process information, particularly focusing on "cmd.exe", to determine how the ping command was initiated and whether it aligns with typical user behavior or automated scripts.
- Investigate the user account associated with the process execution, especially if the user ID is not "S-1-5-18", to assess whether the activity is expected for that user or indicative of compromised credentials.
- Check the process execution timeline to identify any patterns or sequences that suggest a coordinated attack, using the maxspan=1m parameter to focus on closely timed events.
- Utilize Osquery to gather additional context on the involved processes. For example, run the following query to list all processes executed by the same user within a short timeframe: `SELECT pid, name, path, cmdline, start_time FROM processes WHERE user = '<user_id>' AND start_time > datetime('now', '-5 minutes');`
- Analyze the command line arguments of the suspicious processes to identify any encoded or obfuscated commands that may indicate malicious intent.
- Investigate the file paths and code signatures of the executed processes, especially those in user directories like "?:\\\\Users\\\\*\\\\AppData\\\\*.exe", to determine if they are trusted or potentially malicious.
- Review the system's event logs for any additional indicators of compromise or related suspicious activity, such as failed login attempts or unusual network connections.
- Cross-reference the alert with known threat intelligence sources to identify if the observed behavior matches any known attack patterns or malware signatures.
- Document all findings and observations, including any anomalies or deviations from normal behavior, to support further analysis and potential escalation.

### False positive analysis

- Scheduled tasks or legitimate administrative scripts may use ping for delay purposes, leading to false positives. Users can handle this by identifying and excluding these specific scripts or tasks from the detection rule.
- Software installers or updaters might use ping to introduce delays during installation processes. Users should monitor and whitelist these known installers to prevent unnecessary alerts.
- Network troubleshooting tools or scripts executed by IT personnel could trigger the rule. It's advisable to create exceptions for these tools when used by trusted users or within specific environments.
- Automated testing environments might use ping to simulate network conditions, which could be mistaken for malicious activity. Users can exclude these environments or specific test scripts from the rule.
- Some legitimate applications might use ping as part of their normal operation, especially in network-heavy applications. Users should identify these applications and adjust the rule to exclude them based on their process signatures or paths.

### Response and remediation

- Isolate the affected system from the network to prevent further malicious activity and lateral movement.
- Conduct a thorough investigation of the affected system to identify any additional indicators of compromise, focusing on the processes and files executed after the ping command.
- Terminate any malicious processes identified during the investigation to stop ongoing threats.
- Remove or quarantine any malicious files or scripts found on the system to prevent re-execution.
- Review and analyze logs from the affected system and network devices to understand the scope and timeline of the attack, leveraging MITRE ATT&CK T1059 for context on command and scripting interpreter techniques.
- Escalate the incident to the security operations center (SOC) or incident response team if the threat appears to be part of a larger campaign or if sensitive data may have been compromised.
- Implement enhanced logging policies to capture detailed process execution and network activity, ensuring future incidents can be detected and analyzed more effectively.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats in the future.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are installed.
- Harden the system by disabling unnecessary services, applying least privilege principles, and ensuring that security configurations align with best practices to reduce the attack surface."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"

[[rule.threat.technique.subtechnique]]
id = "T1059.005"
name = "Visual Basic"
reference = "https://attack.mitre.org/techniques/T1059/005/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1216"
name = "System Script Proxy Execution"
reference = "https://attack.mitre.org/techniques/T1216/"

[[rule.threat.technique]]
id = "T1218"
name = "System Binary Proxy Execution"
reference = "https://attack.mitre.org/techniques/T1218/"
[[rule.threat.technique.subtechnique]]
id = "T1218.003"
name = "CMSTP"
reference = "https://attack.mitre.org/techniques/T1218/003/"

[[rule.threat.technique.subtechnique]]
id = "T1218.004"
name = "InstallUtil"
reference = "https://attack.mitre.org/techniques/T1218/004/"

[[rule.threat.technique.subtechnique]]
id = "T1218.005"
name = "Mshta"
reference = "https://attack.mitre.org/techniques/T1218/005/"

[[rule.threat.technique.subtechnique]]
id = "T1218.009"
name = "Regsvcs/Regasm"
reference = "https://attack.mitre.org/techniques/T1218/009/"

[[rule.threat.technique.subtechnique]]
id = "T1218.010"
name = "Regsvr32"
reference = "https://attack.mitre.org/techniques/T1218/010/"

[[rule.threat.technique.subtechnique]]
id = "T1218.011"
name = "Rundll32"
reference = "https://attack.mitre.org/techniques/T1218/011/"


[[rule.threat.technique]]
id = "T1220"
name = "XSL Script Processing"
reference = "https://attack.mitre.org/techniques/T1220/"

[[rule.threat.technique]]
id = "T1497"
name = "Virtualization/Sandbox Evasion"
reference = "https://attack.mitre.org/techniques/T1497/"
[[rule.threat.technique.subtechnique]]
id = "T1497.003"
name = "Time Based Evasion"
reference = "https://attack.mitre.org/techniques/T1497/003/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

