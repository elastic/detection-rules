[metadata]
creation_date = "2024/03/14"
integration = ["windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Identifies PowerShell scripts that can access and decrypt Veeam credentials stored in MSSQL databases. Attackers can use
Veeam Credentials to target backups as part of destructive operations such as Ransomware attacks.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-windows.powershell*"]
language = "kuery"
license = "Elastic License v2"
name = "PowerShell Script with Veeam Credential Access Capabilities"
references = [
    "https://forums.veeam.com/veeam-backup-replication-f2/recover-esxi-password-in-veeam-t34630.html",
    "https://www.crowdstrike.com/blog/anatomy-of-alpha-spider-ransomware/",
]
risk_score = 47
rule_id = "5c602cba-ae00-4488-845d-24de2b6d8055"
setup = """## Setup

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Administrative Templates >
Windows PowerShell >
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add "hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: PowerShell Logs",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and host.os.type:windows and
  powershell.file.script_block_text : (
    (
      "[dbo].[Credentials]" and
      ("Veeam" or "VeeamBackup")
    ) or
    "ProtectedStorage]::GetLocalString"
  )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating PowerShell Script with Veeam Credential Access Capabilities

PowerShell scripts can interact with Veeam's stored credentials in MSSQL databases, a feature intended for legitimate backup management. However, attackers exploit this to decrypt credentials, potentially targeting backups in ransomware attacks. The detection rule identifies suspicious script activity by monitoring for specific database interactions and decryption attempts, flagging potential credential access abuse.

### Possible investigation steps

- Review the alert details to understand the context, including the specific PowerShell script block text that triggered the alert, focusing on the presence of "[dbo].[Credentials]" and "ProtectedStorage]::GetLocalString".
- Examine the process execution details, such as the process ID, parent process, and user account under which the PowerShell script was executed, to identify any anomalies or unauthorized access.
- Check the event logs for any preceding or subsequent suspicious activities around the time of the alert, such as unusual login attempts or privilege escalations.
- Investigate the host from which the alert originated to determine if there are any other signs of compromise, such as unexpected network connections or changes in system configurations.
- Use Osquery to gather more information about the PowerShell script execution. For example, run the following query to list recent PowerShell script executions: `SELECT * FROM processes WHERE name = 'powershell.exe' AND cmdline LIKE '%[dbo].[Credentials]%' OR cmdline LIKE '%ProtectedStorage]::GetLocalString%';`
- Analyze the PowerShell script content if available, to understand its purpose and whether it includes any malicious or unauthorized actions.
- Correlate the alert with other security tools and logs, such as antivirus, endpoint detection and response (EDR), or network monitoring solutions, to gather additional context and evidence.
- Investigate the MSSQL database logs to identify any unauthorized access attempts or suspicious queries related to Veeam credentials.
- Check for any recent changes or updates to the Veeam backup configurations that could indicate tampering or unauthorized access.
- Consult with the database and backup administrators to verify if the access to Veeam credentials was legitimate or if it aligns with any recent administrative activities.

### False positive analysis

- Legitimate administrative tasks: System administrators may run PowerShell scripts that interact with Veeam credentials for routine backup management or maintenance tasks. These activities can trigger the detection rule but are non-threatening. Users can manage these by creating exceptions for known administrative scripts or specific user accounts that regularly perform these tasks.
- Scheduled backup operations: Automated scripts scheduled to run at specific intervals for backup verification or testing purposes might be flagged. To handle these, users can whitelist specific script names or hash values that are verified as part of regular operations.
- Security audits: Security teams may conduct audits that involve accessing Veeam credentials to ensure compliance and security posture. These activities can be excluded by identifying and allowing specific audit tools or scripts used by the security team.
- Development and testing environments: In environments where developers or testers are experimenting with backup solutions, similar script activities might occur. Users can exclude these environments from monitoring or set up specific rules that differentiate between production and non-production activities.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the source and scope of the compromise, focusing on PowerShell script execution and MSSQL database interactions.
- Review and analyze logs from the affected system and any associated network devices to trace the attacker's activities and identify any additional compromised systems.
- Change all Veeam-related credentials and any other potentially exposed credentials to prevent further unauthorized access.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the attack is part of a larger campaign.
- Implement enhanced logging and monitoring for PowerShell activities and MSSQL database access to detect similar threats in the future.
- Restore the affected system from a known good backup, ensuring that the backup is free from any malicious modifications.
- Apply security patches and updates to the operating system, Veeam software, and any other relevant applications to mitigate known vulnerabilities.
- Conduct a security review of the Veeam backup environment, ensuring that access controls and encryption settings are properly configured to prevent unauthorized access.
- Educate and train staff on recognizing and reporting suspicious activities, emphasizing the importance of adhering to security best practices."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

