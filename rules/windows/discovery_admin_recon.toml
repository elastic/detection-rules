[metadata]
creation_date = "2020/12/04"
maturity = "production"
updated_date = "2022/04/21"

[rule]
author = ["Elastic"]
description = """
Identifies instances of lower privilege accounts enumerating Administrator accounts or groups using built-in Windows
tools.
"""
from = "now-9m"
index = ["logs-endpoint.events.*", "winlogbeat-*", "logs-windows.*"]
language = "eql"
license = "Elastic License v2"
name = "Enumeration of Administrator Accounts"
note = """## Triage and analysis

### Investigating Enumeration of Administrator Accounts

After a successful initial compromise, attackers may try to gain situational awareness of the environment to plan their
next steps. This can happen by running commands to enumerate network resources, users, connections, files, and security
software installed.

This rule looks for the execution of the `net` and `wmic` utilities to enumerate administrator-related users or groups 
in both domain and local scope, this information can be used by attackers to decide the next steps of the attack, such
as mapping targets for credential compromise and other post-exploitation activities.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree).
- Identify the user account that performed the action and whether it usually performs this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors done using the account, such as commands executed, startup folder modifications, and
network connections.

### False positive analysis

- Discovery activities themselves are not inherently malicious if occurring in isolation. As long as the analyst did not
identify any suspicious activity related to the user or host, such alerts can be dismissed.

### Related rules

- AdFind Command Activity - eda499b8-a073-4e35-9733-22ec71f57f3a

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Quarantine the involved host to prevent further post-compromise behavior.
- Reset passwords for the user account and other potentially compromised accounts (email, services, CRMs, etc.).
- Determine the initial infection vector.

## Config

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
"""
risk_score = 21
rule_id = "871ea072-1b71-4def-b016-6278b505138d"
severity = "low"
tags = ["Elastic", "Host", "Windows", "Threat Detection", "Discovery"]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where event.type in ("start", "process_started") and
  (((process.name : "net.exe" or process.pe.original_file_name == "net.exe") or
    ((process.name : "net1.exe" or process.pe.original_file_name == "net1.exe") and
        not process.parent.name : "net.exe")) and
   process.args : ("group", "user", "localgroup") and
   process.args : ("admin", "Domain Admins", "Remote Desktop Users", "Enterprise Admins", "Organization Management") and
   not process.args : "/add")

   or

  ((process.name : "wmic.exe" or process.pe.original_file_name == "wmic.exe") and
     process.args : ("group", "useraccount"))
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1069"
name = "Permission Groups Discovery"
reference = "https://attack.mitre.org/techniques/T1069/"
[[rule.threat.technique.subtechnique]]
id = "T1069.002"
name = "Domain Groups"
reference = "https://attack.mitre.org/techniques/T1069/002/"


[[rule.threat.technique]]
id = "T1087"
name = "Account Discovery"
reference = "https://attack.mitre.org/techniques/T1087/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

