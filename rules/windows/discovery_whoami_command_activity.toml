[metadata]
creation_date = "2020/02/18"
maturity = "production"
updated_date = "2022/04/21"

[rule]
author = ["Elastic"]
description = """
Identifies use of whoami.exe which displays user, group, and privileges information for the user who is currently logged
on to the local system.
"""
false_positives = [
    """
    Some normal use of this program, at varying levels of frequency, may originate from scripts, automation tools and
    frameworks. Usage by non-engineers and ordinary users is unusual.
    """,
]
from = "now-9m"
index = ["winlogbeat-*", "logs-endpoint.events.*", "logs-windows.*"]
language = "eql"
license = "Elastic License v2"
name = "Whoami Process Activity"
note = """## Triage and analysis

### Investigating Whoami Process Activity

After a successful initial compromise, attackers may try to gain situational awareness of the environment to plan their
next steps. This can happen by running commands to enumerate network resources, users, connections, files, and security
software installed.

This rule looks for the execution of the `whoami` utility. Attackers commonly use this utility to measure their current
privileges, discover the current user, determine if a privilege escalation was successful, etc.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree).
- Identify the user account that performed the action and whether it usually performs this kind of action.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Investigate abnormal behaviors done using the account, such as commands executed, startup folder modifications, and
network connections.

### False positive analysis

- Discovery activities themselves are not inherently malicious if occurring in isolation. As long as the analyst did not
identify any suspicious activity related to the user or host, such alerts can be dismissed.

### Related rules

- Account Discovery Command via SYSTEM Account - 2856446a-34e6-435b-9fb5-f8f040bfa7ed

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Quarantine the involved host to prevent further post-compromise behavior.
- Reset passwords for the user account and other potentially compromised accounts (email, services, CRMs, etc.).
- Determine the initial infection vector.

## Config

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.
"""
risk_score = 21
rule_id = "ef862985-3f13-4262-a686-5f357bbb9bc2"
severity = "low"
tags = ["Elastic", "Host", "Windows", "Threat Detection", "Discovery"]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where event.type in ("start", "process_started") and process.name : "whoami.exe"
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1033"
name = "System Owner/User Discovery"
reference = "https://attack.mitre.org/techniques/T1033/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

