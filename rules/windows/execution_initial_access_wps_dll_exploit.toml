[metadata]
creation_date = "2024/08/29"
integration = ["endpoint", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Identifies the load of a remote library by the WPS Office promecefpluginhost.exe executable. This may indicate the successful 
exploitation of CVE-2024-7262 or CVE-2024-7263 via DLL hijack abusing the ksoqing custom protocol handler.
"""
from = "now-9m"
index = [ "logs-endpoint.events.library-*", "logs-windows.sysmon_operational-*"]
language = "eql"
license = "Elastic License v2"
name = "WPS Office Exploitation via DLL Hijack"
references = [
 "https://www.welivesecurity.com/en/eset-research/analysis-of-two-arbitrary-code-execution-vulnerabilities-affecting-wps-office/", 
 "https://mp.weixin.qq.com/s/F8hNyESBdKhwXkQPgtGpew"
 ]
risk_score = 73
rule_id = "ac6bc744-e82b-41ad-b58d-90654fa4ebfb"
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Initial Access",
    "Tactic: Execution",
    "Data Source: Elastic Defend",
    "Data Source: Sysmon"
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
any where host.os.type == "windows" and process.name : "promecefpluginhost.exe" and 
(
 (event.category == "library" and 
  ?dll.path : 
     ("?:\\Users\\*\\AppData\\Local\\Temp\\wps\\INetCache\\*", 
      "\\Device\\Mup\\**", "\\\\*")) or 

  ((event.category == "process" and event.action : "Image loaded*") and 
  ?file.path : 
     ("?:\\Users\\*\\AppData\\Local\\Temp\\wps\\INetCache\\*", 
      "\\Device\\Mup\\**", "\\\\*"))
)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating WPS Office Exploitation via DLL Hijack

DLL hijacking in WPS Office involves adversaries exploiting the ksoqing protocol handler to load malicious libraries via the promecefpluginhost.exe process. Attackers may leverage this to execute arbitrary code by placing a rogue DLL in specific directories or network paths. The detection rule identifies suspicious library loads and process actions, focusing on paths indicative of exploitation attempts, thus alerting analysts to potential threats.

### Possible investigation steps

- Review the alert details to confirm the presence of the `promecefpluginhost.exe` process and verify the suspicious DLL path matches the patterns specified in the detection rule.
- Check the event category to determine if the alert was triggered by a library load or a process action, as this will guide the focus of the investigation.
- Investigate the specific DLL path involved in the alert, especially if it matches `?:\\Users\\*\\AppData\\Local\\Temp\\wps\\INetCache\\*`, `\\Device\\Mup\\**`, or `\\\\*`, to identify any unauthorized or unexpected files.
- Use Osquery to list all DLLs loaded by `promecefpluginhost.exe` to identify any anomalies. Example query: `SELECT path FROM processes JOIN process_open_sockets ON processes.pid = process_open_sockets.pid WHERE name = 'promecefpluginhost.exe';`
- Examine the network connections of `promecefpluginhost.exe` to identify any unusual or suspicious external communications that may indicate data exfiltration or command-and-control activity.
- Correlate the alert with other security events or logs to identify any related activities or patterns, such as other processes or files accessed around the same time.
- Investigate the user account associated with the process execution to determine if it aligns with expected behavior or if it indicates potential compromise.
- Check for any recent changes or updates to WPS Office that might have introduced vulnerabilities or been exploited by attackers.
- Analyze the system for any other signs of compromise, such as unexpected registry changes, scheduled tasks, or startup items that could indicate persistence mechanisms.
- Review historical data to determine if similar alerts have been triggered in the past, which could indicate a recurring issue or ongoing attack campaign.

### False positive analysis

- Legitimate software updates or installations may trigger the rule if they temporarily load libraries from network paths or temporary directories, which are common behaviors for some applications.
- Network drives or shared folders accessed by WPS Office for legitimate purposes might be flagged, especially in environments where network resources are frequently used for document storage and collaboration.
- Users can manage these false positives by creating exceptions for known safe directories or network paths that are regularly accessed by WPS Office, ensuring these paths are documented and monitored for any changes in behavior.
- Regularly review and update the list of exceptions to accommodate new legitimate software or changes in network infrastructure, maintaining a balance between security and operational efficiency.
- Consider implementing additional context checks, such as verifying the digital signature of loaded libraries, to differentiate between legitimate and potentially malicious activities.

### Response and remediation

- Isolate the affected system from the network to prevent further exploitation and lateral movement.
- Conduct a thorough investigation to confirm the presence of malicious DLLs in the specified directories or network paths.
- Utilize endpoint detection and response (EDR) tools to analyze the behavior of the promecefpluginhost.exe process and identify any additional malicious activities.
- Remove any identified malicious DLLs and associated files from the system to prevent further execution.
- Apply patches or updates to WPS Office to address vulnerabilities CVE-2024-7262 and CVE-2024-7263, ensuring the software is up to date.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if other systems are affected.
- Implement enhanced logging policies to capture detailed process and library load events, focusing on suspicious paths and activities.
- Integrate threat intelligence feeds to improve detection capabilities and stay informed about emerging threats related to DLL hijacking.
- Restore the system to its operational state by verifying the integrity of system files and ensuring no unauthorized changes have been made.
- Harden the system by restricting write permissions to critical directories and implementing application whitelisting to prevent unauthorized DLL loads."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1203"
name = "Exploitation for Client Execution"
reference = "https://attack.mitre.org/techniques/T1203/"


[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1189"
name = "Drive-by Compromise"
reference = "https://attack.mitre.org/techniques/T1189/"


[rule.threat.tactic]
id = "TA0001"
name = "Initial Access"
reference = "https://attack.mitre.org/tactics/TA0001/"
