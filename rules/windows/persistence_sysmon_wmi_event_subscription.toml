[metadata]
creation_date = "2023/02/02"
integration = ["windows", "endpoint"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.15.0"
min_stack_comments = "Elastic Defend WMI events were added in Elastic Defend 8.15.0."

[rule]
author = ["Elastic"]
description = """
Detects the creation of a WMI Event Subscription. Attackers can abuse this mechanism for persistence or to elevate to
SYSTEM privileges.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-windows.sysmon_operational-*", "logs-endpoint.events.api-*"]
language = "eql"
license = "Elastic License v2"
name = "Suspicious WMI Event Subscription Created"
references = [
    "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf",
    "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96",
]
risk_score = 47
rule_id = "e72f87d0-a70e-4f8d-8443-a6407bc34643"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Persistence",
    "Data Source: Sysmon",
    "Data Source: Elastic Defend"
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
any where 
 (
   (event.dataset == "windows.sysmon_operational" and event.code == "21" and
    winlog.event_data.Operation : "Created" and winlog.event_data.Consumer : ("*subscription:CommandLineEventConsumer*", "*subscription:ActiveScriptEventConsumer*")) or 

   (event.dataset == "endpoint.events.api" and event.provider == "Microsoft-Windows-WMI-Activity" and process.Ext.api.name == "IWbemServices::PutInstance" and 
    process.Ext.api.parameters.consumer_type in ("ActiveScriptEventConsumer", "CommandLineEventConsumer"))
 )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Suspicious WMI Event Subscription Created

Windows Management Instrumentation (WMI) is a powerful framework for managing data and operations on Windows systems. It allows for event subscriptions that can trigger actions based on system events. Adversaries exploit this by creating malicious event subscriptions to maintain persistence or execute code with elevated privileges. The detection rule identifies such abuse by monitoring specific event creation patterns linked to suspicious consumer types, indicating potential malicious activity.

### Possible investigation steps

- Review the alert details to confirm the presence of event code 21 from the "windows.sysmon_operational" dataset, indicating a WMI event subscription creation.
- Examine the `winlog.event_data.Operation` field to ensure it specifies "Created," confirming the creation of a new event subscription.
- Analyze the `winlog.event_data.Consumer` field to identify if it matches suspicious patterns like "*subscription:CommandLineEventConsumer*" or "*subscription:ActiveScriptEventConsumer*," which are commonly used in malicious activities.
- Check the timestamp of the event to determine when the suspicious WMI event subscription was created and correlate it with other events or activities on the system around the same time.
- Investigate the user account associated with the event to determine if it has the necessary privileges and if the activity aligns with the user's typical behavior.
- Use Osquery to gather more information about the WMI subscriptions on the affected system. For example, run the query: `SELECT * FROM wmi_event_subscriptions WHERE consumer LIKE '%CommandLineEventConsumer%' OR consumer LIKE '%ActiveScriptEventConsumer%';` to identify all similar subscriptions.
- Cross-reference the system's process creation logs to identify any processes that were spawned as a result of the WMI event subscription, focusing on unusual or unexpected processes.
- Review the system's security logs for any signs of privilege escalation or lateral movement attempts that might be associated with the WMI event subscription.
- Investigate any network connections initiated by the system around the time of the event to identify potential communication with external or suspicious IP addresses.
- Consult threat intelligence sources to determine if the identified WMI event subscription patterns are associated with known malware or threat actor tactics.

### False positive analysis

- Legitimate administrative tools and scripts may create WMI event subscriptions for system monitoring or automation purposes, which can trigger this detection rule. 
- Software installations or updates might use WMI event subscriptions as part of their setup or configuration processes, leading to benign alerts.
- System management software, such as configuration management tools or monitoring solutions, often utilize WMI event subscriptions to track system changes or performance metrics.
- To manage these false positives, users can create exceptions for known and trusted applications or scripts by identifying their specific event patterns and excluding them from the detection rule.
- Regularly review and update the list of exceptions to ensure that only verified non-threatening behaviors are excluded, maintaining the effectiveness of the detection rule against genuine threats.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further malicious activity and lateral movement.
- Use endpoint detection and response (EDR) tools to collect and analyze forensic data from the affected system, focusing on the WMI event subscription details.
- Identify and terminate any malicious processes or scripts associated with the suspicious WMI event subscription.
- Review and remove any unauthorized WMI event subscriptions, particularly those linked to CommandLineEventConsumer or ActiveScriptEventConsumer.
- Conduct a thorough investigation to determine if the attacker has established additional persistence mechanisms or compromised other systems.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to assess the scope of the breach.
- Implement enhanced logging policies to capture detailed WMI activity and integrate with a security information and event management (SIEM) system for real-time monitoring.
- Restore the system to a known good state using backups or reimaging, ensuring all malicious artifacts are removed.
- Apply security patches and updates to the operating system and applications to mitigate known vulnerabilities.
- Strengthen system hardening measures by disabling unnecessary WMI features and enforcing least privilege access controls to reduce the attack surface."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1546"
name = "Event Triggered Execution"
reference = "https://attack.mitre.org/techniques/T1546/"
[[rule.threat.technique.subtechnique]]
id = "T1546.003"
name = "Windows Management Instrumentation Event Subscription"
reference = "https://attack.mitre.org/techniques/T1546/003/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

