[metadata]
creation_date = "2021/01/19"
integration = ["endpoint", "windows", "m365_defender", "sentinel_one_cloud_funnel", "system", "crowdstrike"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected
applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for
saved usernames and passwords. This may also be performed in preparation of lateral movement.
"""
from = "now-9m"
index = [
    "winlogbeat-*",
    "logs-endpoint.events.process-*",
    "logs-windows.forwarded*",
    "logs-windows.sysmon_operational-*",
    "endgame-*",
    "logs-system.security*",
    "logs-m365_defender.event-*",
    "logs-sentinel_one_cloud_funnel.*",
    "logs-crowdstrike.fdr*",
]
language = "eql"
license = "Elastic License v2"
name = "Searching for Saved Credentials via VaultCmd"
references = [
    "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16",
    "https://web.archive.org/web/20201004080456/https://rastamouse.me/blog/rdp-jump-boxes/",
    "https://www.elastic.co/security-labs/detect-credential-access",
]
risk_score = 47
rule_id = "be8afaed-4bcd-4e0a-b5f9-5562003dde81"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: System",
    "Data Source: Microsoft Defender for Endpoint",
    "Data Source: Sysmon",
    "Data Source: SentinelOne",
    "Data Source: Crowdstrike",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  (?process.pe.original_file_name:"vaultcmd.exe" or process.name:"vaultcmd.exe") and
  process.args:"/list*"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Searching for Saved Credentials via VaultCmd

Windows Credential Manager is a tool for managing saved credentials, such as usernames and passwords, for various services. Adversaries may exploit this by using VaultCmd to list or extract these credentials, potentially facilitating unauthorized access or lateral movement within a network. The detection rule identifies such activities by monitoring for the execution of VaultCmd with specific arguments indicative of credential listing attempts.

### Possible investigation steps

- Review the alert details to confirm the presence of `vaultcmd.exe` in the `process.name` or `process.pe.original_file_name` fields, and verify the use of the `/list*` argument in `process.args`.
- Check the `event.type` field to ensure the process start event is accurately captured, indicating the execution of VaultCmd.
- Identify the user account associated with the process execution by examining the `user.name` or `process.user.name` fields to determine if it aligns with expected behavior or if it is suspicious.
- Investigate the `host.name` or `host.hostname` fields to determine the machine where the activity occurred and assess if it is a high-value target or a critical system.
- Examine the `process.parent.name` and `process.parent.pid` fields to understand the parent process that initiated VaultCmd, which may provide context on how the execution was triggered.
- Utilize Osquery to gather additional context on the process by running a query such as: `SELECT * FROM processes WHERE name = 'vaultcmd.exe';` to retrieve detailed information about the process execution.
- Check for any recent logins or unusual activity associated with the identified user account by reviewing authentication logs or security events.
- Investigate any network connections established by the host during the time of the alert to identify potential lateral movement or data exfiltration attempts.
- Review historical data for any previous instances of VaultCmd execution on the same host or by the same user to identify patterns or repeated attempts.
- Correlate the findings with other security alerts or incidents to determine if this activity is part of a larger attack campaign or isolated event.

### False positive analysis

- Routine administrative tasks: System administrators may use VaultCmd for legitimate purposes, such as managing user credentials or performing audits. These activities can trigger the detection rule but are not malicious.
- Automated scripts: Some organizations may have automated scripts that utilize VaultCmd to manage credentials as part of their regular maintenance or security protocols. These scripts can generate alerts that are false positives.
- Credential management software: Third-party credential management tools might invoke VaultCmd as part of their operations, leading to benign alerts.
- User training and awareness programs: Security teams might use VaultCmd in training exercises to demonstrate credential management, which could be mistakenly flagged as suspicious activity.
- To manage these false positives, users can create exceptions for known administrative accounts or scripts that regularly use VaultCmd. This can be done by adding specific user accounts or process hashes to an allowlist, ensuring that only unexpected or unauthorized use of VaultCmd triggers alerts.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Conduct a thorough investigation to determine the scope of the compromise, focusing on identifying any additional systems that may have been accessed using the compromised credentials.
- Review the event logs and security logs on the affected system to gather evidence of the VaultCmd execution and any subsequent suspicious activities.
- Change all potentially compromised credentials, including those stored in the Windows Credential Manager, and enforce a password reset policy for affected users.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the attack is part of a larger campaign.
- Implement enhanced logging policies to capture detailed process execution data, including command-line arguments, to improve detection of similar activities in the future.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to provide real-time alerts and context for suspicious activities related to credential access.
- Restore the affected system to its operational state by reimaging the system or applying a clean backup, ensuring that all malicious artifacts are removed.
- Apply security hardening measures, such as disabling unnecessary services, applying the principle of least privilege, and ensuring all systems are up to date with security patches.
- Conduct a post-incident review to identify gaps in the current security posture and update incident response plans and security policies accordingly."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"
[[rule.threat.technique.subtechnique]]
id = "T1555.004"
name = "Windows Credential Manager"
reference = "https://attack.mitre.org/techniques/T1555/004/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

