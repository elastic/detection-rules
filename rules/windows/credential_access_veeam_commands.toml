[metadata]
creation_date = "2024/03/14"
integration = ["windows", "endpoint", "system", "m365_defender", "sentinel_one_cloud_funnel", "crowdstrike"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Identifies commands that can access and decrypt Veeam credentials stored in MSSQL databases. Attackers can use Veeam
Credentials to target backups as part of destructive operations such as Ransomware attacks.
"""
from = "now-9m"
index = [
    "winlogbeat-*",
    "logs-endpoint.events.process-*",
    "logs-windows.forwarded*",
    "logs-windows.sysmon_operational-*",
    "endgame-*",
    "logs-system.security*",
    "logs-m365_defender.event-*",
    "logs-sentinel_one_cloud_funnel.*",
    "logs-crowdstrike.fdr*",
]
language = "eql"
license = "Elastic License v2"
name = "Potential Veeam Credential Access Command"
references = ["https://thedfirreport.com/2021/12/13/diavol-ransomware/"]
risk_score = 47
rule_id = "b661f86d-1c23-4ce7-a59e-2edbdba28247"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Tactic: Credential Access",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: System",
    "Data Source: Microsoft Defender for Endpoint",
    "Data Source: Sysmon",
    "Data Source: SentinelOne",
    "Data Source: Crowdstrike",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
  (
    (process.name : "sqlcmd.exe" or ?process.pe.original_file_name : "sqlcmd.exe") or
    process.args : ("Invoke-Sqlcmd", "Invoke-SqlExecute", "Invoke-DbaQuery", "Invoke-SqlQuery")
  ) and
  process.args : "*[VeeamBackup].[dbo].[Credentials]*"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Veeam Credential Access Command

Veeam Backup & Replication software stores credentials in MSSQL databases to facilitate backup operations. Adversaries may exploit this by executing specific SQL commands to access and decrypt these credentials, potentially leading to unauthorized access and data destruction, such as in ransomware attacks. The detection rule identifies suspicious processes and arguments indicative of such credential access attempts, focusing on SQL command-line utilities and PowerShell cmdlets that interact with Veeam's credential storage.

### Possible investigation steps

- Review the alert details to confirm the presence of suspicious processes such as `sqlcmd.exe` or PowerShell cmdlets like `Invoke-Sqlcmd`, `Invoke-SqlExecute`, `Invoke-DbaQuery`, or `Invoke-SqlQuery` in the process arguments.
- Verify the process execution context by checking the user account under which the suspicious process was executed to determine if it aligns with expected administrative or service accounts.
- Examine the command line arguments of the flagged process to identify any references to the `[VeeamBackup].[dbo].[Credentials]` table, which may indicate an attempt to access stored credentials.
- Check the process creation time and correlate it with any other suspicious activities or alerts around the same timeframe to identify potential lateral movement or privilege escalation attempts.
- Investigate the parent process of the suspicious command to determine if it was spawned by a legitimate application or a potentially malicious script or executable.
- Utilize Osquery to gather additional context on the host by running a query such as: `SELECT * FROM processes WHERE name = 'sqlcmd.exe' OR name LIKE 'powershell%' AND cmdline LIKE '%[VeeamBackup].[dbo].[Credentials]%';` to identify other instances of similar activity.
- Review recent login events and access logs for the database server to identify any unauthorized or unusual access patterns that may correlate with the alert.
- Analyze network traffic logs to detect any data exfiltration attempts or connections to known malicious IP addresses following the execution of the suspicious process.
- Check for any recent changes or anomalies in the Veeam Backup & Replication configuration or backup jobs that could indicate tampering or unauthorized access.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors targeting Veeam credentials, and assess if the observed activity matches any known indicators of compromise.

### False positive analysis

- Routine administrative tasks: Legitimate IT administrators may use SQL command-line utilities or PowerShell cmdlets to manage Veeam Backup & Replication configurations, leading to benign alerts. To manage these, users can create exceptions for known administrator accounts or specific scripts that are regularly used for maintenance.
- Automated backup scripts: Organizations might have automated scripts that interact with Veeam's credential storage for backup verification or testing purposes. These scripts can be whitelisted by identifying their unique process names or arguments to prevent false positives.
- Monitoring and auditing tools: Security or compliance tools that perform regular checks on database credentials might trigger this rule. Users can exclude these tools by specifying their process names or paths in the detection rule exceptions.
- Development and testing environments: In non-production environments, developers might frequently access Veeam credentials for testing purposes. Users can adjust the rule to exclude specific hostnames or IP addresses associated with these environments to reduce noise.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to confirm the presence of unauthorized SQL command execution targeting Veeam credentials, using logs and forensic tools.
- Review and analyze recent access logs for unusual activity, focusing on SQL command-line utilities and PowerShell cmdlets interacting with Veeam's credential storage.
- Change all potentially compromised credentials stored in the Veeam Backup & Replication system and any other systems where these credentials might have been reused.
- Restore affected systems from the most recent clean backup to ensure no malicious changes persist.
- Implement enhanced logging policies to capture detailed process execution and command-line arguments for future investigations.
- Integrate security solutions with SIEM systems to improve detection and correlation of suspicious activities related to credential access.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Apply security patches and updates to Veeam Backup & Replication software and underlying systems to mitigate known vulnerabilities.
- Conduct a security review and harden the environment by implementing least privilege access controls, network segmentation, and regular security audits."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

