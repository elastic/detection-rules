[metadata]
creation_date = "2020/08/24"
integration = ["endpoint", "windows", "sentinel_one_cloud_funnel", "m365_defender"]
maturity = "production"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."
min_stack_version = "8.14.0"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
A suspicious WerFault child process was detected, which may indicate an attempt to run via the SilentProcessExit
registry key manipulation. Verify process details such as command line, network connections and file writes.
"""
false_positives = ["Custom Windows error reporting debugger or applications restarted by WerFault after a crash."]
from = "now-9m"
index = [
    "winlogbeat-*",
    "logs-endpoint.events.process-*",
    "logs-windows.sysmon_operational-*",
    "endgame-*",
    "logs-sentinel_one_cloud_funnel.*",
    "logs-m365_defender.event-*"
  ]
language = "eql"
license = "Elastic License v2"
name = "Suspicious WerFault Child Process"
references = [
    "https://www.hexacorn.com/blog/2019/09/19/silentprocessexit-quick-look-under-the-hood/",
    "https://www.hexacorn.com/blog/2019/09/20/werfault-command-line-switches-v0-1/",
    "https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Persistence/persistence_SilentProcessExit_ImageHijack_sysmon_13_1.evtx",
    "http://web.archive.org/web/20230530011556/https://blog.menasec.net/2021/01/",
]
risk_score = 47
rule_id = "ac5012b8-8da8-440b-aaaf-aedafdea2dff"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Tactic: Persistence",
    "Tactic: Privilege Escalation",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: Microsoft Defender for Endpoint",
    "Data Source: Sysmon",
    "Data Source: SentinelOne",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and

  process.parent.name : "WerFault.exe" and

  /* args -s and -t used to execute a process via SilentProcessExit mechanism */
  (process.parent.args : "-s" and process.parent.args : "-t" and process.parent.args : "-c") and

  not process.executable : ("?:\\Windows\\SysWOW64\\Initcrypt.exe", "?:\\Program Files (x86)\\Heimdal\\Heimdal.Guard.exe")
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Suspicious WerFault Child Process

WerFault.exe is a Windows Error Reporting tool that handles application crashes. Adversaries may exploit it by manipulating the SilentProcessExit registry key to stealthily execute malicious processes. The detection rule identifies unusual child processes of WerFault.exe, focusing on specific command-line arguments indicative of this abuse, while excluding known legitimate executables, thus highlighting potential masquerading attempts.

### Possible investigation steps

- Review the command line arguments of the suspicious WerFault child process to confirm the presence of "-s", "-t", and "-c" flags, which are indicative of SilentProcessExit abuse.
- Examine the parent process details, specifically WerFault.exe, to verify its legitimacy and check for any anomalies in its execution context.
- Investigate the process executable path to ensure it is not one of the known legitimate executables excluded in the detection rule, such as "?:\\\\Windows\\\\SysWOW64\\\\Initcrypt.exe" or "?:\\\\Program Files (x86)\\\\Heimdal\\\\Heimdal.Guard.exe".
- Analyze network connections initiated by the suspicious process to identify any unusual or unauthorized external communications.
- Check for any file writes or modifications made by the suspicious process to detect potential data exfiltration or tampering activities.
- Utilize Osquery to gather additional context about the process. For example, run the following query to list all child processes of WerFault.exe: `SELECT pid, name, path, cmdline FROM processes WHERE parent = (SELECT pid FROM processes WHERE name = 'WerFault.exe');`
- Correlate the process start event with other security logs to identify any related activities or patterns that might indicate a broader attack.
- Investigate the user account under which the suspicious process was executed to determine if it has been compromised or is being misused.
- Review recent changes to the registry, particularly the SilentProcessExit key, to identify unauthorized modifications that could facilitate process masquerading.
- Cross-reference the suspicious process with threat intelligence sources to determine if it matches any known malicious signatures or behaviors.

### False positive analysis

- Known false positives for the Suspicious WerFault Child Process rule may include legitimate software that uses the SilentProcessExit mechanism for valid purposes, such as certain system utilities or third-party applications that are not widely recognized.
- Users can handle these false positives by creating exceptions for specific executables that are known to be safe and frequently trigger the rule. This can be done by adding these executables to the exclusion list in the detection rule.
- It is important to verify the legitimacy of the process by checking the digital signature of the executable and ensuring it matches the expected vendor.
- Regularly review and update the exclusion list to accommodate new legitimate software that may be introduced into the environment, while ensuring that no malicious processes are inadvertently excluded.
- Consider implementing additional monitoring for excluded processes to ensure they do not exhibit other suspicious behaviors, such as unexpected network connections or file modifications, which could indicate a compromise.

### Response and remediation

- Isolate the affected system from the network to prevent further malicious activity and lateral movement.
- Investigate the suspicious WerFault child process by reviewing the command line arguments, network connections, and file writes to determine the scope and impact of the incident.
- Terminate any malicious processes identified during the investigation to stop ongoing threats.
- Review and analyze the SilentProcessExit registry key for unauthorized modifications and revert any changes to their default state.
- Conduct a thorough scan of the system using updated antivirus and anti-malware tools to identify and remove any additional threats.
- Escalate the incident to the security operations team if the investigation reveals a broader compromise or if assistance is needed for further analysis.
- Implement enhanced logging policies to capture detailed process execution and registry changes for future investigations.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to improve detection and response capabilities.
- Restore the system to its operational state by applying the latest security patches and updates, and ensure all security configurations are correctly set.
- Harden the system by disabling unnecessary services, applying least privilege principles, and regularly reviewing security policies to prevent similar incidents in the future."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1036"
name = "Masquerading"
reference = "https://attack.mitre.org/techniques/T1036/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1546"
name = "Event Triggered Execution"
reference = "https://attack.mitre.org/techniques/T1546/"
[[rule.threat.technique.subtechnique]]
id = "T1546.012"
name = "Image File Execution Options Injection"
reference = "https://attack.mitre.org/techniques/T1546/012/"



[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"



[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1546"
name = "Event Triggered Execution"
reference = "https://attack.mitre.org/techniques/T1546/"
[[rule.threat.technique.subtechnique]]
id = "T1546.012"
name = "Image File Execution Options Injection"
reference = "https://attack.mitre.org/techniques/T1546/012/"



[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"

