[metadata]
creation_date = "2024/03/14"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies potential credential decrypt operations by PowerShell or unsigned processes using the Veeam.Backup.Common.dll
library. Attackers can use Veeam Credentials to target backups as part of destructive operations such as Ransomware
attacks.
"""
from = "now-9m"
index = ["logs-endpoint.events.library-*"]
language = "eql"
license = "Elastic License v2"
name = "Veeam Backup Library Loaded by Unusual Process"
risk_score = 47
rule_id = "aaab30ec-b004-4191-95e1-4a14387ef6a6"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
library where host.os.type == "windows" and event.action == "load" and
  (dll.name : "Veeam.Backup.Common.dll" or dll.pe.original_file_name : "Veeam.Backup.Common.dll") and
  (
    process.code_signature.trusted == false or
    process.code_signature.exists == false or
    process.name : ("powershell.exe", "pwsh.exe", "powershell_ise.exe")
  )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Veeam Backup Library Loaded by Unusual Process

Veeam Backup software is crucial for data protection, managing backups, and ensuring data recovery. However, attackers may exploit its credential management by loading the Veeam.Backup.Common.dll library through PowerShell or untrusted processes to decrypt credentials, potentially leading to data breaches or ransomware attacks. The detection rule identifies such anomalies by monitoring for the library's loading by suspicious processes, focusing on untrusted or unsigned code signatures and PowerShell activity.

### Possible investigation steps

- Review the alert details to confirm the presence of the Veeam.Backup.Common.dll library loaded by an unusual process, focusing on the process name and code signature status.
- Verify the process code signature by checking if it is trusted or exists, and identify if the process is PowerShell-related (e.g., powershell.exe, pwsh.exe, powershell_ise.exe).
- Gather additional context by examining the parent process of the suspicious activity to understand how the process was initiated.
- Check the user account associated with the process to determine if it aligns with expected usage patterns or if it indicates potential compromise.
- Investigate recent PowerShell command history on the host to identify any suspicious or unauthorized scripts that may have been executed.
- Use Osquery to list all processes that have recently loaded the Veeam.Backup.Common.dll library with the following query: `SELECT pid, name, path FROM processes WHERE path LIKE '%Veeam.Backup.Common.dll%';`
- Analyze network connections from the host to identify any unusual outbound connections that may suggest data exfiltration or communication with a command and control server.
- Review recent system and security logs for any additional indicators of compromise or related suspicious activities around the time of the alert.
- Check for any recent changes to Veeam Backup configurations or settings that could indicate tampering or unauthorized access.
- Correlate the findings with other security alerts or incidents to determine if this activity is part of a broader attack campaign.

### False positive analysis

- Legitimate administrative scripts or automation tools may load the Veeam.Backup.Common.dll library using PowerShell for routine backup management tasks, leading to false positives. Users can handle these by creating exceptions for known scripts or tools that are verified and regularly used by the IT department.
- Some third-party backup management solutions might integrate with Veeam and load the library through unsigned processes. To manage these, users should verify the legitimacy of the third-party software and add it to an allowlist if deemed safe.
- During software updates or maintenance, Veeam's own processes might temporarily appear unsigned or untrusted, triggering alerts. Users should monitor the timing of these alerts and correlate them with scheduled maintenance activities, excluding them if they match.
- In environments where PowerShell is heavily used for legitimate administrative tasks, frequent alerts may occur. Users can reduce noise by implementing strict code-signing policies and only allowing signed scripts to execute, thereby minimizing the risk of false positives.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the source of the anomaly, focusing on the processes that loaded the Veeam.Backup.Common.dll library.
- Review PowerShell logs and any unsigned process activity to determine if there are any unauthorized or suspicious commands executed.
- Verify the integrity of Veeam Backup credentials and change them if any compromise is suspected.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging policies to capture detailed process execution and DLL loading events for future investigations.
- Integrate security tools with SIEM solutions to automate the detection of similar threats and improve response times.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are installed.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans accordingly.
- Implement hardening measures such as restricting PowerShell execution policies, enforcing code signing, and regularly auditing privileged accounts."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.001"
name = "PowerShell"
reference = "https://attack.mitre.org/techniques/T1059/001/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

