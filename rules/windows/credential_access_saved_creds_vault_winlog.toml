[metadata]
creation_date = "2022/08/30"
integration = ["system", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected
applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for
saved usernames and passwords. This may also be performed in preparation of lateral movement.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-system.*", "logs-windows.*"]
language = "eql"
license = "Elastic License v2"
name = "Multiple Vault Web Credentials Read"
references = [
    "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=5382",
    "https://www.elastic.co/security-labs/detect-credential-access",
]
risk_score = 47
rule_id = "44fc462c-1159-4fa8-b1b7-9b6296ab4f96"
setup = """## Setup

If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,
events will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.
Hence for this rule to work effectively, users will need to add a custom ingest pipeline to populate
`event.ingested` to @timestamp.
For more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html
"""
severity = "medium"
tags = ["Domain: Endpoint", "OS: Windows", "Use Case: Threat Detection", "Tactic: Credential Access", "Data Source: System"]
type = "eql"

query = '''
sequence by winlog.computer_name, winlog.process.pid with maxspan=1s

 /* 2 consecutive vault reads from same pid for web creds */

 [any where event.code : "5382" and
  (winlog.event_data.SchemaFriendlyName : "Windows Web Password Credential" and winlog.event_data.Resource : "http*") and
  not winlog.event_data.SubjectLogonId : "0x3e7" and 
  not winlog.event_data.Resource : "http://localhost/"]

 [any where event.code : "5382" and
  (winlog.event_data.SchemaFriendlyName : "Windows Web Password Credential" and winlog.event_data.Resource : "http*") and
  not winlog.event_data.SubjectLogonId : "0x3e7" and 
  not winlog.event_data.Resource : "http://localhost/"]
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Multiple Vault Web Credentials Read

Windows Credential Manager stores credentials for web logins, apps, and networks, simplifying user access. However, adversaries can exploit this by extracting stored credentials, potentially facilitating lateral movement within a network. The detection rule identifies suspicious activity by monitoring consecutive credential access events from the same process, excluding benign actions like local or system account access, thus highlighting potential credential dumping attempts.

### Possible investigation steps

- Review the alert details to confirm the presence of two consecutive vault read events with event code "5382" from the same process ID (winlog.process.pid) within a 1-second span.
- Verify the winlog.computer_name to identify the affected system and determine if it is a high-value target or contains sensitive information.
- Check the winlog.event_data.SchemaFriendlyName field to ensure the events are related to "Windows Web Password Credential" and not another type of credential.
- Examine the winlog.event_data.Resource field to identify the specific web resources accessed, ensuring they are not benign resources like "http://localhost/".
- Investigate the winlog.event_data.SubjectLogonId to determine the user context under which the process is running, ensuring it is not the local system account "0x3e7".
- Use Osquery to gather additional context about the process by running a query such as: `SELECT * FROM processes WHERE pid = <suspicious_pid>;` to gather details like the process path, command line arguments, and parent process.
- Cross-reference the suspicious process with recent login events to identify any unusual or unauthorized logins around the time of the alert.
- Check for any recent changes or installations on the affected system that could explain the behavior, such as new software or updates.
- Review network logs to identify any unusual outbound connections from the affected system that could indicate data exfiltration.
- Correlate the findings with other security alerts or logs to determine if this activity is part of a larger attack pattern or campaign.

### False positive analysis

- Routine system processes or legitimate applications may trigger the rule if they frequently access web credentials for normal operations, such as automated scripts or background services that require web authentication.
- Scheduled tasks or maintenance scripts that access web credentials for updates or data synchronization might be misidentified as suspicious activity.
- Users can manage these false positives by creating exceptions for known benign processes or specific logon IDs that are verified to perform legitimate credential access.
- Implementing a whitelist of trusted applications or processes that regularly access web credentials can help reduce noise and focus on truly suspicious activities.
- Monitoring the frequency and context of credential access events can aid in distinguishing between legitimate and potentially malicious activities, allowing for more informed exception handling.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further lateral movement by the adversary.
- Conduct a thorough investigation to identify the process and user account associated with the suspicious credential access events.
- Review the system's event logs to identify any other unusual activities or patterns that may indicate further compromise.
- Change all potentially compromised credentials, especially those stored in the Windows Credential Manager, and enforce a password reset policy for affected users.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the breach.
- Implement enhanced logging policies to capture detailed credential access events and integrate with a security information and event management (SIEM) system for real-time monitoring.
- Restore the system to its operational state by applying security patches, updating antivirus definitions, and ensuring all software is up to date.
- Conduct a security audit of the affected system and network to identify and remediate any vulnerabilities that may have been exploited.
- Educate users on secure credential management practices and the importance of reporting suspicious activities.
- Implement hardening measures such as disabling unnecessary services, applying the principle of least privilege, and using multi-factor authentication to protect sensitive accounts."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"

[[rule.threat.technique]]
id = "T1555"
name = "Credentials from Password Stores"
reference = "https://attack.mitre.org/techniques/T1555/"
[[rule.threat.technique.subtechnique]]
id = "T1555.004"
name = "Windows Credential Manager"
reference = "https://attack.mitre.org/techniques/T1555/004/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

