[metadata]
creation_date = "2022/08/28"
integration = ["endpoint", "windows", "m365_defender"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Identifies the enable of the full user-mode dumps feature system-wide. This feature allows Windows Error Reporting (WER)
to collect data after an application crashes. This setting is a requirement for the LSASS Shtinkering attack, which
fakes the communication of a crash on LSASS, generating a dump of the process memory, which gives the attacker access to
the credentials present on the system without having to bring malware to the system. This setting is not enabled by
default, and applications must create their registry subkeys to hold settings that enable them to collect dumps.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-endpoint.events.registry-*", "logs-windows.sysmon_operational-*", "endgame-*", "logs-m365_defender.event-*"]
language = "eql"
license = "Elastic License v2"
name = "Full User-Mode Dumps Enabled System-Wide"
references = [
    "https://docs.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps",
    "https://github.com/deepinstinct/Lsass-Shtinkering",
    "https://media.defcon.org/DEF%20CON%2030/DEF%20CON%2030%20presentations/Asaf%20Gilboa%20-%20LSASS%20Shtinkering%20Abusing%20Windows%20Error%20Reporting%20to%20Dump%20LSASS.pdf",
]
risk_score = 47
rule_id = "220be143-5c67-4fdb-b6ce-dd6826d024fd"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
    "Data Source: Sysmon",
    "Data Source: Microsoft Defender for Endpoint",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
registry where host.os.type == "windows" and
    registry.path : (
        "HKLM\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType",
        "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType"
    ) and
    registry.data.strings : ("2", "0x00000002") and
    not (process.executable : "?:\\Windows\\system32\\svchost.exe" and user.id : ("S-1-5-18", "S-1-5-19", "S-1-5-20"))
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Full User-Mode Dumps Enabled System-Wide

Full user-mode dumps are a diagnostic feature in Windows that captures detailed information about application crashes, aiding in troubleshooting. However, attackers can exploit this by enabling dumps system-wide to capture sensitive data, such as credentials, from processes like LSASS. The detection rule identifies unauthorized registry changes that enable this feature, excluding legitimate system processes, to flag potential credential dumping activities.

### Possible investigation steps

- Verify the registry path and data values by checking if the registry key `HKLM\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType` is set to "2" or "0x00000002", which indicates full user-mode dumps are enabled.
- Identify the process that made the registry change by reviewing recent logs for any process activity related to registry modifications at the specified path.
- Check for any recent application crashes or error reports that might have triggered the creation of a dump file, focusing on processes that handle sensitive data like LSASS.
- Investigate the user account associated with the registry change by examining the `user.id` field to determine if it matches any known administrative or service accounts.
- Review the process executable path to ensure it is not a legitimate system process like `?:\\Windows\\system32\\svchost.exe` running under system accounts (S-1-5-18, S-1-5-19, S-1-5-20).
- Use Osquery to gather more information about the system's registry settings with a query like: `SELECT * FROM registry WHERE path = 'HKLM\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType';` to confirm the current state and any recent changes.
- Analyze network activity logs for any unusual outbound connections that might indicate data exfiltration attempts following the registry change.
- Cross-reference the alert with other security events or alerts in the same timeframe to identify any correlated suspicious activities or patterns.
- Check for the presence of any unauthorized or suspicious software installations that might have been used to enable full user-mode dumps.
- Review system and security logs for any signs of privilege escalation or lateral movement that could be related to the registry change and potential credential dumping activities.

### False positive analysis

- Legitimate software installations or updates may enable full user-mode dumps temporarily for debugging purposes, leading to false positives. Users can handle this by monitoring the installation or update process and temporarily excluding these activities from detection.
- System administrators or IT support teams might enable full user-mode dumps for troubleshooting application crashes, which can be mistaken for malicious activity. To manage this, organizations can maintain a list of authorized personnel and processes that are allowed to make such changes and exclude them from the detection rule.
- Some enterprise applications may require full user-mode dumps for regular operation or diagnostics, which could trigger the rule. Users should identify these applications and create exceptions for their specific registry changes to prevent false alerts.
- Automated system management tools might modify registry settings as part of routine maintenance or configuration tasks. Users can address this by verifying the legitimacy of these tools and excluding their known benign activities from the detection criteria.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Verify the registry changes by checking the specified registry path for unauthorized modifications and revert any changes to their default state.
- Conduct a thorough investigation to identify any unauthorized access or suspicious activity, focusing on processes interacting with LSASS.
- Review system logs and security events to trace the origin of the registry change and identify potential threat actors or compromised accounts.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging policies to capture detailed information on registry changes and process executions, particularly those involving LSASS.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats in the future.
- Restore the system to its operational state by applying security patches, updating antivirus definitions, and ensuring all security configurations are set to best practices.
- Conduct a security audit of the affected system and network to identify and remediate any other vulnerabilities or misconfigurations.
- Implement hardening measures such as disabling unnecessary services, enforcing least privilege access, and using multi-factor authentication to reduce the risk of credential dumping attacks."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"
[[rule.threat.technique.subtechnique]]
id = "T1003.001"
name = "LSASS Memory"
reference = "https://attack.mitre.org/techniques/T1003/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1112"
name = "Modify Registry"
reference = "https://attack.mitre.org/techniques/T1112/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

