[metadata]
creation_date = "2024/06/05"
integration = ["windows", "endpoint", "system", "m365_defender", "sentinel_one_cloud_funnel", "crowdstrike"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Identifies the execution of wbadmin to access the NTDS.dit file in a domain controller. Attackers with privileges from
groups like Backup Operators can abuse the utility to perform credential access and compromise the domain.
"""
from = "now-9m"
index = [
    "winlogbeat-*",
    "logs-endpoint.events.process-*",
    "logs-windows.forwarded*",
    "logs-windows.sysmon_operational-*",
    "endgame-*",
    "logs-system.security*",
    "logs-m365_defender.event-*",
    "logs-sentinel_one_cloud_funnel.*",
    "logs-crowdstrike.fdr*",
]
language = "eql"
license = "Elastic License v2"
name = "NTDS Dump via Wbadmin"
references = [
    "https://medium.com/r3d-buck3t/windows-privesc-with-sebackupprivilege-65d2cd1eb960"
]
risk_score = 47
rule_id = "d93e61db-82d6-4095-99aa-714988118064"
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: System",
    "Data Source: Microsoft Defender for Endpoint",
    "Data Source: Sysmon",
    "Data Source: SentinelOne",
    "Data Source: Crowdstrike",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "windows" and event.type == "start" and
    (process.name : "wbadmin.exe" or ?process.pe.original_file_name : "wbadmin.exe") and 
     process.args : "recovery" and process.command_line : "*ntds.dit*"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating NTDS Dump via Wbadmin

Wbadmin is a Windows utility for managing backups, including system state data like the NTDS.dit file, which stores Active Directory data. Adversaries with sufficient privileges can exploit Wbadmin to extract this file, gaining access to sensitive credentials. The detection rule identifies suspicious Wbadmin usage by monitoring for specific command patterns indicative of NTDS.dit access attempts.

### Possible investigation steps

- Review the alert details to confirm the presence of the `wbadmin.exe` process execution with arguments related to "recovery" and "ntds.dit" in the command line.
- Verify the user account associated with the process execution to determine if it belongs to privileged groups such as Backup Operators or Domain Admins.
- Check the event logs for any preceding or subsequent suspicious activities around the time of the wbadmin execution, focusing on privilege escalation or lateral movement attempts.
- Investigate the source host by examining its recent login history and any unusual access patterns to identify potential unauthorized access.
- Use Osquery to gather additional context on the process execution. For example, run the following query to list recent wbadmin executions: `SELECT * FROM processes WHERE name = 'wbadmin.exe' AND cmdline LIKE '%ntds.dit%';`
- Analyze network traffic logs to identify any data exfiltration attempts or connections to suspicious external IP addresses following the wbadmin execution.
- Correlate the alert with other security events or alerts from the same host or user to identify potential patterns or coordinated attack activities.
- Examine the file system for any unauthorized copies or movements of the NTDS.dit file, especially in non-standard directories or external storage devices.
- Review any recent changes to user permissions or group memberships that could have facilitated the wbadmin execution.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors associated with similar wbadmin abuse techniques.

### False positive analysis

- Scheduled or legitimate backup operations: Organizations may have routine backup processes that involve the use of Wbadmin to access system state data, including the NTDS.dit file. These operations are typically performed by IT personnel with appropriate privileges and should be verified against scheduled tasks or backup logs.
- Testing and maintenance activities: IT departments may conduct tests or maintenance activities that involve accessing the NTDS.dit file using Wbadmin. These activities should be documented and cross-referenced with the detected events to confirm legitimacy.
- Third-party backup solutions: Some third-party backup solutions may utilize Wbadmin as part of their backup processes. It's important to identify these solutions and create exceptions for their known behaviors to prevent false positives.
- To manage false positives, users can create exceptions for known legitimate processes by whitelisting specific command lines or process arguments associated with authorized backup activities. Additionally, maintaining an updated list of authorized personnel and scheduled tasks can help in quickly identifying and excluding non-threatening behaviors.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Verify the legitimacy of the wbadmin command execution by checking the user account and context in which it was run. Investigate if the account has been compromised.
- Review the membership of privileged groups such as Backup Operators and Domain Admins to ensure only authorized personnel have access.
- Conduct a thorough forensic analysis of the affected system to identify any additional malicious activities or persistence mechanisms.
- Reset passwords for all potentially compromised accounts, especially those with elevated privileges, and enforce multi-factor authentication.
- Restore the NTDS.dit file and any other affected system components from a known good backup to ensure integrity.
- Implement enhanced logging and monitoring for wbadmin usage and other sensitive operations, ensuring logs are sent to a centralized security information and event management (SIEM) system.
- Integrate threat intelligence feeds to correlate detected activities with known threat actor tactics, techniques, and procedures (TTPs) for improved detection and response.
- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.
- Review and update security policies and procedures to include regular audits of privileged accounts and the implementation of least privilege principles."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"
[[rule.threat.technique.subtechnique]]
id = "T1003.002"
name = "Security Account Manager"
reference = "https://attack.mitre.org/techniques/T1003/002/"

[[rule.threat.technique.subtechnique]]
id = "T1003.003"
name = "NTDS"
reference = "https://attack.mitre.org/techniques/T1003/003/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1006"
name = "Direct Volume Access"
reference = "https://attack.mitre.org/techniques/T1006/"


[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

