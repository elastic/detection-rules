[metadata]
creation_date = "2024/03/26"
integration = ["system", "windows"]
maturity = "production"
updated_date = "2025/01/08"
min_stack_version = "8.14.0"
min_stack_comments = "Breaking change at 8.14.0 for the Windows Integration."

[rule]
author = ["Elastic"]
description = """
Active Directory Integrated DNS (ADIDNS) is one of the core components of AD DS, leveraging AD's access control and
replication to maintain domain consistency. It stores DNS zones as AD objects, a feature that, while robust, introduces
some security issues because of the default permission (Any authenticated users) to create DNS-named records. Attackers
can perform Dynamic Spoofing attacks, where they monitor LLMNR/NBT-NS requests and create DNS-named records to target
systems that are requested from multiple systems. They can also create specific records to target specific services,
such as wpad, for spoofing attacks.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-system.*", "logs-windows.*"]
language = "eql"
license = "Elastic License v2"
name = "Creation of a DNS-Named Record"
references = [
    "https://www.netspi.com/blog/technical/network-penetration-testing/adidns-revisited/",
    "https://www.thehacker.recipes/a-d/movement/mitm-and-coerced-authentications/wpad-spoofing",
]
risk_score = 21
rule_id = "1e1b2e7e-b8f5-45e5-addc-66cc1224ffbc"
setup = """## Setup

The 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).
Steps to implement the logging policy with Advanced Audit Configuration:

```
Computer Configuration >
Policies >
Windows Settings >
Security Settings >
Advanced Audit Policies Configuration >
Audit Policies >
DS Access >
Audit Directory Service Changes (Success,Failure)
```

The above policy does not cover the target object by default (we still need it to be configured to generate events), so we need to set up an AuditRule using https://github.com/OTRF/Set-AuditRule.

```
Set-AuditRule -AdObjectPath 'AD:\\CN=MicrosoftDNS,DC=DomainDNSZones,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights CreateChild -InheritanceFlags Descendents -AttributeGUID e0fa1e8c-9b45-11d0-afdd-00c04fd930c9 -AuditFlags Success
```
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Credential Access",
    "Data Source: Active Directory",
    "Use Case: Active Directory Monitoring",
    "Data Source: System",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
any where host.os.type == "windows" and event.action in ("Directory Service Changes", "directory-service-object-modified") and
    event.code == "5137" and winlog.event_data.ObjectClass == "dnsNode" and
    not winlog.event_data.SubjectUserName : "*$"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Creation of a DNS-Named Record

Active Directory Integrated DNS (ADIDNS) leverages Active Directory for DNS zone storage, enhancing domain consistency but posing security risks due to default permissions allowing any authenticated user to create DNS records. Adversaries exploit this by crafting malicious DNS entries for spoofing attacks. The detection rule identifies suspicious DNS record creation by monitoring specific Windows events, filtering out legitimate system accounts to highlight potential threats.

### Possible investigation steps

- Review the alert details to understand the context, focusing on the `event.action`, `event.code`, and `winlog.event_data.ObjectClass` fields to confirm the alert is related to DNS record creation.
- Verify the `winlog.event_data.SubjectUserName` to identify the user account that initiated the DNS record creation. Investigate if this account is known and authorized to perform such actions.
- Check the timestamp of the event to determine when the DNS record was created and correlate it with other security events or logs around the same time for additional context.
- Use Osquery to list all DNS records created recently on the affected system with a query like: `SELECT * FROM dns_resolvers WHERE name = '<suspicious_dns_record>';` to gather more information about the DNS record.
- Investigate the source IP address associated with the DNS record creation event to determine if it is from a known and trusted network or device.
- Examine the `winlog.event_data.ObjectClass` field to confirm that the object class is indeed `dnsNode`, ensuring the alert is not a false positive.
- Cross-reference the DNS record name with known malicious domains or internal blacklists to assess if it is associated with any known threats.
- Analyze network traffic logs to identify any unusual or unauthorized DNS queries or responses related to the newly created DNS record.
- Review historical logs for any previous DNS record creation events by the same user or from the same IP address to identify patterns or repeated suspicious activities.
- Consult with the IT or network team to verify if there were any legitimate changes or updates to DNS records that could explain the alert, ensuring the activity is not part of a planned or authorized operation.

### False positive analysis

- Legitimate system processes or applications that frequently update DNS records may trigger false positives. These can include automated scripts or services that dynamically register DNS entries as part of their normal operation.
- Regular updates from IT management tools or software deployment systems that modify DNS records for configuration management purposes might be mistakenly flagged as suspicious.
- Exclude known and trusted system accounts or service accounts that are responsible for legitimate DNS record creation by adding them to an exception list. This can be done by identifying the specific SubjectUserName values associated with these accounts and modifying the detection rule to ignore these entries.
- Monitor and document routine DNS record changes within the organization to establish a baseline of expected behavior, which can help in distinguishing between legitimate and potentially malicious activities.
- Collaborate with network and system administrators to identify and whitelist specific DNS record changes that are part of regular maintenance or deployment activities, ensuring these do not trigger unnecessary alerts.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further malicious activity and potential lateral movement by the adversary.
- Conduct a thorough investigation to identify the source of the malicious DNS record creation, focusing on recent changes and the user accounts involved.
- Review and audit Active Directory permissions to ensure that only authorized users have the ability to create or modify DNS records, reducing the risk of unauthorized changes.
- Remove any unauthorized or suspicious DNS records identified during the investigation to mitigate the risk of spoofing attacks.
- Implement enhanced logging and monitoring for DNS record changes, ensuring that all modifications are logged and reviewed regularly for suspicious activity.
- Integrate security information and event management (SIEM) solutions to correlate DNS activity with other security events, improving detection capabilities.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are compromised.
- Restore the system to its operational state by applying necessary patches and updates, and ensure that all security configurations are properly set.
- Educate users on the risks of DNS spoofing and the importance of reporting suspicious activity, enhancing overall security awareness.
- Implement network segmentation and access controls to limit the impact of potential future attacks, reducing the attack surface available to adversaries."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1557"
name = "Adversary-in-the-Middle"
reference = "https://attack.mitre.org/techniques/T1557/"


[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

