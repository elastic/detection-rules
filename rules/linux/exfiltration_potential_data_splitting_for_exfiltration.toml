[metadata]
creation_date = "2024/11/04"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
This rule looks for the usage of common data splitting utilities with specific arguments that indicate data splitting
for exfiltration on Linux systems. Data splitting is a technique used by adversaries to split data into smaller parts to
avoid detection and exfiltrate data.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Data Splitting Detected"
risk_score = 21
rule_id = "e302e6c3-448c-4243-8d9b-d41da70db582"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Exfiltration",
    "Data Source: Elastic Defend"
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
process where host.os.type == "linux" and event.type == "start" and event.action == "exec" and (
  (process.name == "dd" and process.args like "bs=*" and process.args like "if=*") or
  (process.name in ("split", "rsplit") and (
    (process.args == "-b" or process.args like "--bytes*") or
    (process.args == "-C" or process.args like "--line-bytes*")
    )
  )
) and not (
  process.parent.name in ("apport", "overlayroot") or
  process.args like (
    "if=/tmp/nvim*", "if=/boot/*", "if=/dev/random", "if=/dev/urandom", "/dev/mapper/*",
    "if=*.iso", "of=/dev/stdout", "if=/dev/zero", "if=/dev/sda", "/proc/sys/kernel/*"
  )
)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Data Splitting Detected

Data splitting utilities on Linux, like `dd` and `split`, are typically used for managing large files by dividing them into smaller, more manageable parts. Adversaries exploit this by splitting data to evade detection systems during exfiltration. The detection rule identifies suspicious use of these utilities by monitoring specific arguments and excluding benign processes, thus highlighting potential malicious activity.

### Possible investigation steps

- Review the alert details to identify the specific process name and arguments that triggered the rule, focusing on `process.name` and `process.args`.
- Check the parent process using `process.parent.name` to determine if the process was spawned by a known benign application or a potentially malicious one.
- Investigate the user account associated with the process execution to determine if it aligns with expected behavior or if it might be compromised.
- Examine the command line arguments (`process.args`) for any unusual patterns or destinations, especially focusing on the `if=` and `of=` parameters to identify source and destination files.
- Use Osquery to list recent processes executed by the same user to identify any other suspicious activities. Example query: `SELECT * FROM processes WHERE uid = (SELECT uid FROM users WHERE username = 'suspicious_user');`
- Analyze the file paths involved in the process arguments to determine if they are legitimate or if they point to sensitive or unusual locations.
- Check system logs for any related events around the same timestamp to gather additional context on the system's state and activities.
- Investigate network connections from the host to identify any unusual outbound connections that might indicate data exfiltration.
- Review historical data for similar alerts on the same host or user to identify patterns or repeated attempts at data splitting.
- Correlate the alert with other security events or alerts in the environment to determine if it is part of a larger attack campaign.

### False positive analysis

- Known false positives may include legitimate system processes or administrative tasks that use data splitting utilities for non-malicious purposes, such as system backups or log management.
- Processes like `apport` and `overlayroot` are excluded as they are known to use these utilities in benign contexts.
- Users can handle false positives by adding exceptions for specific parent processes or argument patterns that are frequently observed in non-threatening activities.
- Consider excluding processes that operate on files within directories like `/tmp`, `/boot`, or `/proc/sys/kernel`, as these are often involved in routine system operations.
- Regularly review and update the exclusion list to adapt to changes in system behavior and reduce unnecessary alerts.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further data exfiltration.
- Conduct a thorough investigation to identify the source and scope of the data splitting activity, focusing on the processes and users involved.
- Review system logs and network traffic to trace any data exfiltration attempts and determine if any sensitive data was compromised.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Implement enhanced logging policies to capture detailed process execution and network activity, ensuring future incidents can be detected more effectively.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate and analyze suspicious activities.
- Restore the system to its operational state by removing any unauthorized processes or files and applying necessary security patches.
- Conduct a security audit of the affected system and network to identify and remediate any vulnerabilities that may have been exploited.
- Educate users and administrators on the risks of data splitting and exfiltration techniques, emphasizing the importance of monitoring and reporting suspicious activities.
- Implement hardening measures such as restricting the use of data splitting utilities to authorized personnel and employing data loss prevention (DLP) solutions to monitor and control data transfers."""

[[rule.threat]]
framework = "MITRE ATT&CK"

  [rule.threat.tactic]
  name = "Exfiltration"
  id = "TA0010"
  reference = "https://attack.mitre.org/tactics/TA0010/"
