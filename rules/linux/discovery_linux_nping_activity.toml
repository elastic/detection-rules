[metadata]
creation_date = "2020/02/18"
integration = ["endpoint", "auditd_manager"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Nping ran on a Linux host. Nping is part of the Nmap tool suite and has the ability to construct raw packets for a wide
variety of security testing applications, including denial of service testing.
"""
false_positives = [
    """
    Some normal use of this command may originate from security engineers and network or server administrators, but this
    is usually not routine or unannounced. Use of `Nping` by non-engineers or ordinary users is uncommon.
    """,
]
from = "now-9m"
index = ["logs-endpoint.events.*", "endgame-*", "auditbeat-*", "logs-auditd_manager.auditd-*"]
language = "eql"
license = "Elastic License v2"
name = "Nping Process Activity"
references = ["https://en.wikipedia.org/wiki/Nmap"]
risk_score = 47
rule_id = "0d69150b-96f8-467c-a86d-a67a3378ce77"
setup = """## Setup

This rule requires data coming in from one of the following integrations:
- Elastic Defend
- Auditbeat

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditbeat Setup
Auditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.

#### The following steps should be executed in order to add the Auditbeat on a Linux System:
- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.
- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).
- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).
- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).
- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: Auditd Manager",
]
timestamp_override = "event.ingested"
type = "eql"

query = '''
process where host.os.type == "linux" and event.type == "start" and event.action in ("exec", "exec_event", "executed", "process_started")
 and process.name == "nping"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Nping Process Activity
Nping, a component of the Nmap suite, is used for crafting raw packets, aiding in network diagnostics and security testing. Adversaries may exploit Nping to perform network reconnaissance or denial-of-service attacks by probing network services. The detection rule identifies Nping execution on Linux systems by monitoring process initiation events, helping to flag potential misuse aligned with network discovery tactics.

### Possible investigation steps

- Verify the alert by checking the process initiation event details, focusing on the `process.name` field to confirm it is indeed "nping".
- Examine the `host.os.type` field to ensure the alert pertains to a Linux system, as expected.
- Review the `event.type` and `event.action` fields to confirm the process was started and executed, ensuring the alert is not a false positive.
- Investigate the user account associated with the `process` to determine if the execution was authorized or expected.
- Check the parent process of the Nping execution to understand how it was initiated and if it was part of a larger script or automated task.
- Use Osquery to gather more context on the Nping process by running a query such as: `SELECT * FROM processes WHERE name = 'nping';` to retrieve details like process ID, user, and command line arguments.
- Analyze the command line arguments used with Nping to understand the intent of the execution, such as specific network targets or options that indicate reconnaissance or denial-of-service activities.
- Review network logs and traffic patterns around the time of the Nping execution to identify any unusual or suspicious network activity that correlates with the alert.
- Cross-reference the alert with other security events or logs to identify if there are any related activities or patterns, such as multiple reconnaissance attempts or other suspicious processes.
- Consult threat intelligence sources to determine if there are any known campaigns or threat actors that commonly use Nping in their operations, providing additional context to the alert.

### False positive analysis

- Routine network diagnostics: System administrators may use Nping for legitimate network diagnostics and performance testing, which can trigger the detection rule. To manage this, users can create exceptions for specific user accounts or IP addresses known to perform regular diagnostics.
- Security testing by authorized personnel: Security teams might employ Nping as part of scheduled vulnerability assessments or penetration testing. Users can handle these false positives by excluding processes initiated by designated security team accounts or during predefined testing windows.
- Automated scripts or tools: Some automated network management scripts or tools might incorporate Nping for monitoring purposes. Users should identify these scripts and exclude their execution paths or associated service accounts from triggering alerts.
- Development and testing environments: In environments where network tools are frequently tested, Nping might be executed as part of development activities. Users can exclude specific development servers or environments from the detection rule to prevent unnecessary alerts.

### Response and remediation

- Immediately isolate the affected Linux host from the network to prevent further reconnaissance or potential denial-of-service attacks.
- Verify the legitimacy of the Nping process by checking the user account that initiated it and cross-referencing with authorized network testing activities.
- Conduct a thorough investigation of the system logs to identify any unauthorized access or suspicious activities preceding the Nping execution.
- Review network traffic logs to determine if there were any unusual patterns or connections initiated by the Nping process.
- If unauthorized use is confirmed, terminate the Nping process and any other suspicious processes running on the host.
- Escalate the incident to the security operations team for further analysis and to determine if other systems may be affected.
- Implement enhanced logging policies to capture detailed process execution and network activity, ensuring future incidents can be detected more efficiently.
- Integrate threat intelligence feeds and security information and event management (SIEM) systems to correlate Nping activity with known threat actor behaviors.
- Restore the system to its operational state by applying any necessary patches, updating security configurations, and conducting a full system scan for malware.
- Harden the system by disabling unnecessary network services, enforcing strict access controls, and regularly updating security policies to mitigate future risks."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1046"
name = "Network Service Discovery"
reference = "https://attack.mitre.org/techniques/T1046/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

