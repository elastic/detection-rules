[metadata]
creation_date = "2023/07/28"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies an attempt to exploit a local privilege escalation (CVE-2023-2640 and CVE-2023-32629) via a flaw in Ubuntu's
modifications to OverlayFS. These flaws allow the creation of specialized executables, which, upon execution, grant the
ability to escalate privileges to root on the affected machine.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Privilege Escalation via OverlayFS"
references = [
    "https://www.wiz.io/blog/ubuntu-overlayfs-vulnerability",
    "https://twitter.com/liadeliyahu/status/1684841527959273472",
]
risk_score = 73
rule_id = "b51dbc92-84e2-4af1-ba47-65183fcd0c57"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Privilege Escalation",
    "Use Case: Vulnerability",
    "Data Source: Elastic Defend",
]
type = "eql"

query = '''
sequence by process.parent.entity_id, host.id with maxspan=5s
  [process where host.os.type == "linux" and event.type == "start" and event.action == "exec" and 
    process.name == "unshare" and process.args : ("-r", "-rm", "m") and process.args : "*cap_setuid*"  and user.id != "0"]
  [process where host.os.type == "linux" and event.action == "uid_change" and event.type == "change" and 
    user.id == "0"]
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Privilege Escalation via OverlayFS

OverlayFS is a union filesystem used in Linux environments to overlay one filesystem on top of another, allowing for efficient file management and updates. Adversaries exploit vulnerabilities in Ubuntu's OverlayFS modifications to execute crafted executables that elevate privileges to root. The detection rule identifies suspicious sequences involving the 'unshare' command with specific arguments and subsequent UID changes to root, indicating potential exploitation attempts.

### Possible investigation steps

- Review the alert details to confirm the presence of the 'unshare' command with suspicious arguments such as "-r", "-rm", "m", and "*cap_setuid*". Verify that the user ID is not "0" in the initial process execution.
- Check the sequence of events to ensure that a UID change to "0" (root) occurred within 5 seconds of the 'unshare' command execution, as indicated by the query.
- Investigate the parent process of the 'unshare' command by examining the `process.parent.entity_id` to understand the context and origin of the suspicious activity.
- Use Osquery to gather more information about the processes involved. For example, run the following query to list recent processes executed by the same user: `SELECT pid, name, path, cmdline, uid FROM processes WHERE uid = <user_id> ORDER BY start_time DESC LIMIT 10;`.
- Examine the `host.id` field to identify the specific host involved in the alert and gather additional context about its role and importance within the network.
- Check system logs on the affected host for any additional suspicious activity or errors around the time of the alert, focusing on authentication logs and system logs.
- Investigate any recent changes or updates to the OverlayFS configuration or related packages on the affected host to identify potential sources of the vulnerability.
- Review user activity and permissions for the user account involved in the alert to determine if there are any anomalies or unauthorized privilege assignments.
- Analyze network traffic logs from the affected host to detect any unusual outbound connections or data exfiltration attempts that might correlate with the privilege escalation attempt.
- Correlate the alert with other security events or alerts in the environment to identify potential patterns or coordinated attacks involving OverlayFS exploitation.

### False positive analysis

- Legitimate administrative tasks: System administrators may use the 'unshare' command with similar arguments for legitimate purposes, such as container management or system maintenance, which could trigger the rule. To manage this, users can create exceptions for known administrative scripts or processes that frequently execute these commands.
- Development and testing environments: Developers might use the 'unshare' command with the specified arguments during software testing or development, especially in environments that mimic production settings. Users can exclude specific development environments or user accounts from triggering alerts by setting up exceptions based on user roles or environment identifiers.
- Automated scripts and tools: Some automated tools or scripts designed for system configuration or monitoring might inadvertently match the rule's criteria. Users should review these tools and, if deemed safe, add them to an allowlist to prevent false positives.
- Custom security solutions: Organizations with custom security solutions that involve UID changes might see false positives. In such cases, users should document these solutions and configure the detection rule to exclude these specific processes or actions.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further exploitation or lateral movement.
- Conduct a thorough investigation to confirm the exploitation of CVE-2023-2640 or CVE-2023-32629 by reviewing logs and identifying any unauthorized privilege escalations.
- Terminate any suspicious processes identified in the detection rule, particularly those involving the 'unshare' command with the specified arguments.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the breach.
- Apply available patches or updates from Ubuntu to address the vulnerabilities in OverlayFS and prevent future exploitation.
- Review and enhance logging policies to ensure comprehensive monitoring of privilege escalation attempts, focusing on command execution and UID changes.
- Integrate additional security tools, such as endpoint detection and response (EDR) solutions, to improve visibility and response capabilities.
- Restore the system to its operational state by verifying the integrity of critical files and configurations, and ensure no backdoors or malicious modifications remain.
- Implement hardening measures, such as restricting the use of the 'unshare' command to trusted users and processes, and enforcing the principle of least privilege.
- Document the incident and response actions taken, and update incident response plans and security policies to incorporate lessons learned and improve future readiness."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1068"
name = "Exploitation for Privilege Escalation"
reference = "https://attack.mitre.org/techniques/T1068/"


[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"

