[metadata]
creation_date = "2024/01/15"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Detects network connections initiated by the "sudo" binary. This behavior is uncommon and may occur in instances where
reverse shell shellcode is injected into a process run with elevated permissions via "sudo". Attackers may attempt to
inject shellcode into processes running as root, to escalate privileges.
"""
from = "now-9m"
index = ["logs-endpoint.events.*", "endgame-*"]
language = "eql"
license = "Elastic License v2"
name = "Network Connection via Sudo Binary"
risk_score = 21
rule_id = "30e1e9f2-eb9c-439f-aff6-1e3068e99384"
setup = """## Setup


This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Privilege Escalation",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
network where host.os.type == "linux" and event.type == "start" and
event.action in ("connection_attempted", "ipv4_connection_attempt_event") and process.name == "sudo" and not (
  destination.ip == null or destination.ip == "0.0.0.0" or cidrmatch(
    destination.ip, "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.0.0.0/24", "192.0.0.0/29",
    "192.0.0.8/32", "192.0.0.9/32", "192.0.0.10/32", "192.0.0.170/32", "192.0.0.171/32", "192.0.2.0/24",
    "192.31.196.0/24", "192.52.193.0/24", "192.168.0.0/16", "192.88.99.0/24", "224.0.0.0/4", "100.64.0.0/10",
    "192.175.48.0/24","198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "240.0.0.0/4", "::1", "FE80::/10",
    "FF00::/8", "172.31.0.0/16"
  )
) 
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Network Connection via Sudo Binary

The 'sudo' command in Linux allows users to execute commands with elevated privileges, typically as the root user. Adversaries may exploit this by injecting malicious code into processes running with these privileges, potentially establishing unauthorized network connections. The detection rule identifies unusual network activity initiated by 'sudo', excluding common internal IP ranges, to flag potential privilege escalation attempts.

### Possible investigation steps

- Review the alert details to confirm the process name is "sudo" and verify the event type is "start" with actions "connection_attempted" or "ipv4_connection_attempt_event".
- Check the destination IP address to ensure it is not within the excluded internal IP ranges, indicating a potential external connection.
- Investigate the command line arguments used with the "sudo" process to identify any suspicious or unexpected commands that may have been executed.
- Examine the user account associated with the "sudo" command to determine if the account has a history of legitimate use or if it might be compromised.
- Use Osquery to gather additional context on the process by running a query such as: `SELECT * FROM processes WHERE name = 'sudo';` to retrieve details about the process, including its parent process and command line.
- Analyze the parent process of the "sudo" command to understand the context in which it was executed and identify any potential anomalies.
- Review recent authentication logs to check for unusual login attempts or successful logins around the time the "sudo" command was executed.
- Investigate network logs to identify any other unusual or unauthorized network connections from the host around the same time as the alert.
- Check for any recent changes to the system's sudoers file that might allow unauthorized users to execute commands with elevated privileges.
- Correlate the alert with other security events or alerts from the same host to identify any patterns or additional indicators of compromise.

### False positive analysis

- **Administrative Scripts**: Some legitimate administrative scripts or tools may use 'sudo' to initiate network connections for system updates or configuration management. Users can handle these by identifying and excluding specific scripts or processes that are known to perform these actions regularly.
- **Monitoring and Management Tools**: Network monitoring or management tools that require elevated privileges might trigger this rule. Users should review and whitelist these tools if they are verified to be safe and necessary for operations.
- **Backup and Synchronization Services**: Services that perform backups or data synchronization might use 'sudo' to access network resources. Users can create exceptions for these services by specifying their process names or network destinations.
- **Custom Internal Applications**: In some environments, custom applications may be designed to run with elevated privileges and initiate network connections. Users should document these applications and exclude them from the rule to prevent false positives.
- **Testing and Development Environments**: Developers or testers might use 'sudo' to simulate network connections for testing purposes. Users can manage these by setting up separate rules or exceptions for known testing environments or IP ranges.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation to identify the source and scope of the intrusion, focusing on logs related to the 'sudo' command and network connections.
- Terminate any suspicious processes that were initiated by 'sudo' and verify the integrity of system binaries and configurations.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if other systems are affected.
- Review and enhance logging policies to ensure comprehensive monitoring of privileged command executions and network activities.
- Implement additional security measures such as multi-factor authentication for privileged accounts and regular audits of sudoers files.
- Restore the system from a known good backup if necessary, ensuring that all security patches and updates are applied.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans accordingly.
- Educate users and administrators on recognizing and reporting suspicious activities, emphasizing the importance of maintaining secure practices.
- Consider deploying endpoint detection and response (EDR) solutions to improve visibility and response capabilities for future incidents."""

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1055"
name = "Process Injection"
reference = "https://attack.mitre.org/techniques/T1055/"

[[rule.threat.technique.subtechnique]]
id = "T1055.008"
name = "Ptrace System Calls"
reference = "https://attack.mitre.org/techniques/T1055/008/"

[[rule.threat.technique]]
id = "T1548"
name = "Abuse Elevation Control Mechanism"
reference = "https://attack.mitre.org/techniques/T1548/"

[[rule.threat.technique.subtechnique]]
id = "T1548.003"
name = "Sudo and Sudo Caching"
reference = "https://attack.mitre.org/techniques/T1548/003/"

[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"
