[metadata]
creation_date = "2023/09/04"
integration = ["endpoint", "auditd_manager"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
This threshold rule monitors for the rapid execution of unix utilities that are capable of conducting network scans.
Adversaries may leverage built-in tools such as ping, netcat or socat to execute ping sweeps across the network while
attempting to evade detection or due to the lack of network mapping tools available on the compromised host.
"""
from = "now-9m"
index = ["logs-endpoint.events.*", "endgame-*", "auditbeat-*", "logs-auditd_manager.auditd-*"]
language = "kuery"
license = "Elastic License v2"
name = "Potential Network Scan Executed From Host"
risk_score = 47
rule_id = "03c23d45-d3cb-4ad4-ab5d-b361ffe8724a"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows
the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest to select "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
    "Data Source: Auditd Manager",
]
timestamp_override = "event.ingested"
type = "threshold"

query = '''
event.category:process and host.os.type:linux and event.action:(exec or exec_event or executed or process_started) and
event.type:start and process.name:(ping or nping or hping or hping2 or hping3 or nc or ncat or netcat or socat)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Network Scan Executed From Host

Network scanning utilities like ping, netcat, and socat are essential for diagnosing connectivity and network issues in Linux environments. However, adversaries exploit these tools to map networks stealthily, often using rapid execution to avoid detection. The detection rule identifies suspicious activity by monitoring the initiation of these processes, flagging potential misuse indicative of network reconnaissance efforts.

### Possible investigation steps

- Review the alert details to confirm the specific process name that triggered the alert, focusing on `process.name` to identify if it was ping, netcat, socat, or another utility.
- Check the `event.category` and `event.action` fields to ensure the alert corresponds to a process execution event on a Linux host.
- Investigate the `host.os.type` to confirm the operating system is Linux, as this rule is specific to Linux environments.
- Examine the `event.type` field to verify that the process was indeed started, which aligns with the rule's focus on process initiation.
- Use Osquery to gather more context about the process by running a query such as: `SELECT * FROM processes WHERE name IN ('ping', 'nping', 'hping', 'hping2', 'hping3', 'nc', 'ncat', 'netcat', 'socat');` to retrieve detailed information about the suspicious process.
- Analyze the command line arguments of the process to understand the scope and intent of the network scan, which can be done by checking the `process.command_line` field.
- Review the user account associated with the process execution to determine if it was initiated by a legitimate user or a potential adversary.
- Check the process's parent process to identify if it was spawned by another suspicious or unauthorized process.
- Investigate network connections established by the host around the time of the alert to identify any unusual or unauthorized network activity.
- Correlate this event with other logs and alerts from the same host or network segment to identify patterns or additional indicators of compromise.

### False positive analysis

- Routine administrative tasks: System administrators often use tools like ping, netcat, and socat for legitimate network diagnostics and troubleshooting, which can trigger false positives. To manage this, create exceptions for known administrative activities by whitelisting specific user accounts or IP addresses associated with these tasks.
- Automated monitoring scripts: Some environments deploy automated scripts that regularly execute network scanning utilities to ensure network health and connectivity. These scripts can be excluded by identifying their unique process names or execution patterns and adding them to an exception list.
- Scheduled maintenance activities: During scheduled network maintenance, network scanning tools may be used to verify network configurations and connectivity. To prevent false positives, schedule exceptions during known maintenance windows or for specific maintenance-related processes.
- Security tools: Certain security tools and intrusion detection systems may use similar utilities for legitimate network scanning and monitoring purposes. Identify these tools and exclude their processes from triggering alerts by adding them to a trusted list.
- Development and testing environments: In environments where network scanning is part of development or testing processes, frequent execution of these utilities may occur. Implement exceptions for specific environments or subnets where such activities are expected and non-threatening.

### Response and remediation

- Immediately isolate the affected host from the network to prevent further reconnaissance or lateral movement by the adversary.
- Conduct a thorough investigation of the host to identify any unauthorized access or additional malicious activities, focusing on the processes and network connections initiated by the flagged utilities.
- Review system and network logs to trace the origin and scope of the network scan, identifying any other potentially compromised systems.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the activity is part of a larger attack campaign.
- Remediate the affected host by removing any unauthorized tools or scripts and applying security patches to address known vulnerabilities.
- Restore the host to its operational state by verifying the integrity of system files and configurations, and ensuring that all security controls are re-enabled.
- Implement enhanced logging policies to capture detailed process execution and network activity, enabling better detection of similar threats in the future.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve the detection and response capabilities for network reconnaissance activities.
- Conduct a post-incident review to identify gaps in the current security posture and update incident response plans accordingly.
- Apply hardening measures such as disabling unnecessary services, enforcing least privilege access, and regularly updating security configurations to reduce the attack surface."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1046"
name = "Network Service Discovery"
reference = "https://attack.mitre.org/techniques/T1046/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

[rule.threshold]
field = ["host.id", "process.parent.entity_id", "process.executable"]
value = 1
[[rule.threshold.cardinality]]
field = "process.args"
value = 100


