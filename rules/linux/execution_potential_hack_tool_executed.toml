[metadata]
creation_date = "2023/09/22"
integration = ["endpoint", "auditd_manager"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Monitors for the execution of different processes that might be used by attackers for malicious intent. An alert from
this rule should be investigated further, as hack tools are commonly used by blue teamers and system administrators as
well.
"""
from = "now-9m"
index = ["logs-endpoint.events.*", "endgame-*", "auditbeat-*", "logs-auditd_manager.auditd-*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Linux Hack Tool Launched"
risk_score = 47
rule_id = "1df1152b-610a-4f48-9d7a-504f6ee5d9da"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows
the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest to select "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Execution",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
    "Data Source: Auditd Manager",
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
process where host.os.type == "linux" and event.type == "start" and
event.action in ("exec", "exec_event", "executed", "process_started") and
process.name in~ (
  // exploitation frameworks
  "crackmapexec", "msfconsole", "msfvenom", "sliver-client", "sliver-server", "havoc",
  // network scanners (nmap left out to reduce noise)
  "zenmap", "nuclei", "netdiscover", "legion",
  // web enumeration
  "gobuster", "dirbuster", "dirb", "wfuzz", "ffuf", "whatweb", "eyewitness",
  // web vulnerability scanning
  "wpscan", "joomscan", "droopescan", "nikto", 
  // exploitation tools
  "sqlmap", "commix", "yersinia",
  // cracking and brute forcing
  "john", "hashcat", "hydra", "ncrack", "cewl", "fcrackzip", "rainbowcrack",
  // host and network
  "linenum.sh", "linpeas.sh", "pspy32", "pspy32s", "pspy64", "pspy64s", "binwalk", "evil-winrm",
  "linux-exploit-suggester-2.pl", "linux-exploit-suggester.sh", "panix.sh"
)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Linux Hack Tool Launched

In Linux environments, various tools are used for system administration and security testing. While these tools serve legitimate purposes, adversaries can exploit them for malicious activities, such as unauthorized access or data exfiltration. The detection rule identifies the execution of known hacking tools by monitoring process start events. It flags tools often used in exploitation, scanning, and enumeration, enabling analysts to investigate potential misuse.

### Possible investigation steps

- Review the alert details to identify the specific process name that triggered the alert, using the `process.name` field to understand which tool was executed.
- Check the `host.os.type` and `event.type` fields to confirm the environment and event type, ensuring the alert pertains to a Linux system and a process start event.
- Investigate the `event.action` field to determine the exact action that was performed, such as "exec" or "process_started," to understand the context of the execution.
- Examine the user account associated with the process execution to determine if it was initiated by a legitimate user or a potential adversary.
- Use Osquery to gather additional context about the process. For example, run the following query to list all processes with the same name and their parent processes:
  ```sql
  SELECT pid, name, path, parent, user FROM processes WHERE name = '<process_name>';
  ```
- Analyze the parent process of the suspicious execution to identify if it was spawned by a legitimate application or script.
- Review system logs and audit logs around the time of the alert to identify any other suspicious activities or related events.
- Check for any network connections initiated by the process using network monitoring tools or logs to identify potential data exfiltration or communication with command and control servers.
- Investigate the file system for any new or modified files that could be related to the execution of the tool, focusing on directories commonly used for temporary or unauthorized files.
- Correlate the alert with other security events or alerts in the environment to determine if this is part of a larger attack or isolated incident.

### False positive analysis

- System administrators and security teams often use the flagged tools for legitimate purposes such as network diagnostics, vulnerability assessments, and system audits, which can trigger false positives.
- Blue team exercises and penetration testing activities may involve the use of these tools, leading to alerts that are not indicative of malicious activity.
- To manage these false positives, users can create exceptions for specific hosts or user accounts known to regularly use these tools for authorized activities.
- Implementing a whitelist for certain processes or users can help reduce noise from expected and non-threatening tool usage.
- Regularly review and update the list of exceptions to ensure that only legitimate activities are excluded, maintaining a balance between security and operational efficiency.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.
- Conduct a thorough investigation of the flagged process to determine if it was executed with malicious intent or as part of legitimate administrative tasks.
- Review system logs and process execution history to identify any additional suspicious activities or related processes.
- If malicious activity is confirmed, remove any unauthorized tools or scripts and change all potentially compromised credentials.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the breach.
- Implement enhanced logging policies to capture detailed process execution data and network activity for future investigations.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities and provide context for alerts.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are installed.
- Conduct a post-incident review to identify gaps in security controls and update security policies and procedures accordingly.
- Implement hardening measures such as disabling unnecessary services, enforcing least privilege access, and regularly auditing system configurations."""

[[rule.threat]]
framework = "MITRE ATT&CK"

[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
