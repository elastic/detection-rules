[metadata]
creation_date = "2020/04/27"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
An adversary may attempt to get detailed information about the operating system and hardware. This rule identifies
common locations used to discover virtual machine hardware by a non-root user. This technique has been used by the Pupy
RAT and other malware.
"""
false_positives = [
    """
    Certain tools or automated software may enumerate hardware information. These tools can be exempted via user name or
    process arguments to eliminate potential noise.
    """,
]
from = "now-9m"
index = ["auditbeat-*", "logs-endpoint.events.*", "endgame-*"]
language = "kuery"
license = "Elastic License v2"
name = "Virtual Machine Fingerprinting"
risk_score = 73
rule_id = "5b03c9fb-9945-4d2f-9568-fd690fee3fba"
setup = """## Setup

This rule requires data coming in from one of the following integrations:
- Elastic Defend
- Auditbeat

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditbeat Setup
Auditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.

#### The following steps should be executed in order to add the Auditbeat on a Linux System:
- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.
- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).
- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).
- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).
- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).
"""
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Discovery",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and host.os.type:linux and event.type:(start or process_started) and
  process.args:("/sys/class/dmi/id/bios_version" or
                "/sys/class/dmi/id/product_name" or
                "/sys/class/dmi/id/chassis_vendor" or
                "/proc/scsi/scsi" or
                "/proc/ide/hd0/model") and
  not user.name:root
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Virtual Machine Fingerprinting

Virtual Machine Fingerprinting involves identifying characteristics of a virtual environment, often to evade detection or tailor attacks. Adversaries exploit this by querying system files for hardware details, which can reveal if a system is virtualized. The detection rule targets non-root users accessing specific system paths indicative of VM environments, flagging potential reconnaissance activities by malware like Pupy RAT.

### Possible investigation steps

- Review the alert details to confirm the event category is 'process' and the host operating system type is 'linux', as specified in the query.
- Verify the event type to ensure it matches 'start' or 'process_started', indicating a new process initiation.
- Check the process arguments to identify which specific system path was accessed, such as "/sys/class/dmi/id/bios_version" or "/proc/scsi/scsi", to understand the nature of the fingerprinting attempt.
- Investigate the user context by confirming the user name is not 'root', which could indicate unauthorized access attempts by a non-privileged user.
- Correlate the alert with other recent alerts or logs to identify patterns or repeated access attempts to the same or similar system paths.
- Use Osquery to gather additional context about the process by running a query like: `SELECT * FROM processes WHERE path IN ('/sys/class/dmi/id/bios_version', '/sys/class/dmi/id/product_name', '/sys/class/dmi/id/chassis_vendor', '/proc/scsi/scsi', '/proc/ide/hd0/model');`
- Examine the parent process of the flagged process to determine if it was spawned by a known legitimate application or a suspicious one.
- Check the process execution history for the non-root user to identify any other unusual or unauthorized activities.
- Investigate the network activity associated with the process to detect any potential data exfiltration or communication with known malicious IP addresses.
- Review system logs for any recent changes or anomalies that could indicate a compromise or unauthorized configuration changes related to virtualization detection.

### False positive analysis

- Non-malicious software or legitimate administrative scripts may access the same system paths for inventory or monitoring purposes, leading to false positives.
- Developers or IT personnel using scripts to gather system information for troubleshooting or system management might trigger the rule.
- Automated system management tools that check hardware details for compliance or inventory purposes could be flagged.
- To manage these false positives, users can create exceptions for known benign processes or users by adding them to an allowlist.
- Regularly review and update the allowlist to ensure it includes only trusted sources, minimizing the risk of overlooking genuine threats.
- Consider implementing additional context checks, such as verifying the frequency and timing of access, to differentiate between routine operations and suspicious activities.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further spread or data exfiltration.
- Conduct a thorough investigation to determine the scope of the intrusion, focusing on identifying any additional compromised systems or accounts.
- Review system logs and process execution details to understand the adversary's actions and identify any persistence mechanisms.
- Remove any unauthorized software or malware identified during the investigation, such as Pupy RAT, and ensure all malicious processes are terminated.
- Change passwords and credentials for any accounts that may have been compromised, especially those with elevated privileges.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if law enforcement notification is necessary.
- Implement enhanced logging and monitoring policies to capture detailed process execution and user activity, aiding in future detection and investigation efforts.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats.
- Restore the system to its operational state by applying clean backups and ensuring all security patches and updates are applied.
- Harden the system by disabling unnecessary services, enforcing least privilege access, and regularly reviewing and updating security configurations."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1082"
name = "System Information Discovery"
reference = "https://attack.mitre.org/techniques/T1082/"


[rule.threat.tactic]
id = "TA0007"
name = "Discovery"
reference = "https://attack.mitre.org/tactics/TA0007/"

