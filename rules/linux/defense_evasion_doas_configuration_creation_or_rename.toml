[metadata]
creation_date = "2024/08/28"
integration = ["endpoint", "sentinel_one_cloud_funnel"]
maturity = "production"
min_stack_comments = "Breaking change at 8.13.0 for SentinelOne Integration."
min_stack_version = "8.13.0"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
This rule detects the creation or rename of the Doas configuration file on a Linux system. Adversaries may create
or modify the Doas configuration file to elevate privileges and execute commands as other users while attempting to
evade detection.
"""
from = "now-9m"
index = ["logs-endpoint.events.file*", "endgame-*", "logs-sentinel_one_cloud_funnel.*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Defense Evasion via Doas"
references = ["https://wiki.archlinux.org/title/Doas"]
risk_score = 21
rule_id = "26a726d7-126e-4267-b43d-e9a70bfdee1e"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Data Source: Elastic Defend",
    "Data Source: Elastic Endgame",
    "Data Source: SentinelOne",
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
file where host.os.type == "linux" and event.type != "deletion" and file.path == "/etc/doas.conf"
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Defense Evasion via Doas

Doas is a command-line utility on Linux systems that allows users to execute commands as another user, typically with elevated privileges. Adversaries may exploit this by altering the Doas configuration file to gain unauthorized access or execute commands stealthily. The detection rule identifies suspicious activities by monitoring changes to the Doas configuration file, signaling potential privilege escalation attempts.

### Possible investigation steps

- Review the alert details to confirm the file path involved is "/etc/doas.conf" and the event type is not "deletion" to ensure the alert is relevant.
- Check the timestamp of the alert to determine when the suspicious activity occurred and correlate it with other events in the system logs around the same time.
- Identify the user account associated with the event to determine if the activity was performed by a legitimate user or a potential adversary.
- Examine the process that made changes to the Doas configuration file by reviewing process creation logs or using process monitoring tools.
- Use Osquery to list recent modifications to the Doas configuration file with the query: `SELECT * FROM file WHERE path = '/etc/doas.conf' ORDER BY mtime DESC LIMIT 5;` to gather more context on the changes.
- Investigate the command history of the user involved in the alert to identify any suspicious commands executed around the time of the alert.
- Check for any recent changes in user privileges or group memberships that might indicate privilege escalation attempts.
- Review system authentication logs to identify any unusual login attempts or patterns that coincide with the alert.
- Analyze network logs for any suspicious outbound connections or data exfiltration attempts following the alert.
- Cross-reference the alert with other security tools and logs to identify any additional indicators of compromise or related suspicious activities.

### False positive analysis

- Routine administrative tasks: System administrators may regularly update or modify the Doas configuration file as part of legitimate system maintenance or configuration changes. These activities can trigger the detection rule but are not indicative of malicious behavior.
- Software updates: Certain software installations or updates might modify the Doas configuration file to ensure compatibility or to set specific permissions, leading to false positives.
- Configuration management tools: Automated tools like Ansible, Puppet, or Chef might alter the Doas configuration file as part of their normal operation, which can be mistaken for suspicious activity.
- To manage these false positives, users can create exceptions for known administrative activities or trusted software processes by whitelisting specific users or processes that are authorized to modify the Doas configuration file. Additionally, maintaining a log of legitimate changes and correlating them with detected events can help differentiate between benign and suspicious modifications.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Verify the integrity of the Doas configuration file by comparing it with a known good backup or baseline configuration.
- Conduct a thorough investigation to identify any unauthorized changes or suspicious activities in the system logs, focusing on user access and command execution patterns.
- Revert any unauthorized changes to the Doas configuration file and restore it from a trusted backup if necessary.
- Change all potentially compromised user credentials, especially those with elevated privileges, to prevent further unauthorized access.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging and monitoring for critical configuration files and privileged command executions to detect future unauthorized changes.
- Integrate security information and event management (SIEM) solutions to correlate events and improve threat detection capabilities.
- Apply system hardening measures, such as restricting access to configuration files and enforcing the principle of least privilege for user accounts.
- Conduct a post-incident review to identify gaps in security controls and update policies and procedures to prevent similar incidents in the future."""

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1548"
name = "Abuse Elevation Control Mechanism"
reference = "https://attack.mitre.org/techniques/T1548/"

[[rule.threat.technique.subtechnique]]
id = "T1548.003"
name = "Sudo and Sudo Caching"
reference = "https://attack.mitre.org/techniques/T1548/003/"

[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"
