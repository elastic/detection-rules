[metadata]
creation_date = "2024/08/28"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
This rule detects the installation of root certificates on a Linux system. Adversaries may install a root certificate on
a compromised system to avoid warnings when connecting to their command and control servers. Root certificates are used
in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the
system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.
"""
from = "now-9m"
index = ["logs-endpoint.events.process*"]
language = "eql"
license = "Elastic License v2"
name = "Root Certificate Installation"
references = ["https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.004/T1553.004.md"]
risk_score = 47
rule_id = "6ded0996-7d4b-40f2-bf4a-6913e7591795"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Defense Evasion",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
process where host.os.type == "linux" and event.type == "start" and event.action == "exec" and
process.name in ("update-ca-trust", "update-ca-certificates") and not (
  process.parent.name like (
    "ca-certificates.postinst", "ca-certificates-*.trigger", "pacman", "pamac-daemon", "autofirma.postinst",
    "ipa-client-install", "su", "platform-python", "python*", "kesl", "execd"
  ) or
  process.parent.args like "/var/tmp/rpm*" or
  (process.parent.name in ("sh", "bash", "zsh") and process.args == "-e")
)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Root Certificate Installation

Root certificates are pivotal in establishing trust in digital communications, as they validate the authenticity of other certificates in a chain. Adversaries may exploit this by installing rogue root certificates on Linux systems, thus bypassing security warnings and facilitating undetected communication with malicious servers. The detection rule identifies suspicious certificate installations by monitoring specific processes and excluding legitimate parent processes, thereby highlighting potential unauthorized activities.

### Possible investigation steps

- Review the alert details to identify the specific process name and parent process name involved in the root certificate installation attempt.
- Verify the legitimacy of the process by checking the command line arguments and execution context, focusing on the `process.name` and `process.parent.name` fields.
- Investigate the parent process to determine if it is a known and trusted application or script, using the `process.parent.args` field for additional context.
- Check the user account associated with the process execution to determine if it aligns with expected behavior for root certificate installations.
- Use Osquery to list all installed root certificates and their details to identify any recent or suspicious additions. Example query: `SELECT * FROM certificates WHERE common_name LIKE '%<suspicious_common_name>%' OR issuer LIKE '%<suspicious_issuer>%';`
- Examine system logs for any related activities or anomalies around the time of the alert to gather more context on the event.
- Cross-reference the alert with any recent changes or updates to the system that might explain the certificate installation.
- Investigate network connections from the host to identify any unusual or unauthorized communication with external servers.
- Review any recent user activity or access logs to determine if there were any unauthorized access attempts or privilege escalations.
- Consult threat intelligence sources to check if the certificate or associated processes are linked to known malicious activities or threat actors.

### False positive analysis

- Legitimate software updates or installations may trigger the rule if they involve updating root certificates, such as during system updates or package installations. These processes often use "update-ca-trust" or "update-ca-certificates" but are typically initiated by trusted parent processes.
- System administrators or automated scripts performing routine maintenance or configuration changes might also cause false positives. These activities are generally benign and can be identified by their consistent patterns or known parent processes.
- To manage these false positives, users can create exceptions for specific parent processes or command-line arguments that are known to be safe. This can be done by adding these processes to the exclusion list in the detection rule, ensuring that only truly suspicious activities are flagged.
- Monitoring the frequency and context of the alerts can help in distinguishing between legitimate and malicious activities. If a particular process frequently triggers the rule but is verified as safe, it can be added to the exclusion criteria to reduce noise.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further communication with potential malicious servers.
- Conduct a thorough investigation to identify any unauthorized root certificates installed on the system and remove them.
- Review system logs and process execution history to trace the origin of the unauthorized certificate installation and identify any other compromised systems.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if the attack is part of a larger campaign.
- Implement enhanced logging policies to capture detailed process execution and network activity, ensuring that future unauthorized certificate installations are detected promptly.
- Integrate threat intelligence feeds to correlate the incident with known threat actors or campaigns, leveraging MITRE ATT&CK framework details for context.
- Restore the system to its operational state by reinstalling the operating system or restoring from a clean backup, ensuring all unauthorized changes are removed.
- Apply system hardening measures, such as restricting certificate installation permissions and implementing application whitelisting to prevent unauthorized software execution.
- Conduct a security awareness training session for users and administrators to recognize and report suspicious activities related to certificate management.
- Regularly review and update security policies and procedures to address gaps identified during the incident response and ensure robust defenses against similar threats in the future."""

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1553"
name = "Subvert Trust Controls"
reference = "https://attack.mitre.org/techniques/T1553/"

[[rule.threat.technique.subtechnique]]
id = "T1553.004"
name = "Install Root Certificate"
reference = "https://attack.mitre.org/techniques/T1553/004/"

[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"
