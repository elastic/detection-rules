[metadata]
creation_date = "2023/06/26"
integration = ["endpoint"]
maturity = "production"
min_stack_comments = "The linux.advanced.capture_env_vars option for Elastic Defend has been introduced in 8.6.0"
min_stack_version = "8.6.0"
updated_date = "2023/06/26"

[rule]
author = ["Elastic"]
description = """
This rule detects the execution of a process where the LD_PRELOAD environment variable is set. LD_PRELOAD can be used to
inject a shared library into a binary at or prior to execution. A threat actor may do this in order to load a malicious
shared library for the purposes of persistence, privilege escalation, and defense evasion. This activity is not common
and will potentially indicate malicious or suspicious behavior.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Process Injection via LD_PRELOAD Environment Variable"
note = """## Setup
By default, the `Elastic Defend` integration does not collect environment variable logging. In order to capture this behavior, this rule requires a specific configuration option set within the advanced settings of the `Elastic Defend` integration. 
```
Kibana -->
Fleet -->
Agent policies -->
Agent policy for which the option should be enabled -->
Name of the Elastic Defend integration --> 
Show advanced settings -->
linux.advanced.capture_env_vars
```
`linux.advanced.capture_env_vars` should be set to `LD_PRELOAD,LD_LIBRARY_PATH`. 
After saving the integration change, the Elastic Agents running this policy will be updated and the rule will function properly.
"""
references = ["https://www.getambassador.io/resources/code-injection-on-linux-and-macos"]
risk_score = 47
rule_id = "4973e46b-a663-41b8-a875-ced16dda2bb0"
severity = "medium"
tags = ["Domain: Endpoint", "OS: Linux", "Use Case: Threat Detection", "Tactic: Defense Evasion", "Tactic: Persistence", "Tactic: Privilege Escalation"]
timestamp_override = "event.ingested"
type = "eql"
query = '''
process where host.os.type == "linux" and 
 event.action == "exec" and  
 process.env_vars : ("LD_PRELOAD=?*", "LD_LIBRARY_PATH=?*") 
'''

[[rule.threat]]
framework = "MITRE ATT&CK"

[rule.threat.tactic]
name = "Defense Evasion"
id = "TA0005"
reference = "https://attack.mitre.org/tactics/TA0005/"

[[rule.threat.technique]]
name = "Hijack Execution Flow"
id = "T1574"
reference = "https://attack.mitre.org/techniques/T1574/"

[[rule.threat.technique.subtechnique]]
name = "Dynamic Linker Hijacking"
id = "T1574.006"
reference = "https://attack.mitre.org/techniques/T1574/006/"

[[rule.threat]]
framework = "MITRE ATT&CK"

[rule.threat.tactic]
name = "Persistence"
id = "TA0003"
reference = "https://attack.mitre.org/tactics/TA0003/"

[[rule.threat.technique]]
name = "Hijack Execution Flow"
id = "T1574"
reference = "https://attack.mitre.org/techniques/T1574/"

[[rule.threat.technique.subtechnique]]
name = "Dynamic Linker Hijacking"
id = "T1574.006"
reference = "https://attack.mitre.org/techniques/T1574/006/"

[[rule.threat]]
framework = "MITRE ATT&CK"

[rule.threat.tactic]
name = "Privilege Escalation"
id = "TA0004"
reference = "https://attack.mitre.org/tactics/TA0004/"

[[rule.threat.technique]]
name = "Hijack Execution Flow"
id = "T1574"
reference = "https://attack.mitre.org/techniques/T1574/"

[[rule.threat.technique.subtechnique]]
name = "Dynamic Linker Hijacking"
id = "T1574.006"
reference = "https://attack.mitre.org/techniques/T1574/006/"
