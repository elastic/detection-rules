[metadata]
creation_date = "2020/12/22"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Identifies the use of a compression utility to collect known files containing sensitive information, such as credentials
and system configurations.
"""
from = "now-9m"
index = ["auditbeat-*", "logs-endpoint.events.*", "endgame-*"]
language = "kuery"
license = "Elastic License v2"
name = "Sensitive Files Compression"
references = [
    "https://www.trendmicro.com/en_ca/research/20/l/teamtnt-now-deploying-ddos-capable-irc-bot-tntbotinger.html",
]
risk_score = 47
rule_id = "6b84d470-9036-4cc0-a27c-6d90bbfe81ab"
setup = """## Setup

This rule requires data coming in from one of the following integrations:
- Elastic Defend
- Auditbeat


### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows
the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either "Traditional Endpoints" or "Cloud Workloads".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest to select "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).

### Auditbeat Setup
Auditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.

#### The following steps should be executed in order to add the Auditbeat on a Linux System:
- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.
- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).
- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).
- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).
- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Collection",
    "Tactic: Credential Access",
    "Data Source: Elastic Endgame",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "new_terms"

query = '''
event.category:process and host.os.type:linux and event.type:start and
  process.name:(zip or tar or gzip or hdiutil or 7z) and
  process.args:
    (
      /root/.ssh/id_rsa or
      /root/.ssh/id_rsa.pub or
      /root/.ssh/id_ed25519 or
      /root/.ssh/id_ed25519.pub or
      /root/.ssh/authorized_keys or
      /root/.ssh/authorized_keys2 or
      /root/.ssh/known_hosts or
      /root/.bash_history or
      /etc/hosts or
      /home/*/.ssh/id_rsa or
      /home/*/.ssh/id_rsa.pub or
      /home/*/.ssh/id_ed25519 or
      /home/*/.ssh/id_ed25519.pub or
      /home/*/.ssh/authorized_keys or
      /home/*/.ssh/authorized_keys2 or
      /home/*/.ssh/known_hosts or
      /home/*/.bash_history or
      /root/.aws/credentials or
      /root/.aws/config or
      /home/*/.aws/credentials or
      /home/*/.aws/config or
      /root/.docker/config.json or
      /home/*/.docker/config.json or
      /etc/group or
      /etc/passwd or
      /etc/shadow or
      /etc/gshadow
    )
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Sensitive Files Compression

Compression utilities like zip, tar, and gzip are commonly used to reduce file sizes for storage or transfer. Adversaries exploit these tools to bundle sensitive files, such as SSH keys or configuration files, for exfiltration. The detection rule identifies suspicious compression activities by monitoring process executions involving these utilities and targeting known sensitive file paths, thus alerting analysts to potential credential theft attempts.

### Possible investigation steps

- Review the alert details to identify the specific process name and arguments that triggered the alert, focusing on the compression utility used (e.g., zip, tar, gzip).
- Check the timestamp of the event to determine when the suspicious compression activity occurred and correlate it with other events around the same time.
- Investigate the user account associated with the process execution to determine if the activity aligns with their typical behavior or if it appears suspicious.
- Examine the command line arguments to identify the specific sensitive files targeted for compression and verify if these files are indeed present on the system.
- Use Osquery to list recent process executions involving compression utilities with the following query: `SELECT pid, name, path, cmdline, start_time FROM processes WHERE name IN ('zip', 'tar', 'gzip', 'hdiutil', '7z');`
- Analyze system logs for any signs of unauthorized access or privilege escalation that might have preceded the compression activity.
- Check for any network connections or data transfer activities initiated by the user or process around the time of the alert to identify potential exfiltration attempts.
- Investigate the file system for any newly created or modified compressed files that match the suspicious activity, focusing on their location and contents.
- Review the system's audit logs to track any file access or modification events related to the sensitive files listed in the alert.
- Cross-reference the alert with other security tools and logs to gather additional context and determine if this activity is part of a broader attack pattern.

### False positive analysis

- Routine administrative tasks: System administrators may regularly compress sensitive files for legitimate backup or transfer purposes. To manage this, users can create exceptions for known administrative accounts or specific time windows when these tasks are expected.
- Automated backup processes: Some systems may have scheduled jobs that compress sensitive files for backup. Users should identify and whitelist these processes by their specific command patterns or associated service accounts.
- Development and testing activities: Developers might compress configuration files or credentials during testing or development. Users can exclude these activities by specifying development environments or user accounts involved in these tasks.
- Security audits and compliance checks: Security teams may compress sensitive files as part of audits or compliance checks. Users should document and exclude these activities by recognizing the tools and accounts used during such operations.
- Custom scripts or tools: Organizations might use custom scripts that compress sensitive files for internal processes. Users should review these scripts and exclude them by their unique signatures or execution paths.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further data exfiltration.
- Conduct a thorough investigation to identify the scope of the compromise, focusing on the processes and files involved in the suspicious compression activity.
- Review system logs and process execution history to determine if any sensitive files were successfully exfiltrated.
- Change all potentially compromised credentials, including SSH keys and AWS credentials, and update any related configurations.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging policies to capture detailed process execution and file access events, ensuring future suspicious activities are detected promptly.
- Integrate security tools with threat intelligence platforms to correlate alerts with known threat actor tactics, techniques, and procedures (TTPs) from the MITRE ATT&CK framework.
- Restore the system to its operational state by reinstalling the operating system and applications from trusted sources, ensuring all security patches are applied.
- Harden the system by implementing least privilege access controls, disabling unused services, and enforcing strong authentication mechanisms.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans to improve future detection and response capabilities."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1552"
name = "Unsecured Credentials"
reference = "https://attack.mitre.org/techniques/T1552/"
[[rule.threat.technique.subtechnique]]
id = "T1552.001"
name = "Credentials In Files"
reference = "https://attack.mitre.org/techniques/T1552/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1560"
name = "Archive Collected Data"
reference = "https://attack.mitre.org/techniques/T1560/"
[[rule.threat.technique.subtechnique]]
id = "T1560.001"
name = "Archive via Utility"
reference = "https://attack.mitre.org/techniques/T1560/001/"



[rule.threat.tactic]
id = "TA0009"
name = "Collection"
reference = "https://attack.mitre.org/tactics/TA0009/"

[rule.new_terms]
field = "new_terms_fields"
value = ["host.id", "process.command_line", "process.parent.executable"]
[[rule.new_terms.history_window_start]]
field = "history_window_start"
value = "now-10d"


