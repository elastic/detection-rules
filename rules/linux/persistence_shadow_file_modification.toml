[metadata]
creation_date = "2024/07/05"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
This rule monitors for Linux Shadow file modifications. These modifications are indicative of a potential password
change or user addition event. Threat actors may attempt to create new users or change the password of a user account to
maintain access to a system.
"""
from = "now-9m"
index = ["logs-endpoint.events.file*"]
language = "eql"
license = "Elastic License v2"
name = "Shadow File Modification"
references = ["https://www.elastic.co/security-labs/primer-on-persistence-mechanisms"]
risk_score = 21
rule_id = "cdf1a39b-1ca5-4e2a-9739-17fc4d026029"
setup = """## Setup

This rule requires data coming in from Elastic Defend.

### Elastic Defend Integration Setup
Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows
the Elastic Agent to monitor events on your host and send data to the Elastic Security app.

#### Prerequisite Requirements:
- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).

#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:
- Go to the Kibana home page and click Add integrations.
- In the query bar, search for Elastic Defend and select the integration to see more details about it.
- Click Add Elastic Defend.
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, either Traditional Endpoints or Cloud Workloads.
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).
- We suggest to select "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in New agent policy name. If other agent policies already exist, you can click the Existing hosts tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).
- Click Save and Continue.
- To complete the integration, select Add Elastic Agent to your hosts and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).
"""
severity = "low"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "Use Case: Threat Detection",
    "Tactic: Persistence",
    "Tactic: Privilege Escalation",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "eql"
query = '''
file where host.os.type == "linux" and event.type == "change" and event.action == "rename" and
file.path == "/etc/shadow" and file.Ext.original.path != null
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Shadow File Modification

The shadow file in Linux systems securely stores hashed user passwords, crucial for system authentication. Adversaries may exploit this by altering the file to add users or change passwords, ensuring persistent access. The detection rule identifies suspicious modifications by monitoring changes and renames of the shadow file, signaling potential unauthorized account manipulation activities.

### Possible investigation steps

- Verify the alert details, including the timestamp and the host where the modification was detected, to understand the context of the event.
- Check the user account associated with the event to determine if it is a legitimate system administrator or a potential threat actor.
- Review recent login activity on the affected host to identify any unusual or unauthorized access attempts around the time of the shadow file modification.
- Use Osquery to list all users on the system and check for any newly added or suspicious accounts. Example query: `SELECT * FROM users WHERE uid >= 1000;`
- Investigate the process tree to identify any processes that were running at the time of the modification, which might indicate the tool or method used for the change.
- Examine the system logs, such as `/var/log/auth.log` or `/var/log/secure`, for any entries that correlate with the time of the shadow file modification.
- Check for any recent changes to the `/etc/passwd` file, as modifications here might accompany changes to the shadow file.
- Review the file integrity monitoring logs to see if there are any other unauthorized changes to critical system files.
- Investigate any network connections from the host around the time of the event to identify potential command and control activity.
- Correlate the event with other security alerts or incidents in the environment to determine if this is part of a larger attack campaign.

### False positive analysis

- Routine system updates or administrative tasks may trigger legitimate changes to the shadow file, such as when a system administrator updates user passwords or adds new users as part of regular maintenance.
- Automated scripts or configuration management tools like Ansible, Puppet, or Chef that manage user accounts and passwords can also cause expected modifications to the shadow file.
- To manage these false positives, users can create exceptions for known administrative activities or trusted scripts by correlating the changes with scheduled maintenance windows or specific user actions.
- Implementing a whitelist of trusted processes or users that are allowed to modify the shadow file can help reduce noise from expected changes.
- Regularly review and update the list of exceptions to ensure that only legitimate activities are excluded, maintaining a balance between security and operational efficiency.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.
- Verify the integrity of the shadow file by comparing it with a known good backup, if available, to identify unauthorized changes.
- Conduct a thorough investigation to identify any unauthorized user accounts or password changes and remove or reset them as necessary.
- Review system logs and security alerts to trace the source of the modification and determine if other systems may be compromised.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and response.
- Restore the shadow file from a secure backup if unauthorized changes are confirmed and ensure all legitimate user accounts are intact.
- Implement enhanced logging and monitoring for critical system files, including the shadow file, to detect future unauthorized modifications.
- Integrate with security information and event management (SIEM) systems to correlate events and improve detection capabilities.
- Apply system hardening measures, such as enforcing strong password policies and disabling unnecessary services, to reduce the attack surface.
- Conduct a post-incident review to identify gaps in security controls and update incident response plans and procedures accordingly."""

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1098"
name = "Account Manipulation"
reference = "https://attack.mitre.org/techniques/T1098/"

[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1098"
name = "Account Manipulation"
reference = "https://attack.mitre.org/techniques/T1098/"

[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"
