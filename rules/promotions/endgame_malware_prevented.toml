[metadata]
creation_date = "2020/02/18"
maturity = "production"
promotion = true
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Elastic Endgame prevented Malware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
"""
from = "now-15m"
index = ["endgame-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
max_signals = 10000
name = "Malware - Prevented - Elastic Endgame"
risk_score = 73
rule_id = "3b382770-efbb-44f4-beed-f5e0a051b895"
setup = """## Setup

This rule is configured to generate more **Max alerts per run** than the default 1000 alerts per run set for all rules. This is to ensure that it captures as many alerts as possible.

**IMPORTANT:** The rule's **Max alerts per run** setting can be superseded by the `xpack.alerting.rules.run.alerts.max` Kibana config setting, which determines the maximum alerts generated by _any_ rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, this rule will still generate no more than 1000 alerts even if its own **Max alerts per run** is set higher.

To make sure this rule can generate as many alerts as it's configured in its own **Max alerts per run** setting, increase the `xpack.alerting.rules.run.alerts.max` system setting accordingly.

**NOTE:** Changing `xpack.alerting.rules.run.alerts.max` is not possible in Serverless projects."""
severity = "high"
tags = ["Data Source: Elastic Endgame"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Malware - Prevented - Elastic Endgame

Elastic Endgame is a security solution designed to prevent malware by leveraging advanced threat detection and prevention techniques. It monitors system activities and classifies files to identify and block malicious actions. Adversaries may attempt to bypass these defenses by disguising malware as legitimate files. The detection rule identifies such threats by focusing on alerts where file classification events indicate prevention actions, ensuring that any attempt to execute or propagate malware is promptly detected and mitigated.

### Possible investigation steps

- Review the alert details in the security dashboard to understand the context and specifics of the prevention event, focusing on the `event.kind:alert` and `event.module:endgame` fields.
- Examine the `endgame.metadata.type:prevention` field to confirm that the alert is related to a prevention action, ensuring that the threat was blocked before execution.
- Analyze the `event.action:file_classification_event` or `endgame.event_subtype_full:file_classification_event` fields to identify the type of file classification event that triggered the alert.
- Investigate the file path and hash of the suspected malicious file to determine its origin and whether it matches known malware signatures.
- Use Osquery to gather additional context about the file and its behavior on the system. For example, run the following Osquery query to check for any related processes: `SELECT * FROM processes WHERE path = '/path/to/suspected/file';`
- Check the system's recent file modification and creation events to identify any suspicious activities that occurred around the time of the alert.
- Review user activity logs to determine if any user actions could have inadvertently triggered the alert, focusing on any recent downloads or executed files.
- Correlate the alert with other security events in the environment to identify potential patterns or related incidents that could indicate a broader attack campaign.
- Consult threat intelligence sources to see if the file hash or any related indicators of compromise (IOCs) are associated with known threat actors or malware campaigns.
- Document all findings and observations in the investigation report, ensuring that all relevant details from the alert and subsequent analysis are captured for future reference.

### False positive analysis

- Known false positives for the Malware - Prevented - Elastic Endgame rule may include legitimate software that mimics malware behavior, such as software updates or installers that modify system files in a manner similar to malware.
- Users can handle these false positives by creating exceptions for specific file paths or processes that are known to be safe, ensuring that these legitimate activities are not flagged as threats.
- It is important to regularly review and update these exceptions to accommodate new software versions or changes in system behavior, minimizing the risk of overlooking genuine threats.
- Users should also consider the context of the alert, such as the source and destination of the file or process, to determine if the behavior is expected and non-threatening.
- Implementing a feedback loop with security teams can help refine detection rules and reduce the occurrence of false positives by incorporating insights from past incidents.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of the malware.
- Verify the alert by cross-referencing with other security logs and alerts to confirm the presence of malware.
- Conduct a thorough investigation to identify the source and entry point of the malware, using available forensic tools and techniques.
- Remove the identified malware from the system using trusted antivirus or anti-malware solutions.
- Restore the system from a clean backup if the malware has caused significant damage or if removal is not feasible.
- Update all security software and apply the latest patches to the operating system and applications to close any vulnerabilities.
- Implement enhanced logging policies to capture detailed system and network activities for future investigations.
- Integrate additional security solutions, such as endpoint detection and response (EDR) tools, to improve threat visibility and response capabilities.
- Escalate the incident to the appropriate internal or external teams if the malware is part of a larger attack campaign or if sensitive data has been compromised.
- Conduct a post-incident review to identify gaps in the security posture and apply hardening measures, such as disabling unnecessary services and enforcing least privilege access controls."""

