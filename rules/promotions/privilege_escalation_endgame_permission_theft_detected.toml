[metadata]
creation_date = "2020/02/18"
maturity = "production"
promotion = true
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Elastic Endgame detected Permission Theft. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
"""
from = "now-15m"
index = ["endgame-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
max_signals = 10000
name = "Permission Theft - Detected - Elastic Endgame"
risk_score = 73
rule_id = "c3167e1b-f73c-41be-b60b-87f4df707fe3"
setup = """## Setup

This rule is configured to generate more **Max alerts per run** than the default 1000 alerts per run set for all rules. This is to ensure that it captures as many alerts as possible.

**IMPORTANT:** The rule's **Max alerts per run** setting can be superseded by the `xpack.alerting.rules.run.alerts.max` Kibana config setting, which determines the maximum alerts generated by _any_ rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, this rule will still generate no more than 1000 alerts even if its own **Max alerts per run** is set higher.

To make sure this rule can generate as many alerts as it's configured in its own **Max alerts per run** setting, increase the `xpack.alerting.rules.run.alerts.max` system setting accordingly.

**NOTE:** Changing `xpack.alerting.rules.run.alerts.max` is not possible in Serverless projects."""
severity = "high"
tags = ["Data Source: Elastic Endgame", "Use Case: Threat Detection", "Tactic: Privilege Escalation"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:token_protection_event or endgame.event_subtype_full:token_protection_event)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Permission Theft - Detected - Elastic Endgame

Elastic Endgame is a security solution that monitors and detects suspicious activities, such as permission theft, within an environment. Adversaries may exploit access token manipulation to escalate privileges, gaining unauthorized access to resources. The detection rule identifies such threats by analyzing alert events related to token protection, leveraging specific event actions and metadata to pinpoint malicious activities.

### Possible investigation steps

- Review the alert details in the Elastic Endgame console by clicking the Elastic Endgame icon in the event.module column or the link in the rule.reference column to gather initial context about the alert.
- Examine the event.kind field to confirm that the alert is indeed an alert type and not a false positive or benign event.
- Check the event.module field to ensure the alert is generated by the endgame module, confirming the source of the detection.
- Analyze the endgame.metadata.type field to verify that the alert is categorized as a detection, indicating a potential security threat.
- Investigate the event.action and endgame.event_subtype_full fields to determine if the alert is related to token_protection_event, which is indicative of potential access token manipulation.
- Correlate the alert with other related events in the same timeframe to identify any patterns or additional suspicious activities that might be associated with the permission theft.
- Use Osquery to gather more information about the processes and tokens involved. For example, run the following Osquery query to list processes with suspicious token privileges: `SELECT pid, name, path, uid, gid FROM processes WHERE on_disk = 1 AND (name LIKE '%token%' OR path LIKE '%token%');`
- Investigate the user account associated with the alert to determine if there are any signs of compromise or unauthorized access attempts.
- Review system logs and security logs for any anomalies or unusual activities around the time of the alert to gather additional context.
- Cross-reference the alert with known MITRE ATT&CK techniques, specifically Privilege Escalation (TA0004) and Access Token Manipulation (T1134), to understand the potential tactics and techniques used by the adversary.

### False positive analysis

- Known false positives for the Permission Theft - Detected - Elastic Endgame rule may include legitimate administrative actions where access tokens are manipulated as part of routine system maintenance or software updates. 
- Security tools or scripts that automate token management for legitimate purposes might trigger alerts, as they can mimic the behavior of malicious token manipulation.
- To manage these false positives, users can create exceptions for specific processes or scripts that are known to perform legitimate token manipulation. This can be done by identifying the process names or hashes and excluding them from triggering alerts.
- Regularly review and update the list of exceptions to ensure that only verified non-threatening behaviors are excluded, maintaining a balance between security and operational efficiency.
- Implementing a baseline of normal token manipulation activities within the environment can help in distinguishing between legitimate and suspicious actions, reducing the likelihood of false positives.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.
- Conduct a thorough investigation to identify the source and scope of the permission theft, focusing on the compromised access tokens and any associated user accounts.
- Revoke and reset credentials for any compromised accounts and invalidate any active sessions to prevent further exploitation.
- Review and analyze security logs and alerts to identify any additional suspicious activities or indicators of compromise related to access token manipulation.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional resources or expertise are required.
- Implement enhanced logging and monitoring policies to capture detailed information on access token usage and privilege escalation attempts for future investigations.
- Integrate additional security tools and solutions, such as endpoint detection and response (EDR) and security information and event management (SIEM) systems, to improve detection and response capabilities.
- Restore the affected system to its operational state by applying security patches, updating software, and ensuring all security configurations are properly set.
- Conduct a post-incident review to identify gaps in security controls and processes, and implement hardening measures such as enforcing least privilege access and multi-factor authentication.
- Educate and train employees on recognizing and reporting suspicious activities, emphasizing the importance of maintaining strong, unique passwords and adhering to security best practices."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1134"
name = "Access Token Manipulation"
reference = "https://attack.mitre.org/techniques/T1134/"


[rule.threat.tactic]
id = "TA0004"
name = "Privilege Escalation"
reference = "https://attack.mitre.org/tactics/TA0004/"

