[metadata]
creation_date = "2020/02/18"
maturity = "production"
promotion = true
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Elastic Endgame detected Malware. Click the Elastic Endgame icon in the event.module column or the link in the
rule.reference column for additional information.
"""
from = "now-15m"
index = ["endgame-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
max_signals = 10000
name = "Malware - Detected - Elastic Endgame"
risk_score = 99
rule_id = "0a97b20f-4144-49ea-be32-b540ecc445de"
setup = """## Setup

This rule is configured to generate more **Max alerts per run** than the default 1000 alerts per run set for all rules. This is to ensure that it captures as many alerts as possible.

**IMPORTANT:** The rule's **Max alerts per run** setting can be superseded by the `xpack.alerting.rules.run.alerts.max` Kibana config setting, which determines the maximum alerts generated by _any_ rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, this rule will still generate no more than 1000 alerts even if its own **Max alerts per run** is set higher.

To make sure this rule can generate as many alerts as it's configured in its own **Max alerts per run** setting, increase the `xpack.alerting.rules.run.alerts.max` system setting accordingly.

**NOTE:** Changing `xpack.alerting.rules.run.alerts.max` is not possible in Serverless projects."""
severity = "critical"
tags = ["Data Source: Elastic Endgame"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Malware - Detected - Elastic Endgame

Elastic Endgame is a security solution that leverages advanced detection capabilities to identify malware threats within an environment. It monitors file classification events to detect suspicious activities. Adversaries may exploit file systems to execute or hide malware. The detection rule identifies alerts from the Endgame module, focusing on file classification events, to pinpoint potential malware activities, enabling timely threat response.

### Possible investigation steps

- Review the alert details in the security dashboard to understand the context and specifics of the detection, focusing on the `event.kind:alert` and `event.module:endgame` fields.
- Examine the `endgame.metadata.type:detection` field to confirm the type of detection and ensure it aligns with the expected behavior of the Elastic Endgame module.
- Investigate the `event.action:file_classification_event` or `endgame.event_subtype_full:file_classification_event` fields to identify the specific file classification event that triggered the alert.
- Cross-reference the file path and hash values of the suspicious file with known malware databases to determine if it is a known threat.
- Utilize Osquery to gather additional context about the file and its behavior on the system. For example, run the following Osquery query to list processes associated with the suspicious file: `SELECT * FROM processes WHERE path = '/path/to/suspicious/file';`
- Check the system's recent file modification and creation events to identify any unusual activities around the time of the alert.
- Analyze the parent process of the suspicious file to understand how it was executed and whether it was initiated by a legitimate application or process.
- Review network connections established by the system around the time of the alert to identify any suspicious outbound connections that may indicate data exfiltration or command-and-control communication.
- Investigate user activity on the affected system to determine if any unauthorized actions were performed that could have led to the execution of the malware.
- Correlate the alert with other security events and logs from the same timeframe to identify any patterns or additional indicators of compromise that may suggest a broader attack campaign.

### False positive analysis

- Known false positives for the Malware - Detected - Elastic Endgame rule may include legitimate software updates or installations that mimic malware behavior, such as file classification events triggered by trusted applications.
- Users can manage these false positives by creating exceptions for specific applications or processes that are known to generate benign file classification events, ensuring these are well-documented and regularly reviewed to maintain security integrity.
- Another common false positive scenario involves automated scripts or system maintenance tasks that access or modify files in a manner similar to malware; these can be excluded by identifying and whitelisting the specific scripts or tasks involved.
- To handle frequent non-threatening behaviors, users should leverage the exclusion capabilities within Elastic Endgame to filter out alerts from known safe sources, reducing noise and focusing on genuine threats.
- Regularly updating the list of exceptions and exclusions based on the latest threat intelligence and organizational changes can help maintain an effective balance between security and operational efficiency.

### Response and remediation

- Isolate the affected system from the network to prevent further spread of the malware.
- Conduct a thorough investigation of the alert by reviewing the file classification events and any related logs to understand the scope and impact.
- Utilize Elastic Endgame's detailed event data to identify the malware's entry point and any lateral movement within the network.
- Remove the detected malware by using updated antivirus or anti-malware tools, ensuring that the system is clean.
- Apply security patches and updates to the operating system and all installed software to close any vulnerabilities exploited by the malware.
- Escalate the incident to the security operations center (SOC) or incident response team if the malware is part of a larger attack campaign or if it involves sensitive data.
- Implement enhanced logging policies to capture detailed file system activities and network traffic for future investigations.
- Integrate Elastic Endgame with other security tools such as SIEMs for improved threat detection and response capabilities.
- Restore the system to its operational state by verifying the integrity of system files and configurations, and ensure that backups are clean before restoring any data.
- Strengthen system defenses by applying security hardening measures, such as disabling unnecessary services, enforcing strong password policies, and conducting regular security audits."""

