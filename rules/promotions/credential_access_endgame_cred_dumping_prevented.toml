[metadata]
creation_date = "2020/02/18"
maturity = "production"
promotion = true
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = """
Elastic Endgame prevented Credential Dumping. Click the Elastic Endgame icon in the event.module column or the link in
the rule.reference column for additional information.
"""
from = "now-15m"
index = ["endgame-*"]
interval = "10m"
language = "kuery"
license = "Elastic License v2"
max_signals = 10000
name = "Credential Dumping - Prevented - Elastic Endgame"
risk_score = 47
rule_id = "db8c33a8-03cd-4988-9e2c-d0a4863adb13"
setup = """## Setup

This rule is configured to generate more **Max alerts per run** than the default 1000 alerts per run set for all rules. This is to ensure that it captures as many alerts as possible.

**IMPORTANT:** The rule's **Max alerts per run** setting can be superseded by the `xpack.alerting.rules.run.alerts.max` Kibana config setting, which determines the maximum alerts generated by _any_ rule in the Kibana alerting framework. For example, if `xpack.alerting.rules.run.alerts.max` is set to 1000, this rule will still generate no more than 1000 alerts even if its own **Max alerts per run** is set higher.

To make sure this rule can generate as many alerts as it's configured in its own **Max alerts per run** setting, increase the `xpack.alerting.rules.run.alerts.max` system setting accordingly.

**NOTE:** Changing `xpack.alerting.rules.run.alerts.max` is not possible in Serverless projects."""
severity = "medium"
tags = ["Data Source: Elastic Endgame", "Use Case: Threat Detection", "Tactic: Credential Access"]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:cred_theft_event or endgame.event_subtype_full:cred_theft_event)
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Credential Dumping - Prevented - Elastic Endgame

Elastic Endgame is a security solution designed to prevent unauthorized access by detecting and blocking credential dumping attempts, a common tactic used by adversaries to extract sensitive authentication data. Attackers exploit this by accessing stored credentials to escalate privileges or move laterally within a network. The detection rule identifies such threats by monitoring for specific alert types and actions indicative of credential theft, leveraging event data to preemptively thwart these malicious activities.

### Possible investigation steps

- Review the alert details to understand the context, focusing on the `event.kind:alert`, `event.module:endgame`, and `endgame.metadata.type:prevention` fields to confirm the alert type and source.
- Examine the `event.action:cred_theft_event` and `endgame.event_subtype_full:cred_theft_event` fields to identify the specific actions that triggered the alert, providing insight into the attempted credential dumping method.
- Check the timestamp of the alert to determine when the credential dumping attempt occurred and correlate it with other events in the network around the same time.
- Investigate the source IP address and hostname associated with the alert to identify the potentially compromised system and assess its role within the network.
- Analyze user account information involved in the alert to determine if the account is legitimate and if it has been used in any suspicious activities recently.
- Utilize Osquery to gather additional context from the affected system. For example, run the following Osquery query to check for suspicious processes related to credential dumping: `SELECT pid, name, path, cmdline FROM processes WHERE name IN ('lsass.exe', 'mimikatz.exe', 'procdump.exe');`
- Review recent login attempts and authentication logs on the affected system to identify any unauthorized access or failed login attempts that may indicate credential theft.
- Cross-reference the alert with other security tools and logs, such as firewall logs or intrusion detection systems, to gather more evidence of the attack vector and potential lateral movement.
- Investigate any recent changes to system configurations or installed software on the affected machine that could have facilitated the credential dumping attempt.
- Document all findings and evidence collected during the investigation to build a comprehensive timeline and understanding of the incident, which will aid in further analysis and reporting.

### False positive analysis

- Known false positives for the Credential Dumping - Prevented - Elastic Endgame rule may include legitimate administrative tools or scripts that access credential stores for authorized purposes, such as system management or software updates.
- Security software or backup solutions that scan or access credential files as part of their routine operations can also trigger false positives.
- Users can manage these false positives by creating exceptions for specific processes or applications that are known to perform legitimate credential access, ensuring these are well-documented and regularly reviewed.
- Implementing a whitelist of trusted applications and processes that are allowed to access credential stores can help reduce false positives while maintaining security.
- Regularly updating the list of exceptions and monitoring for any changes in behavior of these applications can help maintain a balance between security and operational efficiency.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further lateral movement by the attacker.
- Conduct a thorough investigation to identify the source and scope of the credential dumping attempt, utilizing Elastic Endgame logs and any other available security information.
- Reset passwords for all compromised accounts and consider implementing multi-factor authentication to enhance security.
- Review and update access controls and permissions to ensure the principle of least privilege is enforced across the network.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.
- Implement enhanced logging policies to capture detailed authentication and access events, aiding in future investigations.
- Integrate Elastic Endgame with other security tools such as SIEMs to improve threat detection and response capabilities.
- Restore the affected system to its operational state by reimaging it and applying the latest security patches and updates.
- Conduct a post-incident review to identify gaps in the security posture and update incident response plans accordingly.
- Implement hardening measures such as disabling unnecessary services, applying security baselines, and conducting regular security audits to reduce the risk of future credential dumping attempts."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"
[[rule.threat.technique.subtechnique]]
id = "T1003.001"
name = "LSASS Memory"
reference = "https://attack.mitre.org/techniques/T1003/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"

