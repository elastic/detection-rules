[metadata]
creation_date = "2024/05/08"
maturity = "production"
updated_date = "2025/01/08"
min_stack_comments = "ES|QL rule type is still in technical preview as of 8.13, however this rule was tested successfully"
min_stack_version = "8.13.0"

[rule]
author = ["Elastic"]
description = """
This rule uses alert data to determine when a malware signature is triggered in multiple hosts. Analysts can use this
to prioritize triage and response, as this can potentially indicate a widespread malware infection.
"""
from = "now-9m"
language = "esql"
license = "Elastic License v2"
name = "Potential Widespread Malware Infection Across Multiple Hosts"
references = [
    "https://github.com/elastic/protections-artifacts/tree/main/yara/rules"
]
risk_score = 73
rule_id = "28371aa1-14ed-46cf-ab5b-2fc7d1942278"
severity = "high"
tags = [
    "Domain: Endpoint",
    "Data Source: Elastic Defend",
    "Use Case: Threat Detection",
    "Tactic: Execution",
    "Rule Type: Higher-Order Rule"
]
timestamp_override = "event.ingested"
type = "esql"

query = '''
from logs-endpoint.alerts-*
| where event.code in ("malicious_file", "memory_signature", "shellcode_thread") and rule.name is not null
| keep host.id, rule.name, event.code
| stats hosts = count_distinct(host.id) by rule.name, event.code
| where hosts >= 3
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating Potential Widespread Malware Infection Across Multiple Hosts

Endpoint detection technologies monitor systems for signs of malicious activity, such as malware signatures or suspicious behavior. Adversaries exploit these systems by deploying malware across multiple hosts to maximize impact. The detection rule identifies potential widespread infections by flagging when malware indicators appear on three or more hosts, enabling analysts to prioritize and respond swiftly to potential threats.

### Possible investigation steps

- Review the alert details to understand which `rule.name` and `event.code` triggered the alert, focusing on the specific malware signatures or behaviors detected.
- Identify the affected hosts by examining the `host.id` field in the alert data to determine the scope of the potential infection.
- Cross-reference the `host.id` with asset management systems to gather additional context about the affected hosts, such as their role, operating system, and criticality.
- Use endpoint detection and response (EDR) tools to collect and analyze recent activity on the affected hosts, looking for unusual processes, network connections, or file modifications.
- Execute an Osquery to gather detailed information about running processes on the affected hosts. Example query: `SELECT pid, name, path, cmdline FROM processes WHERE host_id IN ('<affected_host_ids>');`
- Investigate any suspicious files or processes identified in the previous step by checking their hashes against threat intelligence databases to determine if they are known malware.
- Analyze network traffic logs for the affected hosts to identify any unusual outbound connections that may indicate command and control (C2) communication.
- Review user activity on the affected hosts to determine if any unauthorized or unexpected user actions occurred around the time of the alert.
- Check for any recent changes in system configurations or installed software on the affected hosts that could have introduced vulnerabilities.
- Document all findings and gather evidence to support further analysis or escalation, ensuring that all relevant data points, such as `rule.name`, `event.code`, and `host.id`, are included for context.

### False positive analysis

- Legitimate software updates or installations may trigger malware signatures, especially if they involve changes to system files or memory, leading to false positives. Users can manage these by creating exceptions for known update processes or trusted software vendors.
- Security tools or system management software that perform regular scans or updates might mimic suspicious behavior, such as executing shellcode or modifying memory, which could be flagged incorrectly. To handle this, users should whitelist these tools in the detection system.
- Custom scripts or administrative tools used for system maintenance might be misidentified as malicious if they perform actions similar to malware. Users can reduce false positives by excluding these scripts or tools from monitoring, provided they are verified as safe.
- Testing environments or sandboxed applications that simulate malware behavior for research or development purposes can trigger alerts. Users should ensure these environments are isolated and excluded from the detection rule to prevent unnecessary alerts.

### Response and remediation

- Isolate affected hosts from the network to prevent further spread of the malware and contain the infection.
- Conduct a thorough investigation on the isolated hosts to identify the malware variant and entry point, leveraging forensic tools and endpoint detection logs.
- Remove the identified malware from the affected systems using antivirus or specialized malware removal tools, ensuring all traces are eradicated.
- Apply security patches and updates to all systems to close vulnerabilities exploited by the malware, focusing on those related to the MITRE ATT&CK technique T1204: User Execution.
- Restore systems from clean backups if malware removal is unsuccessful, ensuring backups are free from infection before restoration.
- Escalate the incident to the security operations center (SOC) or incident response team if the infection is severe or cannot be contained, providing detailed findings from the investigation.
- Implement enhanced logging policies to capture detailed endpoint activity, including process execution and network connections, to improve future detection and analysis.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to enhance visibility and correlation of suspicious activities across the network.
- Conduct a post-incident review to identify gaps in the current security posture and update incident response plans accordingly.
- Implement hardening measures such as application whitelisting, user education on phishing, and least privilege access controls to reduce the risk of future infections."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1204"
name = "User Execution"
reference = "https://attack.mitre.org/techniques/T1204/"
[[rule.threat.technique.subtechnique]]
id = "T1204.002"
name = "Malicious File"
reference = "https://attack.mitre.org/techniques/T1204/002/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
