[metadata]
creation_date = "2021/01/12"
integration = ["endpoint"]
maturity = "production"
updated_date = "2025/01/08"

[rule]
author = ["Elastic"]
description = "Identifies the execution of and EggShell Backdoor. EggShell is a known post exploitation tool for macOS and Linux."
from = "now-9m"
index = ["auditbeat-*", "logs-endpoint.events.*"]
language = "kuery"
license = "Elastic License v2"
name = "EggShell Backdoor Execution"
references = ["https://github.com/neoneggplant/EggShell"]
risk_score = 73
rule_id = "41824afb-d68c-4d0e-bfee-474dac1fa56e"
severity = "high"
tags = [
    "Domain: Endpoint",
    "OS: Linux",
    "OS: macOS",
    "Use Case: Threat Detection",
    "Tactic: Execution",
    "Data Source: Elastic Defend",
]
timestamp_override = "event.ingested"
type = "query"

query = '''
event.category:process and event.type:(process_started or start) and process.name:espl and process.args:eyJkZWJ1ZyI6*
'''
note = """## Triage and analysis

### Disclaimer

This investigation guide was generated using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.

### Investigating EggShell Backdoor Execution

EggShell is a post-exploitation tool used on macOS and Linux systems, allowing adversaries to execute commands remotely, capture keystrokes, and access system data. Attackers exploit this tool to maintain persistence and control over compromised systems. The detection rule identifies suspicious process activities by monitoring specific process names and arguments, signaling potential EggShell execution, thus enabling timely threat response.

### Possible investigation steps

- Review the alert details to confirm the presence of the EggShell Backdoor Execution by verifying the process name `espl` and the process arguments starting with `eyJkZWJ1ZyI6`.
- Correlate the alert with other events in the same timeframe to identify any additional suspicious activities or related alerts.
- Use Osquery to list all running processes and check for any instances of the `espl` process to confirm its execution:
  ```sql
  SELECT pid, name, path, cmdline FROM processes WHERE name = 'espl';
  ```
- Investigate the parent process of the `espl` process to determine how it was initiated and identify any potential initial access vectors.
- Examine the user account associated with the `espl` process to determine if it is a legitimate user or if the account may have been compromised.
- Check for any network connections established by the `espl` process to identify potential command and control communication:
  ```sql
  SELECT pid, local_address, local_port, remote_address, remote_port FROM process_open_sockets WHERE pid IN (SELECT pid FROM processes WHERE name = 'espl');
  ```
- Analyze the process arguments and any encoded data within `eyJkZWJ1ZyI6` to understand the commands or payloads being executed.
- Review system logs for any signs of privilege escalation or lateral movement attempts following the execution of the `espl` process.
- Investigate any file modifications or new files created around the time of the alert to identify potential payloads or data exfiltration attempts.
- Cross-reference the alert with threat intelligence sources to determine if the observed behavior matches known EggShell Backdoor campaigns or tactics.

### False positive analysis

- Legitimate administrative tools or scripts that use similar process names or arguments as EggShell may trigger false positives. For instance, custom scripts or applications that include 'espl' in their process name or use encoded arguments starting with 'eyJkZWJ1ZyI6' could be mistakenly flagged.
- Developers or IT personnel testing security tools or conducting penetration tests might inadvertently execute processes that resemble EggShell activity, leading to false alerts.
- To manage these false positives, users can create exceptions for known benign processes by whitelisting specific process names or arguments that are regularly used in their environment but are confirmed to be non-threatening.
- Regularly review and update the list of exceptions to ensure that only verified non-malicious activities are excluded, maintaining a balance between security and operational efficiency.

### Response and remediation

- Immediately isolate the affected system from the network to prevent further unauthorized access and lateral movement.
- Conduct a thorough investigation to confirm the presence of the EggShell backdoor by analyzing process execution logs and correlating with known indicators of compromise.
- Terminate any suspicious processes associated with EggShell and remove any unauthorized user accounts or credentials that may have been created.
- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine the scope of the compromise.
- Implement enhanced logging policies to capture detailed process execution and network activity, ensuring future incidents can be detected more effectively.
- Integrate threat intelligence feeds and endpoint detection and response (EDR) solutions to improve detection capabilities for similar threats.
- Restore the system to its operational state by reinstalling the operating system and applications from trusted sources, ensuring all security patches are applied.
- Conduct a security audit of the affected system and network to identify and remediate any vulnerabilities that may have been exploited.
- Educate users on recognizing phishing attempts and other common attack vectors to reduce the risk of future compromises.
- Implement hardening measures such as disabling unnecessary services, enforcing strong password policies, and using multi-factor authentication to enhance overall security posture."""


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[rule.threat.technique.subtechnique]]
id = "T1059.006"
name = "Python"
reference = "https://attack.mitre.org/techniques/T1059/006/"



[rule.threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"

