name: Branch Version Status Checks

on:
  push:
    branches: [ "main", "7.*", "8.*" ]
  pull_request:
    branches: [ "*" ]
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      branches:
        description: "List of target branches"
        value: ${{ jobs.list-target-branches.outputs.matrix }}

jobs:
  list-target-branches:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-branch-list.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: get-branch-list
        run: echo "::set-output name=matrix::$(yq '.target_branch_list' ./detection_rules/etc/target-branches.yml)"

  branch-status-checks:
    needs: list-target-branches
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_branch: ${{ fromJSON(needs.list-target-branches.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get Backport Status
      id: get_backport_status
      uses: fjogeleit/http-request-action@v1
      with:
        url: "https://api.github.com/repos/elastic/detection-rules/actions/workflows/pythonpackage.yml/runs?per_page=1&branch=${{matrix.target_branch}}"
        method: 'GET'

    - name: Check Backport Status
      uses: actions/github-script@v6
      with:
        script: |
          const workflow_status = ${{ toJSON(fromJSON(steps.get_backport_status.outputs.response).workflow_runs[0].status) }}
          const workflow_conclusion = ${{ toJSON(fromJSON(steps.get_backport_status.outputs.response).workflow_runs[0].conclusion) }}
          if (workflow_status != 'completed' ||
              workflow_conclusion != 'success') {
            core.setFailed('Recent Backport status: ' + workflow_status + ', conclusion: ' + workflow_conclusion)
          }
