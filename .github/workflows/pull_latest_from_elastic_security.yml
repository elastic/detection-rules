name: Manually Sync Rules from Elastic Security to GitHub

on:
  workflow_dispatch:
    inputs:
      pr_sync_rules_from_elastic:
        description: 'Sync rules from Elastic Security (direct commit (false) vs PR (true))'
        required: true
        default: 'true'
      space:
        description: 'Specify the Kibana space to export rules from'
        required: false
        default: 'Default'

jobs:
  manual-dispatch-sync:
    runs-on: self-hosted
    env:
      CUSTOM_RULES_DIR: ${{ secrets.CUSTOM_RULES_DIR }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12.2
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'

      - name: Display IP address
        run: |
          curl ifconfig.me

      - name: Create and activate virtual environment
        run: |
          python -m venv env
          .\env\Scripts\activate.bat

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/env/Lib/site-packages" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          .\env\Scripts\activate.bat
          python -m pip install --upgrade pip
          pip cache purge
          pip install setuptools wheel
          pip install kqlMagic
          pip install click
          pip install .[dev]

      - name: Debug Environment Variables
        run: |
          echo "CUSTOM_RULES_DIR: ${{ env.CUSTOM_RULES_DIR }}"
          echo "DR_CLOUD_ID: ${{ secrets.CLOUD_ID }}"
          echo "DR_KIBANA_USER: ${{ secrets.KIBANA_USERNAME }}"
          echo "DR_KIBANA_PASSWORD: ${{ secrets.KIBANA_PASSWORD }}"

      - name: Export Rules from Elastic Security and Import Rules to TOML
        run: |
          .\env\Scripts\activate.bat
          python -m detection_rules kibana export-rules --directory ${{ env.CUSTOM_RULES_DIR }}
        env:
          DR_CLOUD_ID: ${{ secrets.CLOUD_ID }}
          DR_KIBANA_USER: ${{ secrets.KIBANA_USERNAME }}
          DR_KIBANA_PASSWORD: ${{ secrets.KIBANA_PASSWORD }}

      - name: Update Version Lock
        run: |
          .\env\Scripts\activate.bat
          python -m detection_rules dev update-lock-versions --force

      - name: Create Pull Request
        if: ${{ github.event.inputs.pr_sync_rules_from_elastic == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "Sync rules from Elastic Security"
          title: "Sync rules from Elastic Security"
          body: "This PR syncs rules from Elastic Security to the repository for review."
          branch: "sync-rules-${{ github.run_id }}"
          delete-branch: true
          labels: "auto-update"

      - name: Commit Directly to Main (DAC-feature)
        if: ${{ github.event.inputs.pr_sync_rules_from_elastic == 'false' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Manual dispatch sync"
          branch: DAC-feature
          file_pattern: "."
          commit_user_name: "GitHub Action"
          commit_user_email: "action@github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
