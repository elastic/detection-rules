name: Push Latest Rules to Elastic Security Space

on:
  push:
    branches:
      - main
    paths:
      - '**/*.toml'
  workflow_dispatch:
    inputs:
      overwrite:
        description: 'Overwrite existing rules'
        required: false
        default: 'true'
      overwrite_exceptions:
        description: 'Overwrite existing exceptions'
        required: false
        default: 'true'
      overwrite_action_connectors:
        description: 'Overwrite existing action connectors'
        required: false
        default: 'true'
      space:
        description: 'Kibana space to use (prod or non-prod)'
        required: false
        default: 'Default'

jobs:
  sync-to-production:
    runs-on: self-hosted
    env:
      CUSTOM_RULES_DIR: ${{ secrets.CUSTOM_RULES_DIR }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip cache purge
        pip install .[dev]
        
    - name: Import Rules to Kibana
      run: |
        $FLAGS = ""

        if ($env:GITHUB_EVENT_NAME -eq "push" -and ${{ github.event.inputs.overwrite }} -eq "true") {
            $FLAGS += " --overwrite"
        }

        if ($env:GITHUB_EVENT_NAME -eq "push" -and ${{ github.event.inputs.overwrite_exceptions }} -eq "true") {
            $FLAGS += " --overwrite-exceptions"
        }

        if ($env:GITHUB_EVENT_NAME -eq "push" -and ${{ github.event.inputs.overwrite_action_connectors }} -eq "true") {
            $FLAGS += " --overwrite-action-connectors"
        }

        $SPACE = ${{ github.event.inputs.space }}

        if (-not $SPACE) {
            $SPACE = "Default"
        }

        $SPACE_FLAG = "--space $SPACE"

        Write-Output $SPACE_FLAG
        Write-Output $FLAGS
        python -m detection_rules kibana $SPACE_FLAG import-rules $FLAGS    
      env:
        DR_CLOUD_ID: ${{ secrets.ELASTIC_CLOUD_ID }}
        DR_KIBANA_USER: ${{ secrets.ELASTIC_USERNAME }}
        DR_KIBANA_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}
